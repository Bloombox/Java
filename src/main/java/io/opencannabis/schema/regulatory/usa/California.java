/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regulatory/usa/ca/CAAgency.proto

package io.opencannabis.schema.regulatory.usa;

public final class California {
  private California() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Enumerates California executive agencies involved in cannabis licensure.
   * </pre>
   *
   * Protobuf enum {@code opencannabis.regulatory.usa.ca.CaliforniaAgency}
   */
  public enum CaliforniaAgency
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown agency backstop value.
     * </pre>
     *
     * <code>UNKNOWN_AGENCY = 0;</code>
     */
    UNKNOWN_AGENCY(0),
    /**
     * <pre>
     * California Department of Farm and Agriculture
     * </pre>
     *
     * <code>CDFA = 1;</code>
     */
    CDFA(1),
    /**
     * <pre>
     * Bureau of Cannabis Control
     * </pre>
     *
     * <code>CBCC = 2;</code>
     */
    CBCC(2),
    /**
     * <pre>
     * Department of Consumer Affairs
     * </pre>
     *
     * <code>CDCA = 3;</code>
     */
    CDCA(3),
    /**
     * <pre>
     * California Department of Public Health
     * </pre>
     *
     * <code>CDPH = 4;</code>
     */
    CDPH(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown agency backstop value.
     * </pre>
     *
     * <code>UNKNOWN_AGENCY = 0;</code>
     */
    public static final int UNKNOWN_AGENCY_VALUE = 0;
    /**
     * <pre>
     * California Department of Farm and Agriculture
     * </pre>
     *
     * <code>CDFA = 1;</code>
     */
    public static final int CDFA_VALUE = 1;
    /**
     * <pre>
     * Bureau of Cannabis Control
     * </pre>
     *
     * <code>CBCC = 2;</code>
     */
    public static final int CBCC_VALUE = 2;
    /**
     * <pre>
     * Department of Consumer Affairs
     * </pre>
     *
     * <code>CDCA = 3;</code>
     */
    public static final int CDCA_VALUE = 3;
    /**
     * <pre>
     * California Department of Public Health
     * </pre>
     *
     * <code>CDPH = 4;</code>
     */
    public static final int CDPH_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CaliforniaAgency valueOf(int value) {
      return forNumber(value);
    }

    public static CaliforniaAgency forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_AGENCY;
        case 1: return CDFA;
        case 2: return CBCC;
        case 3: return CDCA;
        case 4: return CDPH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CaliforniaAgency>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CaliforniaAgency> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CaliforniaAgency>() {
            public CaliforniaAgency findValueByNumber(int number) {
              return CaliforniaAgency.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.opencannabis.schema.regulatory.usa.California.getDescriptor().getEnumTypes().get(0);
    }

    private static final CaliforniaAgency[] VALUES = values();

    public static CaliforniaAgency valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CaliforniaAgency(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:opencannabis.regulatory.usa.ca.CaliforniaAgency)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n regulatory/usa/ca/CAAgency.proto\022\036open" +
      "cannabis.regulatory.usa.ca*N\n\020California" +
      "Agency\022\022\n\016UNKNOWN_AGENCY\020\000\022\010\n\004CDFA\020\001\022\010\n\004" +
      "CBCC\020\002\022\010\n\004CDCA\020\003\022\010\n\004CDPH\020\004B=\n%io.opencan" +
      "nabis.schema.regulatory.usaB\nCaliforniaH" +
      "\001P\000\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
