/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geo/Location.proto

package io.opencannabis.schema.geo;

/**
 * <pre>
 * Specifies a single distance value.
 * </pre>
 *
 * Protobuf type {@code opencannabis.geo.DistanceValue}
 */
public  final class DistanceValue extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opencannabis.geo.DistanceValue)
    DistanceValueOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DistanceValue.newBuilder() to construct.
  private DistanceValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DistanceValue() {
    unit_ = 0;
    value_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DistanceValue(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            unit_ = rawValue;
            break;
          }
          case 25: {

            value_ = input.readDouble();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opencannabis.schema.geo.LocationOuterClass.internal_static_opencannabis_geo_DistanceValue_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opencannabis.schema.geo.LocationOuterClass.internal_static_opencannabis_geo_DistanceValue_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opencannabis.schema.geo.DistanceValue.class, io.opencannabis.schema.geo.DistanceValue.Builder.class);
  }

  public static final int UNIT_FIELD_NUMBER = 1;
  private int unit_;
  /**
   * <pre>
   * Specifies the unit of measurement employed for this distance.
   * </pre>
   *
   * <code>.opencannabis.geo.DistanceUnit unit = 1 [(.gen_bq_schema.description) = "Specifies the unit of measurement employed for this distance."];</code>
   */
  public int getUnitValue() {
    return unit_;
  }
  /**
   * <pre>
   * Specifies the unit of measurement employed for this distance.
   * </pre>
   *
   * <code>.opencannabis.geo.DistanceUnit unit = 1 [(.gen_bq_schema.description) = "Specifies the unit of measurement employed for this distance."];</code>
   */
  public io.opencannabis.schema.geo.DistanceUnit getUnit() {
    io.opencannabis.schema.geo.DistanceUnit result = io.opencannabis.schema.geo.DistanceUnit.valueOf(unit_);
    return result == null ? io.opencannabis.schema.geo.DistanceUnit.UNRECOGNIZED : result;
  }

  public static final int VALUE_FIELD_NUMBER = 3;
  private double value_;
  /**
   * <pre>
   * Actual value.
   * </pre>
   *
   * <code>double value = 3 [(.gen_bq_schema.description) = "Actual distance value."];</code>
   */
  public double getValue() {
    return value_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (unit_ != io.opencannabis.schema.geo.DistanceUnit.METERS.getNumber()) {
      output.writeEnum(1, unit_);
    }
    if (value_ != 0D) {
      output.writeDouble(3, value_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (unit_ != io.opencannabis.schema.geo.DistanceUnit.METERS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, unit_);
    }
    if (value_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, value_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opencannabis.schema.geo.DistanceValue)) {
      return super.equals(obj);
    }
    io.opencannabis.schema.geo.DistanceValue other = (io.opencannabis.schema.geo.DistanceValue) obj;

    boolean result = true;
    result = result && unit_ == other.unit_;
    result = result && (
        java.lang.Double.doubleToLongBits(getValue())
        == java.lang.Double.doubleToLongBits(
            other.getValue()));
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + UNIT_FIELD_NUMBER;
    hash = (53 * hash) + unit_;
    hash = (37 * hash) + VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getValue()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opencannabis.schema.geo.DistanceValue parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.geo.DistanceValue parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opencannabis.schema.geo.DistanceValue prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies a single distance value.
   * </pre>
   *
   * Protobuf type {@code opencannabis.geo.DistanceValue}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opencannabis.geo.DistanceValue)
      io.opencannabis.schema.geo.DistanceValueOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.geo.LocationOuterClass.internal_static_opencannabis_geo_DistanceValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.geo.LocationOuterClass.internal_static_opencannabis_geo_DistanceValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.geo.DistanceValue.class, io.opencannabis.schema.geo.DistanceValue.Builder.class);
    }

    // Construct using io.opencannabis.schema.geo.DistanceValue.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      unit_ = 0;

      value_ = 0D;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opencannabis.schema.geo.LocationOuterClass.internal_static_opencannabis_geo_DistanceValue_descriptor;
    }

    public io.opencannabis.schema.geo.DistanceValue getDefaultInstanceForType() {
      return io.opencannabis.schema.geo.DistanceValue.getDefaultInstance();
    }

    public io.opencannabis.schema.geo.DistanceValue build() {
      io.opencannabis.schema.geo.DistanceValue result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.opencannabis.schema.geo.DistanceValue buildPartial() {
      io.opencannabis.schema.geo.DistanceValue result = new io.opencannabis.schema.geo.DistanceValue(this);
      result.unit_ = unit_;
      result.value_ = value_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opencannabis.schema.geo.DistanceValue) {
        return mergeFrom((io.opencannabis.schema.geo.DistanceValue)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opencannabis.schema.geo.DistanceValue other) {
      if (other == io.opencannabis.schema.geo.DistanceValue.getDefaultInstance()) return this;
      if (other.unit_ != 0) {
        setUnitValue(other.getUnitValue());
      }
      if (other.getValue() != 0D) {
        setValue(other.getValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.opencannabis.schema.geo.DistanceValue parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.opencannabis.schema.geo.DistanceValue) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int unit_ = 0;
    /**
     * <pre>
     * Specifies the unit of measurement employed for this distance.
     * </pre>
     *
     * <code>.opencannabis.geo.DistanceUnit unit = 1 [(.gen_bq_schema.description) = "Specifies the unit of measurement employed for this distance."];</code>
     */
    public int getUnitValue() {
      return unit_;
    }
    /**
     * <pre>
     * Specifies the unit of measurement employed for this distance.
     * </pre>
     *
     * <code>.opencannabis.geo.DistanceUnit unit = 1 [(.gen_bq_schema.description) = "Specifies the unit of measurement employed for this distance."];</code>
     */
    public Builder setUnitValue(int value) {
      unit_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the unit of measurement employed for this distance.
     * </pre>
     *
     * <code>.opencannabis.geo.DistanceUnit unit = 1 [(.gen_bq_schema.description) = "Specifies the unit of measurement employed for this distance."];</code>
     */
    public io.opencannabis.schema.geo.DistanceUnit getUnit() {
      io.opencannabis.schema.geo.DistanceUnit result = io.opencannabis.schema.geo.DistanceUnit.valueOf(unit_);
      return result == null ? io.opencannabis.schema.geo.DistanceUnit.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Specifies the unit of measurement employed for this distance.
     * </pre>
     *
     * <code>.opencannabis.geo.DistanceUnit unit = 1 [(.gen_bq_schema.description) = "Specifies the unit of measurement employed for this distance."];</code>
     */
    public Builder setUnit(io.opencannabis.schema.geo.DistanceUnit value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      unit_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the unit of measurement employed for this distance.
     * </pre>
     *
     * <code>.opencannabis.geo.DistanceUnit unit = 1 [(.gen_bq_schema.description) = "Specifies the unit of measurement employed for this distance."];</code>
     */
    public Builder clearUnit() {
      
      unit_ = 0;
      onChanged();
      return this;
    }

    private double value_ ;
    /**
     * <pre>
     * Actual value.
     * </pre>
     *
     * <code>double value = 3 [(.gen_bq_schema.description) = "Actual distance value."];</code>
     */
    public double getValue() {
      return value_;
    }
    /**
     * <pre>
     * Actual value.
     * </pre>
     *
     * <code>double value = 3 [(.gen_bq_schema.description) = "Actual distance value."];</code>
     */
    public Builder setValue(double value) {
      
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Actual value.
     * </pre>
     *
     * <code>double value = 3 [(.gen_bq_schema.description) = "Actual distance value."];</code>
     */
    public Builder clearValue() {
      
      value_ = 0D;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opencannabis.geo.DistanceValue)
  }

  // @@protoc_insertion_point(class_scope:opencannabis.geo.DistanceValue)
  private static final io.opencannabis.schema.geo.DistanceValue DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opencannabis.schema.geo.DistanceValue();
  }

  public static io.opencannabis.schema.geo.DistanceValue getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DistanceValue>
      PARSER = new com.google.protobuf.AbstractParser<DistanceValue>() {
    public DistanceValue parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DistanceValue(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DistanceValue> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DistanceValue> getParserForType() {
    return PARSER;
  }

  public io.opencannabis.schema.geo.DistanceValue getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

