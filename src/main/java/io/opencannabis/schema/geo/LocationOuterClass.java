/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geo/Location.proto

package io.opencannabis.schema.geo;

public final class LocationOuterClass {
  private LocationOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opencannabis_geo_Location_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opencannabis_geo_Location_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022geo/Location.proto\022\020opencannabis.geo\032\016" +
      "bq_field.proto\032\017geo/Point.proto\032\021geo/Add" +
      "ress.proto\032\022geo/Distance.proto\032\022content/" +
      "Name.proto\"\373\002\n\010Location\022S\n\004name\030\001 \001(\0132\032." +
      "opencannabis.content.NameB)\212@&Name for t" +
      "his location, if applicable.\022X\n\007address\030" +
      "\002 \001(\0132\031.opencannabis.geo.AddressB,\212@)Add" +
      "ress for this location, if applicable.\022[" +
      "\n\005point\030\003 \001(\0132\027.opencannabis.geo.PointB3" +
      "\212@0Geopoint (latitude/longitude) for thi" +
      "s location.\022c\n\010accuracy\030\004 \001(\0132\".opencann" +
      "abis.geo.LocationAccuracyB-\212@*Specifies " +
      "the accuracy estimate, if known.B&\n\032io.o" +
      "pencannabis.schema.geoH\001P\001\242\002\003OCSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gen_bq_schema.BqField.getDescriptor(),
          io.opencannabis.schema.geo.PointOuterClass.getDescriptor(),
          io.opencannabis.schema.geo.AddressOuterClass.getDescriptor(),
          io.opencannabis.schema.geo.DistanceOuterClass.getDescriptor(),
          io.opencannabis.schema.content.NameContent.getDescriptor(),
        }, assigner);
    internal_static_opencannabis_geo_Location_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opencannabis_geo_Location_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opencannabis_geo_Location_descriptor,
        new java.lang.String[] { "Name", "Address", "Point", "Accuracy", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    gen_bq_schema.BqField.getDescriptor();
    io.opencannabis.schema.geo.PointOuterClass.getDescriptor();
    io.opencannabis.schema.geo.AddressOuterClass.getDescriptor();
    io.opencannabis.schema.geo.DistanceOuterClass.getDescriptor();
    io.opencannabis.schema.content.NameContent.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
