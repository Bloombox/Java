// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geo/Location.proto

package io.opencannabis.schema.geo;

public interface DistanceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.geo.Distance)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies whether this distance is an estimate.
   * </pre>
   *
   * <code>bool estimate = 1 [(.gen_bq_schema.description) = "Specifies whether this distance is an estimate."];</code>
   */
  boolean getEstimate();

  /**
   * <pre>
   * Specifies the accuracy estimate for the distance values, if known.
   * </pre>
   *
   * <code>.opencannabis.geo.LocationAccuracy accuracy = 2 [(.gen_bq_schema.description) = "Specifies the accuracy estimate for the distance values, if known."];</code>
   */
  boolean hasAccuracy();
  /**
   * <pre>
   * Specifies the accuracy estimate for the distance values, if known.
   * </pre>
   *
   * <code>.opencannabis.geo.LocationAccuracy accuracy = 2 [(.gen_bq_schema.description) = "Specifies the accuracy estimate for the distance values, if known."];</code>
   */
  io.opencannabis.schema.geo.LocationAccuracy getAccuracy();
  /**
   * <pre>
   * Specifies the accuracy estimate for the distance values, if known.
   * </pre>
   *
   * <code>.opencannabis.geo.LocationAccuracy accuracy = 2 [(.gen_bq_schema.description) = "Specifies the accuracy estimate for the distance values, if known."];</code>
   */
  io.opencannabis.schema.geo.LocationAccuracyOrBuilder getAccuracyOrBuilder();

  /**
   * <pre>
   * Specifies the unit of measurement for a location accuracy estimate.
   * </pre>
   *
   * <code>.opencannabis.geo.DistanceUnit unit = 3 [(.gen_bq_schema.description) = "Specifies whether this distance is an estimate."];</code>
   */
  int getUnitValue();
  /**
   * <pre>
   * Specifies the unit of measurement for a location accuracy estimate.
   * </pre>
   *
   * <code>.opencannabis.geo.DistanceUnit unit = 3 [(.gen_bq_schema.description) = "Specifies whether this distance is an estimate."];</code>
   */
  io.opencannabis.schema.geo.DistanceUnit getUnit();

  /**
   * <pre>
   * Specifies the starting location for a distance span.
   * </pre>
   *
   * <code>.opencannabis.geo.Location start = 4 [(.gen_bq_schema.description) = "Specifies the starting location for a distance span."];</code>
   */
  boolean hasStart();
  /**
   * <pre>
   * Specifies the starting location for a distance span.
   * </pre>
   *
   * <code>.opencannabis.geo.Location start = 4 [(.gen_bq_schema.description) = "Specifies the starting location for a distance span."];</code>
   */
  io.opencannabis.schema.geo.Location getStart();
  /**
   * <pre>
   * Specifies the starting location for a distance span.
   * </pre>
   *
   * <code>.opencannabis.geo.Location start = 4 [(.gen_bq_schema.description) = "Specifies the starting location for a distance span."];</code>
   */
  io.opencannabis.schema.geo.LocationOrBuilder getStartOrBuilder();

  /**
   * <pre>
   * Specifies the terminating location for a distance span.
   * </pre>
   *
   * <code>.opencannabis.geo.Location end = 5 [(.gen_bq_schema.description) = "Specifies the terminating location for a distance span."];</code>
   */
  boolean hasEnd();
  /**
   * <pre>
   * Specifies the terminating location for a distance span.
   * </pre>
   *
   * <code>.opencannabis.geo.Location end = 5 [(.gen_bq_schema.description) = "Specifies the terminating location for a distance span."];</code>
   */
  io.opencannabis.schema.geo.Location getEnd();
  /**
   * <pre>
   * Specifies the terminating location for a distance span.
   * </pre>
   *
   * <code>.opencannabis.geo.Location end = 5 [(.gen_bq_schema.description) = "Specifies the terminating location for a distance span."];</code>
   */
  io.opencannabis.schema.geo.LocationOrBuilder getEndOrBuilder();
}
