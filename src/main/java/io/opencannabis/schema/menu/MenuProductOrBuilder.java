/*
 * Copyright 2018, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: products/menu/Menu.proto

package io.opencannabis.schema.menu;

public interface MenuProductOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.products.menu.MenuProduct)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Key record uniquely identifying this menu product. Keys for saved items are lifted to this property from the
   * attached concrete record below.
   * </pre>
   *
   * <code>.opencannabis.base.ProductKey key = 1 [(.core.field) = { ... }</code>
   */
  boolean hasKey();
  /**
   * <pre>
   * Key record uniquely identifying this menu product. Keys for saved items are lifted to this property from the
   * attached concrete record below.
   * </pre>
   *
   * <code>.opencannabis.base.ProductKey key = 1 [(.core.field) = { ... }</code>
   */
  io.opencannabis.schema.base.BaseProductKey.ProductKey getKey();
  /**
   * <pre>
   * Key record uniquely identifying this menu product. Keys for saved items are lifted to this property from the
   * attached concrete record below.
   * </pre>
   *
   * <code>.opencannabis.base.ProductKey key = 1 [(.core.field) = { ... }</code>
   */
  io.opencannabis.schema.base.BaseProductKey.ProductKeyOrBuilder getKeyOrBuilder();

  /**
   * <pre>
   * Product tags attached to this entry. Product tags are arbitrary phrases or strings that may be attached to product
   * records to help categorize them or facilitate their management. They are not generally end-user-visible.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ProductTag tag = 2;</code>
   */
  java.util.List<io.opencannabis.schema.menu.ProductTag> 
      getTagList();
  /**
   * <pre>
   * Product tags attached to this entry. Product tags are arbitrary phrases or strings that may be attached to product
   * records to help categorize them or facilitate their management. They are not generally end-user-visible.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ProductTag tag = 2;</code>
   */
  io.opencannabis.schema.menu.ProductTag getTag(int index);
  /**
   * <pre>
   * Product tags attached to this entry. Product tags are arbitrary phrases or strings that may be attached to product
   * records to help categorize them or facilitate their management. They are not generally end-user-visible.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ProductTag tag = 2;</code>
   */
  int getTagCount();
  /**
   * <pre>
   * Product tags attached to this entry. Product tags are arbitrary phrases or strings that may be attached to product
   * records to help categorize them or facilitate their management. They are not generally end-user-visible.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ProductTag tag = 2;</code>
   */
  java.util.List<? extends io.opencannabis.schema.menu.ProductTagOrBuilder> 
      getTagOrBuilderList();
  /**
   * <pre>
   * Product tags attached to this entry. Product tags are arbitrary phrases or strings that may be attached to product
   * records to help categorize them or facilitate their management. They are not generally end-user-visible.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ProductTag tag = 2;</code>
   */
  io.opencannabis.schema.menu.ProductTagOrBuilder getTagOrBuilder(
      int index);

  /**
   * <pre>
   * Set of foreign references for this product, or, instances in which this product exists in an out-of-network system,
   * in a uniquely identifiable way.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ForeignReference ref = 3;</code>
   */
  java.util.List<io.opencannabis.schema.menu.ForeignReference> 
      getRefList();
  /**
   * <pre>
   * Set of foreign references for this product, or, instances in which this product exists in an out-of-network system,
   * in a uniquely identifiable way.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ForeignReference ref = 3;</code>
   */
  io.opencannabis.schema.menu.ForeignReference getRef(int index);
  /**
   * <pre>
   * Set of foreign references for this product, or, instances in which this product exists in an out-of-network system,
   * in a uniquely identifiable way.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ForeignReference ref = 3;</code>
   */
  int getRefCount();
  /**
   * <pre>
   * Set of foreign references for this product, or, instances in which this product exists in an out-of-network system,
   * in a uniquely identifiable way.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ForeignReference ref = 3;</code>
   */
  java.util.List<? extends io.opencannabis.schema.menu.ForeignReferenceOrBuilder> 
      getRefOrBuilderList();
  /**
   * <pre>
   * Set of foreign references for this product, or, instances in which this product exists in an out-of-network system,
   * in a uniquely identifiable way.
   * </pre>
   *
   * <code>repeated .opencannabis.products.menu.ForeignReference ref = 3;</code>
   */
  io.opencannabis.schema.menu.ForeignReferenceOrBuilder getRefOrBuilder(
      int index);

  /**
   * <pre>
   * Apothecary product.
   * </pre>
   *
   * <code>.opencannabis.products.Apothecary apothecary = 10;</code>
   */
  boolean hasApothecary();
  /**
   * <pre>
   * Apothecary product.
   * </pre>
   *
   * <code>.opencannabis.products.Apothecary apothecary = 10;</code>
   */
  io.opencannabis.schema.product.ApothecaryProduct.Apothecary getApothecary();
  /**
   * <pre>
   * Apothecary product.
   * </pre>
   *
   * <code>.opencannabis.products.Apothecary apothecary = 10;</code>
   */
  io.opencannabis.schema.product.ApothecaryProduct.ApothecaryOrBuilder getApothecaryOrBuilder();

  /**
   * <pre>
   * Cartridge product.
   * </pre>
   *
   * <code>.opencannabis.products.Cartridge cartridge = 11;</code>
   */
  boolean hasCartridge();
  /**
   * <pre>
   * Cartridge product.
   * </pre>
   *
   * <code>.opencannabis.products.Cartridge cartridge = 11;</code>
   */
  io.opencannabis.schema.product.CartridgeProduct.Cartridge getCartridge();
  /**
   * <pre>
   * Cartridge product.
   * </pre>
   *
   * <code>.opencannabis.products.Cartridge cartridge = 11;</code>
   */
  io.opencannabis.schema.product.CartridgeProduct.CartridgeOrBuilder getCartridgeOrBuilder();

  /**
   * <pre>
   * Edible product.
   * </pre>
   *
   * <code>.opencannabis.products.Edible edible = 12;</code>
   */
  boolean hasEdible();
  /**
   * <pre>
   * Edible product.
   * </pre>
   *
   * <code>.opencannabis.products.Edible edible = 12;</code>
   */
  io.opencannabis.schema.product.EdibleProduct.Edible getEdible();
  /**
   * <pre>
   * Edible product.
   * </pre>
   *
   * <code>.opencannabis.products.Edible edible = 12;</code>
   */
  io.opencannabis.schema.product.EdibleProduct.EdibleOrBuilder getEdibleOrBuilder();

  /**
   * <pre>
   * Extract product.
   * </pre>
   *
   * <code>.opencannabis.products.Extract extract = 13;</code>
   */
  boolean hasExtract();
  /**
   * <pre>
   * Extract product.
   * </pre>
   *
   * <code>.opencannabis.products.Extract extract = 13;</code>
   */
  io.opencannabis.schema.product.ExtractProduct.Extract getExtract();
  /**
   * <pre>
   * Extract product.
   * </pre>
   *
   * <code>.opencannabis.products.Extract extract = 13;</code>
   */
  io.opencannabis.schema.product.ExtractProduct.ExtractOrBuilder getExtractOrBuilder();

  /**
   * <pre>
   * Flower product.
   * </pre>
   *
   * <code>.opencannabis.products.Flower flower = 14;</code>
   */
  boolean hasFlower();
  /**
   * <pre>
   * Flower product.
   * </pre>
   *
   * <code>.opencannabis.products.Flower flower = 14;</code>
   */
  io.opencannabis.schema.product.FlowerProduct.Flower getFlower();
  /**
   * <pre>
   * Flower product.
   * </pre>
   *
   * <code>.opencannabis.products.Flower flower = 14;</code>
   */
  io.opencannabis.schema.product.FlowerProduct.FlowerOrBuilder getFlowerOrBuilder();

  /**
   * <pre>
   * Merchandise product.
   * </pre>
   *
   * <code>.opencannabis.products.Merchandise merchandise = 15;</code>
   */
  boolean hasMerchandise();
  /**
   * <pre>
   * Merchandise product.
   * </pre>
   *
   * <code>.opencannabis.products.Merchandise merchandise = 15;</code>
   */
  io.opencannabis.schema.product.MerchandiseProduct.Merchandise getMerchandise();
  /**
   * <pre>
   * Merchandise product.
   * </pre>
   *
   * <code>.opencannabis.products.Merchandise merchandise = 15;</code>
   */
  io.opencannabis.schema.product.MerchandiseProduct.MerchandiseOrBuilder getMerchandiseOrBuilder();

  /**
   * <pre>
   * Plant product.
   * </pre>
   *
   * <code>.opencannabis.products.Plant plant = 16;</code>
   */
  boolean hasPlant();
  /**
   * <pre>
   * Plant product.
   * </pre>
   *
   * <code>.opencannabis.products.Plant plant = 16;</code>
   */
  io.opencannabis.schema.product.PlantProduct.Plant getPlant();
  /**
   * <pre>
   * Plant product.
   * </pre>
   *
   * <code>.opencannabis.products.Plant plant = 16;</code>
   */
  io.opencannabis.schema.product.PlantProduct.PlantOrBuilder getPlantOrBuilder();

  /**
   * <pre>
   * Preroll product.
   * </pre>
   *
   * <code>.opencannabis.products.Preroll preroll = 17;</code>
   */
  boolean hasPreroll();
  /**
   * <pre>
   * Preroll product.
   * </pre>
   *
   * <code>.opencannabis.products.Preroll preroll = 17;</code>
   */
  io.opencannabis.schema.product.PrerollProduct.Preroll getPreroll();
  /**
   * <pre>
   * Preroll product.
   * </pre>
   *
   * <code>.opencannabis.products.Preroll preroll = 17;</code>
   */
  io.opencannabis.schema.product.PrerollProduct.PrerollOrBuilder getPrerollOrBuilder();

  public io.opencannabis.schema.menu.MenuProduct.ProductCase getProductCase();
}
