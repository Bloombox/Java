/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto/Container.proto

package io.opencannabis.schema.crypto;

public final class Container {
  private Container() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opencannabis_crypto_EncryptedData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opencannabis_crypto_EncryptedData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opencannabis_crypto_EncryptedContainer_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opencannabis_crypto_EncryptedContainer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026crypto/Container.proto\022\023opencannabis.c" +
      "rypto\032\026base/Compression.proto\032\025content/C" +
      "ontent.proto\032\034crypto/primitives/Keys.pro" +
      "to\032!crypto/primitives/Integrity.proto\"\264\001" +
      "\n\rEncryptedData\022\014\n\004data\030\001 \001(\014\0220\n\010encodin" +
      "g\030\002 \001(\0162\036.opencannabis.content.Encoding\022" +
      "3\n\013compression\030\003 \001(\0132\036.opencannabis.base" +
      ".Compression\022.\n\013fingerprint\030\004 \001(\0132\031.open" +
      "cannabis.crypto.Hash\"\301\002\n\022EncryptedContai" +
      "ner\0223\n\007payload\030\001 \001(\0132\".opencannabis.cryp" +
      "to.EncryptedData\022,\n\006keying\030\002 \001(\0162\034.openc" +
      "annabis.crypto.KeyType\0229\n\006vector\030\003 \001(\0132)" +
      ".opencannabis.crypto.InitializationVecto" +
      "r\022:\n\003key\030\004 \001(\0132+.opencannabis.crypto.Sym" +
      "metricKeyParametersH\000\022C\n\007keypair\030\005 \001(\01320" +
      ".opencannabis.crypto.AsymmetricKeypairPa" +
      "rametersH\000B\014\n\nparametersB)\n\035io.opencanna" +
      "bis.schema.cryptoH\001P\001\242\002\003OCSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.opencannabis.schema.base.BaseCompression.getDescriptor(),
          io.opencannabis.schema.content.GenericContent.getDescriptor(),
          io.opencannabis.schema.crypto.primitives.Keys.getDescriptor(),
          io.opencannabis.schema.crypto.primitives.integrity.Integrity.getDescriptor(),
        }, assigner);
    internal_static_opencannabis_crypto_EncryptedData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opencannabis_crypto_EncryptedData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opencannabis_crypto_EncryptedData_descriptor,
        new java.lang.String[] { "Data", "Encoding", "Compression", "Fingerprint", });
    internal_static_opencannabis_crypto_EncryptedContainer_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_opencannabis_crypto_EncryptedContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opencannabis_crypto_EncryptedContainer_descriptor,
        new java.lang.String[] { "Payload", "Keying", "Vector", "Key", "Keypair", "Parameters", });
    io.opencannabis.schema.base.BaseCompression.getDescriptor();
    io.opencannabis.schema.content.GenericContent.getDescriptor();
    io.opencannabis.schema.crypto.primitives.Keys.getDescriptor();
    io.opencannabis.schema.crypto.primitives.integrity.Integrity.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
