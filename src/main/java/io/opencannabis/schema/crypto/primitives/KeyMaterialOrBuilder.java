/*
 * Copyright 2018, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto/primitives/Keys.proto

package io.opencannabis.schema.crypto.primitives;

public interface KeyMaterialOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.crypto.KeyMaterial)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Cryptographic hash of the key in question.
   * </pre>
   *
   * <code>.opencannabis.crypto.Hash fingerprint = 1;</code>
   */
  boolean hasFingerprint();
  /**
   * <pre>
   * Cryptographic hash of the key in question.
   * </pre>
   *
   * <code>.opencannabis.crypto.Hash fingerprint = 1;</code>
   */
  io.opencannabis.schema.crypto.primitives.integrity.Hash getFingerprint();
  /**
   * <pre>
   * Cryptographic hash of the key in question.
   * </pre>
   *
   * <code>.opencannabis.crypto.Hash fingerprint = 1;</code>
   */
  io.opencannabis.schema.crypto.primitives.integrity.HashOrBuilder getFingerprintOrBuilder();

  /**
   * <pre>
   * Parameters regarding the subject key.
   * </pre>
   *
   * <code>.opencannabis.crypto.KeyParameters params = 2;</code>
   */
  boolean hasParams();
  /**
   * <pre>
   * Parameters regarding the subject key.
   * </pre>
   *
   * <code>.opencannabis.crypto.KeyParameters params = 2;</code>
   */
  io.opencannabis.schema.crypto.primitives.KeyParameters getParams();
  /**
   * <pre>
   * Parameters regarding the subject key.
   * </pre>
   *
   * <code>.opencannabis.crypto.KeyParameters params = 2;</code>
   */
  io.opencannabis.schema.crypto.primitives.KeyParametersOrBuilder getParamsOrBuilder();

  /**
   * <pre>
   * Raw bytes of the key itself.
   * </pre>
   *
   * <code>bytes raw = 10;</code>
   */
  com.google.protobuf.ByteString getRaw();

  /**
   * <pre>
   * Key, encoded in PEM format.
   * </pre>
   *
   * <code>string pem = 11;</code>
   */
  java.lang.String getPem();
  /**
   * <pre>
   * Key, encoded in PEM format.
   * </pre>
   *
   * <code>string pem = 11;</code>
   */
  com.google.protobuf.ByteString
      getPemBytes();

  public io.opencannabis.schema.crypto.primitives.KeyMaterial.DataCase getDataCase();
}
