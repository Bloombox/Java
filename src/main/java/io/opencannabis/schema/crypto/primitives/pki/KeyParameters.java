/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto/primitives/Keypair.proto

package io.opencannabis.schema.crypto.primitives.pki;

/**
 * <pre>
 * Specifies parameters used to generate an underlying keypair.
 * </pre>
 *
 * Protobuf type {@code opencannabis.crypto.primitives.pki.KeyParameters}
 */
public  final class KeyParameters extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opencannabis.crypto.primitives.pki.KeyParameters)
    KeyParametersOrBuilder {
private static final long serialVersionUID = 0L;
  // Use KeyParameters.newBuilder() to construct.
  private KeyParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private KeyParameters() {
    scheme_ = 0;
    algorithm_ = "";
    format_ = "";
    bits_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private KeyParameters(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            scheme_ = rawValue;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            algorithm_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            format_ = s;
            break;
          }
          case 32: {

            bits_ = input.readUInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opencannabis.schema.crypto.primitives.pki.KeypairOuterClass.internal_static_opencannabis_crypto_primitives_pki_KeyParameters_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opencannabis.schema.crypto.primitives.pki.KeypairOuterClass.internal_static_opencannabis_crypto_primitives_pki_KeyParameters_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opencannabis.schema.crypto.primitives.pki.KeyParameters.class, io.opencannabis.schema.crypto.primitives.pki.KeyParameters.Builder.class);
  }

  public static final int SCHEME_FIELD_NUMBER = 1;
  private int scheme_;
  /**
   * <pre>
   * Key type/keying scheme.
   * </pre>
   *
   * <code>.opencannabis.crypto.primitives.pki.KeyingScheme scheme = 1;</code>
   */
  public int getSchemeValue() {
    return scheme_;
  }
  /**
   * <pre>
   * Key type/keying scheme.
   * </pre>
   *
   * <code>.opencannabis.crypto.primitives.pki.KeyingScheme scheme = 1;</code>
   */
  public io.opencannabis.schema.crypto.primitives.pki.KeyingScheme getScheme() {
    io.opencannabis.schema.crypto.primitives.pki.KeyingScheme result = io.opencannabis.schema.crypto.primitives.pki.KeyingScheme.valueOf(scheme_);
    return result == null ? io.opencannabis.schema.crypto.primitives.pki.KeyingScheme.UNRECOGNIZED : result;
  }

  public static final int ALGORITHM_FIELD_NUMBER = 2;
  private volatile java.lang.Object algorithm_;
  /**
   * <pre>
   * Algorithm in use to generate the key.
   * </pre>
   *
   * <code>string algorithm = 2;</code>
   */
  public java.lang.String getAlgorithm() {
    java.lang.Object ref = algorithm_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      algorithm_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Algorithm in use to generate the key.
   * </pre>
   *
   * <code>string algorithm = 2;</code>
   */
  public com.google.protobuf.ByteString
      getAlgorithmBytes() {
    java.lang.Object ref = algorithm_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      algorithm_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FORMAT_FIELD_NUMBER = 3;
  private volatile java.lang.Object format_;
  /**
   * <pre>
   * Format name for the key.
   * </pre>
   *
   * <code>string format = 3;</code>
   */
  public java.lang.String getFormat() {
    java.lang.Object ref = format_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      format_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Format name for the key.
   * </pre>
   *
   * <code>string format = 3;</code>
   */
  public com.google.protobuf.ByteString
      getFormatBytes() {
    java.lang.Object ref = format_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      format_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BITS_FIELD_NUMBER = 4;
  private int bits_;
  /**
   * <pre>
   * Key size, in bits, if applicable.
   * </pre>
   *
   * <code>uint32 bits = 4;</code>
   */
  public int getBits() {
    return bits_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (scheme_ != io.opencannabis.schema.crypto.primitives.pki.KeyingScheme.RSA.getNumber()) {
      output.writeEnum(1, scheme_);
    }
    if (!getAlgorithmBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, algorithm_);
    }
    if (!getFormatBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, format_);
    }
    if (bits_ != 0) {
      output.writeUInt32(4, bits_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (scheme_ != io.opencannabis.schema.crypto.primitives.pki.KeyingScheme.RSA.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, scheme_);
    }
    if (!getAlgorithmBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, algorithm_);
    }
    if (!getFormatBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, format_);
    }
    if (bits_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, bits_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opencannabis.schema.crypto.primitives.pki.KeyParameters)) {
      return super.equals(obj);
    }
    io.opencannabis.schema.crypto.primitives.pki.KeyParameters other = (io.opencannabis.schema.crypto.primitives.pki.KeyParameters) obj;

    boolean result = true;
    result = result && scheme_ == other.scheme_;
    result = result && getAlgorithm()
        .equals(other.getAlgorithm());
    result = result && getFormat()
        .equals(other.getFormat());
    result = result && (getBits()
        == other.getBits());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SCHEME_FIELD_NUMBER;
    hash = (53 * hash) + scheme_;
    hash = (37 * hash) + ALGORITHM_FIELD_NUMBER;
    hash = (53 * hash) + getAlgorithm().hashCode();
    hash = (37 * hash) + FORMAT_FIELD_NUMBER;
    hash = (53 * hash) + getFormat().hashCode();
    hash = (37 * hash) + BITS_FIELD_NUMBER;
    hash = (53 * hash) + getBits();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opencannabis.schema.crypto.primitives.pki.KeyParameters prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies parameters used to generate an underlying keypair.
   * </pre>
   *
   * Protobuf type {@code opencannabis.crypto.primitives.pki.KeyParameters}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opencannabis.crypto.primitives.pki.KeyParameters)
      io.opencannabis.schema.crypto.primitives.pki.KeyParametersOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.crypto.primitives.pki.KeypairOuterClass.internal_static_opencannabis_crypto_primitives_pki_KeyParameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.crypto.primitives.pki.KeypairOuterClass.internal_static_opencannabis_crypto_primitives_pki_KeyParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.crypto.primitives.pki.KeyParameters.class, io.opencannabis.schema.crypto.primitives.pki.KeyParameters.Builder.class);
    }

    // Construct using io.opencannabis.schema.crypto.primitives.pki.KeyParameters.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      scheme_ = 0;

      algorithm_ = "";

      format_ = "";

      bits_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opencannabis.schema.crypto.primitives.pki.KeypairOuterClass.internal_static_opencannabis_crypto_primitives_pki_KeyParameters_descriptor;
    }

    public io.opencannabis.schema.crypto.primitives.pki.KeyParameters getDefaultInstanceForType() {
      return io.opencannabis.schema.crypto.primitives.pki.KeyParameters.getDefaultInstance();
    }

    public io.opencannabis.schema.crypto.primitives.pki.KeyParameters build() {
      io.opencannabis.schema.crypto.primitives.pki.KeyParameters result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.opencannabis.schema.crypto.primitives.pki.KeyParameters buildPartial() {
      io.opencannabis.schema.crypto.primitives.pki.KeyParameters result = new io.opencannabis.schema.crypto.primitives.pki.KeyParameters(this);
      result.scheme_ = scheme_;
      result.algorithm_ = algorithm_;
      result.format_ = format_;
      result.bits_ = bits_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opencannabis.schema.crypto.primitives.pki.KeyParameters) {
        return mergeFrom((io.opencannabis.schema.crypto.primitives.pki.KeyParameters)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opencannabis.schema.crypto.primitives.pki.KeyParameters other) {
      if (other == io.opencannabis.schema.crypto.primitives.pki.KeyParameters.getDefaultInstance()) return this;
      if (other.scheme_ != 0) {
        setSchemeValue(other.getSchemeValue());
      }
      if (!other.getAlgorithm().isEmpty()) {
        algorithm_ = other.algorithm_;
        onChanged();
      }
      if (!other.getFormat().isEmpty()) {
        format_ = other.format_;
        onChanged();
      }
      if (other.getBits() != 0) {
        setBits(other.getBits());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.opencannabis.schema.crypto.primitives.pki.KeyParameters parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.opencannabis.schema.crypto.primitives.pki.KeyParameters) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int scheme_ = 0;
    /**
     * <pre>
     * Key type/keying scheme.
     * </pre>
     *
     * <code>.opencannabis.crypto.primitives.pki.KeyingScheme scheme = 1;</code>
     */
    public int getSchemeValue() {
      return scheme_;
    }
    /**
     * <pre>
     * Key type/keying scheme.
     * </pre>
     *
     * <code>.opencannabis.crypto.primitives.pki.KeyingScheme scheme = 1;</code>
     */
    public Builder setSchemeValue(int value) {
      scheme_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Key type/keying scheme.
     * </pre>
     *
     * <code>.opencannabis.crypto.primitives.pki.KeyingScheme scheme = 1;</code>
     */
    public io.opencannabis.schema.crypto.primitives.pki.KeyingScheme getScheme() {
      io.opencannabis.schema.crypto.primitives.pki.KeyingScheme result = io.opencannabis.schema.crypto.primitives.pki.KeyingScheme.valueOf(scheme_);
      return result == null ? io.opencannabis.schema.crypto.primitives.pki.KeyingScheme.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Key type/keying scheme.
     * </pre>
     *
     * <code>.opencannabis.crypto.primitives.pki.KeyingScheme scheme = 1;</code>
     */
    public Builder setScheme(io.opencannabis.schema.crypto.primitives.pki.KeyingScheme value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      scheme_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Key type/keying scheme.
     * </pre>
     *
     * <code>.opencannabis.crypto.primitives.pki.KeyingScheme scheme = 1;</code>
     */
    public Builder clearScheme() {
      
      scheme_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object algorithm_ = "";
    /**
     * <pre>
     * Algorithm in use to generate the key.
     * </pre>
     *
     * <code>string algorithm = 2;</code>
     */
    public java.lang.String getAlgorithm() {
      java.lang.Object ref = algorithm_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        algorithm_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Algorithm in use to generate the key.
     * </pre>
     *
     * <code>string algorithm = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAlgorithmBytes() {
      java.lang.Object ref = algorithm_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        algorithm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Algorithm in use to generate the key.
     * </pre>
     *
     * <code>string algorithm = 2;</code>
     */
    public Builder setAlgorithm(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      algorithm_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Algorithm in use to generate the key.
     * </pre>
     *
     * <code>string algorithm = 2;</code>
     */
    public Builder clearAlgorithm() {
      
      algorithm_ = getDefaultInstance().getAlgorithm();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Algorithm in use to generate the key.
     * </pre>
     *
     * <code>string algorithm = 2;</code>
     */
    public Builder setAlgorithmBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      algorithm_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object format_ = "";
    /**
     * <pre>
     * Format name for the key.
     * </pre>
     *
     * <code>string format = 3;</code>
     */
    public java.lang.String getFormat() {
      java.lang.Object ref = format_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        format_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Format name for the key.
     * </pre>
     *
     * <code>string format = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFormatBytes() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        format_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Format name for the key.
     * </pre>
     *
     * <code>string format = 3;</code>
     */
    public Builder setFormat(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      format_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Format name for the key.
     * </pre>
     *
     * <code>string format = 3;</code>
     */
    public Builder clearFormat() {
      
      format_ = getDefaultInstance().getFormat();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Format name for the key.
     * </pre>
     *
     * <code>string format = 3;</code>
     */
    public Builder setFormatBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      format_ = value;
      onChanged();
      return this;
    }

    private int bits_ ;
    /**
     * <pre>
     * Key size, in bits, if applicable.
     * </pre>
     *
     * <code>uint32 bits = 4;</code>
     */
    public int getBits() {
      return bits_;
    }
    /**
     * <pre>
     * Key size, in bits, if applicable.
     * </pre>
     *
     * <code>uint32 bits = 4;</code>
     */
    public Builder setBits(int value) {
      
      bits_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Key size, in bits, if applicable.
     * </pre>
     *
     * <code>uint32 bits = 4;</code>
     */
    public Builder clearBits() {
      
      bits_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opencannabis.crypto.primitives.pki.KeyParameters)
  }

  // @@protoc_insertion_point(class_scope:opencannabis.crypto.primitives.pki.KeyParameters)
  private static final io.opencannabis.schema.crypto.primitives.pki.KeyParameters DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opencannabis.schema.crypto.primitives.pki.KeyParameters();
  }

  public static io.opencannabis.schema.crypto.primitives.pki.KeyParameters getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KeyParameters>
      PARSER = new com.google.protobuf.AbstractParser<KeyParameters>() {
    public KeyParameters parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new KeyParameters(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<KeyParameters> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<KeyParameters> getParserForType() {
    return PARSER;
  }

  public io.opencannabis.schema.crypto.primitives.pki.KeyParameters getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

