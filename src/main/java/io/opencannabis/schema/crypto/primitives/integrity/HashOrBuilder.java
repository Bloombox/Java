// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto/primitives/Integrity.proto

package io.opencannabis.schema.crypto.primitives.integrity;

public interface HashOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.crypto.primitives.integrity.Hash)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies the algorithm in use.
   * </pre>
   *
   * <code>.opencannabis.crypto.primitives.integrity.HashAlgorithm algorithm = 1;</code>
   */
  int getAlgorithmValue();
  /**
   * <pre>
   * Specifies the algorithm in use.
   * </pre>
   *
   * <code>.opencannabis.crypto.primitives.integrity.HashAlgorithm algorithm = 1;</code>
   */
  io.opencannabis.schema.crypto.primitives.integrity.HashAlgorithm getAlgorithm();

  /**
   * <pre>
   * Raw binary output of the hash algorithm.
   * </pre>
   *
   * <code>bytes raw = 2;</code>
   */
  com.google.protobuf.ByteString getRaw();

  /**
   * <pre>
   * Hex-encoded digest value.
   * </pre>
   *
   * <code>string hex = 3;</code>
   */
  java.lang.String getHex();
  /**
   * <pre>
   * Hex-encoded digest value.
   * </pre>
   *
   * <code>string hex = 3;</code>
   */
  com.google.protobuf.ByteString
      getHexBytes();

  /**
   * <pre>
   * Base64-encoded digest value.
   * </pre>
   *
   * <code>string b64 = 4;</code>
   */
  java.lang.String getB64();
  /**
   * <pre>
   * Base64-encoded digest value.
   * </pre>
   *
   * <code>string b64 = 4;</code>
   */
  com.google.protobuf.ByteString
      getB64Bytes();

  public io.opencannabis.schema.crypto.primitives.integrity.Hash.DigestCase getDigestCase();
}
