/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory/rfid/LLRP.proto

package io.opencannabis.schema.inventory;

/**
 * <pre>
 * Reports ths presence of a set of Radio-Frequency Identifier (RFID) tags, in a given zone, which were detected from a
 * given RFID reader controller device, from a given antenna or antennae under its control.
 * </pre>
 *
 * Protobuf type {@code opencannabis.inventory.rfid.TagReport}
 */
public  final class TagReport extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opencannabis.inventory.rfid.TagReport)
    TagReportOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TagReport.newBuilder() to construct.
  private TagReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TagReport() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TagReport(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.opencannabis.schema.inventory.Antenna.Builder subBuilder = null;
            if (antenna_ != null) {
              subBuilder = antenna_.toBuilder();
            }
            antenna_ = input.readMessage(io.opencannabis.schema.inventory.Antenna.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(antenna_);
              antenna_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.opencannabis.schema.inventory.Tag.Builder subBuilder = null;
            if (tag_ != null) {
              subBuilder = tag_.toBuilder();
            }
            tag_ = input.readMessage(io.opencannabis.schema.inventory.Tag.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tag_);
              tag_ = subBuilder.buildPartial();
            }

            break;
          }
          case 25: {

            rssi_ = input.readDouble();
            break;
          }
          case 34: {
            io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
            if (firstSeen_ != null) {
              subBuilder = firstSeen_.toBuilder();
            }
            firstSeen_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(firstSeen_);
              firstSeen_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
            if (lastSeen_ != null) {
              subBuilder = lastSeen_.toBuilder();
            }
            lastSeen_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lastSeen_);
              lastSeen_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
            if (received_ != null) {
              subBuilder = received_.toBuilder();
            }
            received_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(received_);
              received_ = subBuilder.buildPartial();
            }

            break;
          }
          case 56: {

            peers_ = input.readUInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReport_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opencannabis.schema.inventory.TagReport.class, io.opencannabis.schema.inventory.TagReport.Builder.class);
  }

  public static final int ANTENNA_FIELD_NUMBER = 1;
  private io.opencannabis.schema.inventory.Antenna antenna_;
  /**
   * <pre>
   * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
   * and made available by the reader.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
   */
  public boolean hasAntenna() {
    return antenna_ != null;
  }
  /**
   * <pre>
   * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
   * and made available by the reader.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
   */
  public io.opencannabis.schema.inventory.Antenna getAntenna() {
    return antenna_ == null ? io.opencannabis.schema.inventory.Antenna.getDefaultInstance() : antenna_;
  }
  /**
   * <pre>
   * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
   * and made available by the reader.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
   */
  public io.opencannabis.schema.inventory.AntennaOrBuilder getAntennaOrBuilder() {
    return getAntenna();
  }

  public static final int TAG_FIELD_NUMBER = 2;
  private io.opencannabis.schema.inventory.Tag tag_;
  /**
   * <pre>
   * Specifies information about the tag that was detected in this event.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
   */
  public boolean hasTag() {
    return tag_ != null;
  }
  /**
   * <pre>
   * Specifies information about the tag that was detected in this event.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
   */
  public io.opencannabis.schema.inventory.Tag getTag() {
    return tag_ == null ? io.opencannabis.schema.inventory.Tag.getDefaultInstance() : tag_;
  }
  /**
   * <pre>
   * Specifies information about the tag that was detected in this event.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
   */
  public io.opencannabis.schema.inventory.TagOrBuilder getTagOrBuilder() {
    return getTag();
  }

  public static final int RSSI_FIELD_NUMBER = 3;
  private double rssi_;
  /**
   * <pre>
   * Relative Signal Strength indicator value for this tag reading, which describes the relative strength of the signal
   * between the subject tag and the reader/antenna that attenuated with it.
   * </pre>
   *
   * <code>double rssi = 3 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Relative Signal Strength indicator value for this tag reading."];</code>
   */
  public double getRssi() {
    return rssi_;
  }

  public static final int FIRST_SEEN_FIELD_NUMBER = 4;
  private io.opencannabis.schema.temporal.TemporalInstant.Instant firstSeen_;
  /**
   * <pre>
   * Timestamp describing when this tag was first seen by the RFID apparatus.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
   */
  public boolean hasFirstSeen() {
    return firstSeen_ != null;
  }
  /**
   * <pre>
   * Timestamp describing when this tag was first seen by the RFID apparatus.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.Instant getFirstSeen() {
    return firstSeen_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : firstSeen_;
  }
  /**
   * <pre>
   * Timestamp describing when this tag was first seen by the RFID apparatus.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getFirstSeenOrBuilder() {
    return getFirstSeen();
  }

  public static final int LAST_SEEN_FIELD_NUMBER = 5;
  private io.opencannabis.schema.temporal.TemporalInstant.Instant lastSeen_;
  /**
   * <pre>
   * Timestamp describing the last moment this tag was seen by the RFID apparatus.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
   */
  public boolean hasLastSeen() {
    return lastSeen_ != null;
  }
  /**
   * <pre>
   * Timestamp describing the last moment this tag was seen by the RFID apparatus.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.Instant getLastSeen() {
    return lastSeen_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : lastSeen_;
  }
  /**
   * <pre>
   * Timestamp describing the last moment this tag was seen by the RFID apparatus.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getLastSeenOrBuilder() {
    return getLastSeen();
  }

  public static final int RECEIVED_FIELD_NUMBER = 6;
  private io.opencannabis.schema.temporal.TemporalInstant.Instant received_;
  /**
   * <pre>
   * Timestamp describing when the edge engine received this reading event.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
   */
  public boolean hasReceived() {
    return received_ != null;
  }
  /**
   * <pre>
   * Timestamp describing when the edge engine received this reading event.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.Instant getReceived() {
    return received_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : received_;
  }
  /**
   * <pre>
   * Timestamp describing when the edge engine received this reading event.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getReceivedOrBuilder() {
    return getReceived();
  }

  public static final int PEERS_FIELD_NUMBER = 7;
  private int peers_;
  /**
   * <pre>
   * Describes the count of tags read at the same moment, or in the same tag report, as this tag reading.
   * </pre>
   *
   * <code>uint32 peers = 7 [(.gen_bq_schema.description) = "Describes the count of tags read at the same moment, or in the same tag report."];</code>
   */
  public int getPeers() {
    return peers_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (antenna_ != null) {
      output.writeMessage(1, getAntenna());
    }
    if (tag_ != null) {
      output.writeMessage(2, getTag());
    }
    if (rssi_ != 0D) {
      output.writeDouble(3, rssi_);
    }
    if (firstSeen_ != null) {
      output.writeMessage(4, getFirstSeen());
    }
    if (lastSeen_ != null) {
      output.writeMessage(5, getLastSeen());
    }
    if (received_ != null) {
      output.writeMessage(6, getReceived());
    }
    if (peers_ != 0) {
      output.writeUInt32(7, peers_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (antenna_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAntenna());
    }
    if (tag_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTag());
    }
    if (rssi_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, rssi_);
    }
    if (firstSeen_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getFirstSeen());
    }
    if (lastSeen_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getLastSeen());
    }
    if (received_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getReceived());
    }
    if (peers_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, peers_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opencannabis.schema.inventory.TagReport)) {
      return super.equals(obj);
    }
    io.opencannabis.schema.inventory.TagReport other = (io.opencannabis.schema.inventory.TagReport) obj;

    if (hasAntenna() != other.hasAntenna()) return false;
    if (hasAntenna()) {
      if (!getAntenna()
          .equals(other.getAntenna())) return false;
    }
    if (hasTag() != other.hasTag()) return false;
    if (hasTag()) {
      if (!getTag()
          .equals(other.getTag())) return false;
    }
    if (java.lang.Double.doubleToLongBits(getRssi())
        != java.lang.Double.doubleToLongBits(
            other.getRssi())) return false;
    if (hasFirstSeen() != other.hasFirstSeen()) return false;
    if (hasFirstSeen()) {
      if (!getFirstSeen()
          .equals(other.getFirstSeen())) return false;
    }
    if (hasLastSeen() != other.hasLastSeen()) return false;
    if (hasLastSeen()) {
      if (!getLastSeen()
          .equals(other.getLastSeen())) return false;
    }
    if (hasReceived() != other.hasReceived()) return false;
    if (hasReceived()) {
      if (!getReceived()
          .equals(other.getReceived())) return false;
    }
    if (getPeers()
        != other.getPeers()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAntenna()) {
      hash = (37 * hash) + ANTENNA_FIELD_NUMBER;
      hash = (53 * hash) + getAntenna().hashCode();
    }
    if (hasTag()) {
      hash = (37 * hash) + TAG_FIELD_NUMBER;
      hash = (53 * hash) + getTag().hashCode();
    }
    hash = (37 * hash) + RSSI_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getRssi()));
    if (hasFirstSeen()) {
      hash = (37 * hash) + FIRST_SEEN_FIELD_NUMBER;
      hash = (53 * hash) + getFirstSeen().hashCode();
    }
    if (hasLastSeen()) {
      hash = (37 * hash) + LAST_SEEN_FIELD_NUMBER;
      hash = (53 * hash) + getLastSeen().hashCode();
    }
    if (hasReceived()) {
      hash = (37 * hash) + RECEIVED_FIELD_NUMBER;
      hash = (53 * hash) + getReceived().hashCode();
    }
    hash = (37 * hash) + PEERS_FIELD_NUMBER;
    hash = (53 * hash) + getPeers();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opencannabis.schema.inventory.TagReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.TagReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.TagReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opencannabis.schema.inventory.TagReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Reports ths presence of a set of Radio-Frequency Identifier (RFID) tags, in a given zone, which were detected from a
   * given RFID reader controller device, from a given antenna or antennae under its control.
   * </pre>
   *
   * Protobuf type {@code opencannabis.inventory.rfid.TagReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opencannabis.inventory.rfid.TagReport)
      io.opencannabis.schema.inventory.TagReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReport_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.inventory.TagReport.class, io.opencannabis.schema.inventory.TagReport.Builder.class);
    }

    // Construct using io.opencannabis.schema.inventory.TagReport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (antennaBuilder_ == null) {
        antenna_ = null;
      } else {
        antenna_ = null;
        antennaBuilder_ = null;
      }
      if (tagBuilder_ == null) {
        tag_ = null;
      } else {
        tag_ = null;
        tagBuilder_ = null;
      }
      rssi_ = 0D;

      if (firstSeenBuilder_ == null) {
        firstSeen_ = null;
      } else {
        firstSeen_ = null;
        firstSeenBuilder_ = null;
      }
      if (lastSeenBuilder_ == null) {
        lastSeen_ = null;
      } else {
        lastSeen_ = null;
        lastSeenBuilder_ = null;
      }
      if (receivedBuilder_ == null) {
        received_ = null;
      } else {
        received_ = null;
        receivedBuilder_ = null;
      }
      peers_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReport_descriptor;
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.TagReport getDefaultInstanceForType() {
      return io.opencannabis.schema.inventory.TagReport.getDefaultInstance();
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.TagReport build() {
      io.opencannabis.schema.inventory.TagReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.TagReport buildPartial() {
      io.opencannabis.schema.inventory.TagReport result = new io.opencannabis.schema.inventory.TagReport(this);
      if (antennaBuilder_ == null) {
        result.antenna_ = antenna_;
      } else {
        result.antenna_ = antennaBuilder_.build();
      }
      if (tagBuilder_ == null) {
        result.tag_ = tag_;
      } else {
        result.tag_ = tagBuilder_.build();
      }
      result.rssi_ = rssi_;
      if (firstSeenBuilder_ == null) {
        result.firstSeen_ = firstSeen_;
      } else {
        result.firstSeen_ = firstSeenBuilder_.build();
      }
      if (lastSeenBuilder_ == null) {
        result.lastSeen_ = lastSeen_;
      } else {
        result.lastSeen_ = lastSeenBuilder_.build();
      }
      if (receivedBuilder_ == null) {
        result.received_ = received_;
      } else {
        result.received_ = receivedBuilder_.build();
      }
      result.peers_ = peers_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opencannabis.schema.inventory.TagReport) {
        return mergeFrom((io.opencannabis.schema.inventory.TagReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opencannabis.schema.inventory.TagReport other) {
      if (other == io.opencannabis.schema.inventory.TagReport.getDefaultInstance()) return this;
      if (other.hasAntenna()) {
        mergeAntenna(other.getAntenna());
      }
      if (other.hasTag()) {
        mergeTag(other.getTag());
      }
      if (other.getRssi() != 0D) {
        setRssi(other.getRssi());
      }
      if (other.hasFirstSeen()) {
        mergeFirstSeen(other.getFirstSeen());
      }
      if (other.hasLastSeen()) {
        mergeLastSeen(other.getLastSeen());
      }
      if (other.hasReceived()) {
        mergeReceived(other.getReceived());
      }
      if (other.getPeers() != 0) {
        setPeers(other.getPeers());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.opencannabis.schema.inventory.TagReport parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.opencannabis.schema.inventory.TagReport) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.opencannabis.schema.inventory.Antenna antenna_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.Antenna, io.opencannabis.schema.inventory.Antenna.Builder, io.opencannabis.schema.inventory.AntennaOrBuilder> antennaBuilder_;
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    public boolean hasAntenna() {
      return antennaBuilder_ != null || antenna_ != null;
    }
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    public io.opencannabis.schema.inventory.Antenna getAntenna() {
      if (antennaBuilder_ == null) {
        return antenna_ == null ? io.opencannabis.schema.inventory.Antenna.getDefaultInstance() : antenna_;
      } else {
        return antennaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    public Builder setAntenna(io.opencannabis.schema.inventory.Antenna value) {
      if (antennaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        antenna_ = value;
        onChanged();
      } else {
        antennaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    public Builder setAntenna(
        io.opencannabis.schema.inventory.Antenna.Builder builderForValue) {
      if (antennaBuilder_ == null) {
        antenna_ = builderForValue.build();
        onChanged();
      } else {
        antennaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    public Builder mergeAntenna(io.opencannabis.schema.inventory.Antenna value) {
      if (antennaBuilder_ == null) {
        if (antenna_ != null) {
          antenna_ =
            io.opencannabis.schema.inventory.Antenna.newBuilder(antenna_).mergeFrom(value).buildPartial();
        } else {
          antenna_ = value;
        }
        onChanged();
      } else {
        antennaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    public Builder clearAntenna() {
      if (antennaBuilder_ == null) {
        antenna_ = null;
        onChanged();
      } else {
        antenna_ = null;
        antennaBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    public io.opencannabis.schema.inventory.Antenna.Builder getAntennaBuilder() {
      
      onChanged();
      return getAntennaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    public io.opencannabis.schema.inventory.AntennaOrBuilder getAntennaOrBuilder() {
      if (antennaBuilder_ != null) {
        return antennaBuilder_.getMessageOrBuilder();
      } else {
        return antenna_ == null ?
            io.opencannabis.schema.inventory.Antenna.getDefaultInstance() : antenna_;
      }
    }
    /**
     * <pre>
     * Describes information about the antenna that reported a set of tags, if information about the antenna was requested
     * and made available by the reader.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Antenna antenna = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Describes info, if available, about the RFID antenna involved in a tag report."];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.Antenna, io.opencannabis.schema.inventory.Antenna.Builder, io.opencannabis.schema.inventory.AntennaOrBuilder> 
        getAntennaFieldBuilder() {
      if (antennaBuilder_ == null) {
        antennaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.inventory.Antenna, io.opencannabis.schema.inventory.Antenna.Builder, io.opencannabis.schema.inventory.AntennaOrBuilder>(
                getAntenna(),
                getParentForChildren(),
                isClean());
        antenna_ = null;
      }
      return antennaBuilder_;
    }

    private io.opencannabis.schema.inventory.Tag tag_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.Tag, io.opencannabis.schema.inventory.Tag.Builder, io.opencannabis.schema.inventory.TagOrBuilder> tagBuilder_;
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    public boolean hasTag() {
      return tagBuilder_ != null || tag_ != null;
    }
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    public io.opencannabis.schema.inventory.Tag getTag() {
      if (tagBuilder_ == null) {
        return tag_ == null ? io.opencannabis.schema.inventory.Tag.getDefaultInstance() : tag_;
      } else {
        return tagBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    public Builder setTag(io.opencannabis.schema.inventory.Tag value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tag_ = value;
        onChanged();
      } else {
        tagBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    public Builder setTag(
        io.opencannabis.schema.inventory.Tag.Builder builderForValue) {
      if (tagBuilder_ == null) {
        tag_ = builderForValue.build();
        onChanged();
      } else {
        tagBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    public Builder mergeTag(io.opencannabis.schema.inventory.Tag value) {
      if (tagBuilder_ == null) {
        if (tag_ != null) {
          tag_ =
            io.opencannabis.schema.inventory.Tag.newBuilder(tag_).mergeFrom(value).buildPartial();
        } else {
          tag_ = value;
        }
        onChanged();
      } else {
        tagBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    public Builder clearTag() {
      if (tagBuilder_ == null) {
        tag_ = null;
        onChanged();
      } else {
        tag_ = null;
        tagBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    public io.opencannabis.schema.inventory.Tag.Builder getTagBuilder() {
      
      onChanged();
      return getTagFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    public io.opencannabis.schema.inventory.TagOrBuilder getTagOrBuilder() {
      if (tagBuilder_ != null) {
        return tagBuilder_.getMessageOrBuilder();
      } else {
        return tag_ == null ?
            io.opencannabis.schema.inventory.Tag.getDefaultInstance() : tag_;
      }
    }
    /**
     * <pre>
     * Specifies information about the tag that was detected in this event.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.Tag tag = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Specifies information about the tag that was detected in this event."];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.Tag, io.opencannabis.schema.inventory.Tag.Builder, io.opencannabis.schema.inventory.TagOrBuilder> 
        getTagFieldBuilder() {
      if (tagBuilder_ == null) {
        tagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.inventory.Tag, io.opencannabis.schema.inventory.Tag.Builder, io.opencannabis.schema.inventory.TagOrBuilder>(
                getTag(),
                getParentForChildren(),
                isClean());
        tag_ = null;
      }
      return tagBuilder_;
    }

    private double rssi_ ;
    /**
     * <pre>
     * Relative Signal Strength indicator value for this tag reading, which describes the relative strength of the signal
     * between the subject tag and the reader/antenna that attenuated with it.
     * </pre>
     *
     * <code>double rssi = 3 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Relative Signal Strength indicator value for this tag reading."];</code>
     */
    public double getRssi() {
      return rssi_;
    }
    /**
     * <pre>
     * Relative Signal Strength indicator value for this tag reading, which describes the relative strength of the signal
     * between the subject tag and the reader/antenna that attenuated with it.
     * </pre>
     *
     * <code>double rssi = 3 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Relative Signal Strength indicator value for this tag reading."];</code>
     */
    public Builder setRssi(double value) {
      
      rssi_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Relative Signal Strength indicator value for this tag reading, which describes the relative strength of the signal
     * between the subject tag and the reader/antenna that attenuated with it.
     * </pre>
     *
     * <code>double rssi = 3 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Relative Signal Strength indicator value for this tag reading."];</code>
     */
    public Builder clearRssi() {
      
      rssi_ = 0D;
      onChanged();
      return this;
    }

    private io.opencannabis.schema.temporal.TemporalInstant.Instant firstSeen_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> firstSeenBuilder_;
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    public boolean hasFirstSeen() {
      return firstSeenBuilder_ != null || firstSeen_ != null;
    }
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getFirstSeen() {
      if (firstSeenBuilder_ == null) {
        return firstSeen_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : firstSeen_;
      } else {
        return firstSeenBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    public Builder setFirstSeen(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (firstSeenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        firstSeen_ = value;
        onChanged();
      } else {
        firstSeenBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    public Builder setFirstSeen(
        io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
      if (firstSeenBuilder_ == null) {
        firstSeen_ = builderForValue.build();
        onChanged();
      } else {
        firstSeenBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    public Builder mergeFirstSeen(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (firstSeenBuilder_ == null) {
        if (firstSeen_ != null) {
          firstSeen_ =
            io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(firstSeen_).mergeFrom(value).buildPartial();
        } else {
          firstSeen_ = value;
        }
        onChanged();
      } else {
        firstSeenBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    public Builder clearFirstSeen() {
      if (firstSeenBuilder_ == null) {
        firstSeen_ = null;
        onChanged();
      } else {
        firstSeen_ = null;
        firstSeenBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getFirstSeenBuilder() {
      
      onChanged();
      return getFirstSeenFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getFirstSeenOrBuilder() {
      if (firstSeenBuilder_ != null) {
        return firstSeenBuilder_.getMessageOrBuilder();
      } else {
        return firstSeen_ == null ?
            io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : firstSeen_;
      }
    }
    /**
     * <pre>
     * Timestamp describing when this tag was first seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant first_seen = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when this tag was first seen by the RFID apparatus."];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
        getFirstSeenFieldBuilder() {
      if (firstSeenBuilder_ == null) {
        firstSeenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                getFirstSeen(),
                getParentForChildren(),
                isClean());
        firstSeen_ = null;
      }
      return firstSeenBuilder_;
    }

    private io.opencannabis.schema.temporal.TemporalInstant.Instant lastSeen_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> lastSeenBuilder_;
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    public boolean hasLastSeen() {
      return lastSeenBuilder_ != null || lastSeen_ != null;
    }
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getLastSeen() {
      if (lastSeenBuilder_ == null) {
        return lastSeen_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : lastSeen_;
      } else {
        return lastSeenBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    public Builder setLastSeen(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (lastSeenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lastSeen_ = value;
        onChanged();
      } else {
        lastSeenBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    public Builder setLastSeen(
        io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
      if (lastSeenBuilder_ == null) {
        lastSeen_ = builderForValue.build();
        onChanged();
      } else {
        lastSeenBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    public Builder mergeLastSeen(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (lastSeenBuilder_ == null) {
        if (lastSeen_ != null) {
          lastSeen_ =
            io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(lastSeen_).mergeFrom(value).buildPartial();
        } else {
          lastSeen_ = value;
        }
        onChanged();
      } else {
        lastSeenBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    public Builder clearLastSeen() {
      if (lastSeenBuilder_ == null) {
        lastSeen_ = null;
        onChanged();
      } else {
        lastSeen_ = null;
        lastSeenBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getLastSeenBuilder() {
      
      onChanged();
      return getLastSeenFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getLastSeenOrBuilder() {
      if (lastSeenBuilder_ != null) {
        return lastSeenBuilder_.getMessageOrBuilder();
      } else {
        return lastSeen_ == null ?
            io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : lastSeen_;
      }
    }
    /**
     * <pre>
     * Timestamp describing the last moment this tag was seen by the RFID apparatus.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant last_seen = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing the last moment this tag was seen by the RFID apparatus."];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
        getLastSeenFieldBuilder() {
      if (lastSeenBuilder_ == null) {
        lastSeenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                getLastSeen(),
                getParentForChildren(),
                isClean());
        lastSeen_ = null;
      }
      return lastSeenBuilder_;
    }

    private io.opencannabis.schema.temporal.TemporalInstant.Instant received_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> receivedBuilder_;
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    public boolean hasReceived() {
      return receivedBuilder_ != null || received_ != null;
    }
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getReceived() {
      if (receivedBuilder_ == null) {
        return received_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : received_;
      } else {
        return receivedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    public Builder setReceived(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (receivedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        received_ = value;
        onChanged();
      } else {
        receivedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    public Builder setReceived(
        io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
      if (receivedBuilder_ == null) {
        received_ = builderForValue.build();
        onChanged();
      } else {
        receivedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    public Builder mergeReceived(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (receivedBuilder_ == null) {
        if (received_ != null) {
          received_ =
            io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(received_).mergeFrom(value).buildPartial();
        } else {
          received_ = value;
        }
        onChanged();
      } else {
        receivedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    public Builder clearReceived() {
      if (receivedBuilder_ == null) {
        received_ = null;
        onChanged();
      } else {
        received_ = null;
        receivedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getReceivedBuilder() {
      
      onChanged();
      return getReceivedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getReceivedOrBuilder() {
      if (receivedBuilder_ != null) {
        return receivedBuilder_.getMessageOrBuilder();
      } else {
        return received_ == null ?
            io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : received_;
      }
    }
    /**
     * <pre>
     * Timestamp describing when the edge engine received this reading event.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant received = 6 [(.gen_bq_schema.require) = true, (.gen_bq_schema.type_override) = "TIMESTAMP", (.gen_bq_schema.description) = "Timestamp describing when the edge engine received this reading event."];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
        getReceivedFieldBuilder() {
      if (receivedBuilder_ == null) {
        receivedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                getReceived(),
                getParentForChildren(),
                isClean());
        received_ = null;
      }
      return receivedBuilder_;
    }

    private int peers_ ;
    /**
     * <pre>
     * Describes the count of tags read at the same moment, or in the same tag report, as this tag reading.
     * </pre>
     *
     * <code>uint32 peers = 7 [(.gen_bq_schema.description) = "Describes the count of tags read at the same moment, or in the same tag report."];</code>
     */
    public int getPeers() {
      return peers_;
    }
    /**
     * <pre>
     * Describes the count of tags read at the same moment, or in the same tag report, as this tag reading.
     * </pre>
     *
     * <code>uint32 peers = 7 [(.gen_bq_schema.description) = "Describes the count of tags read at the same moment, or in the same tag report."];</code>
     */
    public Builder setPeers(int value) {
      
      peers_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Describes the count of tags read at the same moment, or in the same tag report, as this tag reading.
     * </pre>
     *
     * <code>uint32 peers = 7 [(.gen_bq_schema.description) = "Describes the count of tags read at the same moment, or in the same tag report."];</code>
     */
    public Builder clearPeers() {
      
      peers_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opencannabis.inventory.rfid.TagReport)
  }

  // @@protoc_insertion_point(class_scope:opencannabis.inventory.rfid.TagReport)
  private static final io.opencannabis.schema.inventory.TagReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opencannabis.schema.inventory.TagReport();
  }

  public static io.opencannabis.schema.inventory.TagReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TagReport>
      PARSER = new com.google.protobuf.AbstractParser<TagReport>() {
    @java.lang.Override
    public TagReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TagReport(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TagReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TagReport> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.opencannabis.schema.inventory.TagReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

