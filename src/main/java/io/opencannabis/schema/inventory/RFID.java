/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory/rfid/RFID.proto

package io.opencannabis.schema.inventory;

public final class RFID {
  private RFID() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opencannabis_inventory_rfid_Reader_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opencannabis_inventory_rfid_Reader_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opencannabis_inventory_rfid_Antenna_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opencannabis_inventory_rfid_Antenna_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opencannabis_inventory_rfid_Tag_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opencannabis_inventory_rfid_Tag_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031inventory/rfid/RFID.proto\022\033opencannabi" +
      "s.inventory.rfid\032\024core/Datamodel.proto\032\016" +
      "bq_field.proto\032\016bq_table.proto\"\361\003\n\006Reade" +
      "r\022Z\n\004name\030\001 \001(\tBL\212@ICanonical label/name" +
      " for the reader device involved in an RF" +
      "ID operation.\022R\n\003mac\030\002 \001(\tBE\360?\001\212@?MAC ad" +
      "dress of the reader device involved in a" +
      "n RFID operation.\022M\n\002ip\030\003 \001(\tBA\212@>IP add" +
      "ress of the reader device involved in an" +
      " RFID operation.\022u\n\006vendor\030\004 \001(\0162).openc" +
      "annabis.inventory.rfid.ReaderVendorB:\360?\001" +
      "\212@4Vendor for the reader involved in an " +
      "RFID operation.\022q\n\005model\030\005 \001(\0162(.opencan" +
      "nabis.inventory.rfid.ReaderModelB8\360?\001\212@2" +
      "Model of the reader involved in an RFID " +
      "operation.\"U\n\007Antenna\022J\n\005index\030\001 \001(\rB;\212@" +
      "8Port index for the antenna that produce" +
      "d some operation.\"\366\001\n\003Tag\022Y\n\003tid\030\001 \001(\tBL" +
      "\212@ITag ID, assigned to the tag at manufa" +
      "cturing time and never over-written.\0228\n\007" +
      "payload\030\002 \001(\014B\'\200@\001\212@!Raw content encoded" +
      " onto the tag.\022O\n\003epc\030\n \001(\tB@\360?\001\212@:Elect" +
      "ronic Product Code (EPC) that was presen" +
      "t on the tag.H\000B\t\n\007content*@\n\014ReaderVend" +
      "or\022\027\n\023UNRECOGNIZED_VENDOR\020\000\022\014\n\006IMPINJ\020\232\312" +
      "\001\022\t\n\005ALIEN\020\002*\255\001\n\013ReaderModel\022\027\n\023UNRECOGN" +
      "IZED_READER\020\000\022\021\n\rSPEEDWAY_R120\020\001\022\021\n\rSPEE" +
      "DWAY_R220\020\002\022\023\n\rSPEEDWAY_R420\020\352\220z\022\024\n\020SPEE" +
      "DWAY_XPORTAL\020\004\022\021\n\rALIEN_ALRH450\020\005\022\016\n\nALI" +
      "EN_F800\020\006\022\021\n\rALIEN_ALR9680\020\007B,\n io.openc" +
      "annabis.schema.inventoryH\001P\001\242\002\003OCSb\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          core.Datamodel.getDescriptor(),
          gen_bq_schema.BqField.getDescriptor(),
          gen_bq_schema.BqTable.getDescriptor(),
        }, assigner);
    internal_static_opencannabis_inventory_rfid_Reader_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opencannabis_inventory_rfid_Reader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opencannabis_inventory_rfid_Reader_descriptor,
        new java.lang.String[] { "Name", "Mac", "Ip", "Vendor", "Model", });
    internal_static_opencannabis_inventory_rfid_Antenna_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_opencannabis_inventory_rfid_Antenna_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opencannabis_inventory_rfid_Antenna_descriptor,
        new java.lang.String[] { "Index", });
    internal_static_opencannabis_inventory_rfid_Tag_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_opencannabis_inventory_rfid_Tag_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opencannabis_inventory_rfid_Tag_descriptor,
        new java.lang.String[] { "Tid", "Payload", "Epc", "Content", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    registry.add(gen_bq_schema.BqField.ignore);
    registry.add(gen_bq_schema.BqField.require);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    core.Datamodel.getDescriptor();
    gen_bq_schema.BqField.getDescriptor();
    gen_bq_schema.BqTable.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
