/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory/rfid/LLRP.proto

package io.opencannabis.schema.inventory;

public interface ROSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.inventory.rfid.ROSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique ID assigned to reference this `ROSpec`.
   * </pre>
   *
   * <code>uint32 id = 1;</code>
   */
  int getId();

  /**
   * <pre>
   * Priority value this `ROSpec` should assume.
   * </pre>
   *
   * <code>uint32 priority = 2;</code>
   */
  int getPriority();

  /**
   * <pre>
   * Configuration of triggering, and scanning, boundaries. Start and stop boundaries define when to start scanning and
   * for how long, or how to know when to stop.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig boundary = 3;</code>
   */
  boolean hasBoundary();
  /**
   * <pre>
   * Configuration of triggering, and scanning, boundaries. Start and stop boundaries define when to start scanning and
   * for how long, or how to know when to stop.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig boundary = 3;</code>
   */
  io.opencannabis.schema.inventory.BoundaryConfig getBoundary();
  /**
   * <pre>
   * Configuration of triggering, and scanning, boundaries. Start and stop boundaries define when to start scanning and
   * for how long, or how to know when to stop.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig boundary = 3;</code>
   */
  io.opencannabis.schema.inventory.BoundaryConfigOrBuilder getBoundaryOrBuilder();

  /**
   * <pre>
   * Reporting settings, that describe what should be reported back for each RFID tag detected within the subject
   * reader's RFID range. This may include RSSI, antenna number, and more.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.ReportingConfig reporting = 4;</code>
   */
  boolean hasReporting();
  /**
   * <pre>
   * Reporting settings, that describe what should be reported back for each RFID tag detected within the subject
   * reader's RFID range. This may include RSSI, antenna number, and more.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.ReportingConfig reporting = 4;</code>
   */
  io.opencannabis.schema.inventory.ReportingConfig getReporting();
  /**
   * <pre>
   * Reporting settings, that describe what should be reported back for each RFID tag detected within the subject
   * reader's RFID range. This may include RSSI, antenna number, and more.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.ReportingConfig reporting = 4;</code>
   */
  io.opencannabis.schema.inventory.ReportingConfigOrBuilder getReportingOrBuilder();
}
