/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory/rfid/LLRP.proto

package io.opencannabis.schema.inventory;

/**
 * <pre>
 * Describes a boundary, or triggering, configuration profile for a given RFID reader/controller, or ROSpec,
 * configuration profile. Boundary configs describe when to start, and stop, scanning for tags.
 * </pre>
 *
 * Protobuf type {@code opencannabis.inventory.rfid.BoundaryConfig}
 */
public  final class BoundaryConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opencannabis.inventory.rfid.BoundaryConfig)
    BoundaryConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BoundaryConfig.newBuilder() to construct.
  private BoundaryConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BoundaryConfig() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BoundaryConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.Builder subBuilder = null;
            if (start_ != null) {
              subBuilder = start_.toBuilder();
            }
            start_ = input.readMessage(io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(start_);
              start_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.Builder subBuilder = null;
            if (stop_ != null) {
              subBuilder = stop_.toBuilder();
            }
            stop_ = input.readMessage(io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(stop_);
              stop_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opencannabis.schema.inventory.BoundaryConfig.class, io.opencannabis.schema.inventory.BoundaryConfig.Builder.class);
  }

  public interface StartTriggerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:opencannabis.inventory.rfid.BoundaryConfig.StartTrigger)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
     * reader configuration active and begin scanning.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
     * reader configuration active and begin scanning.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
     */
    io.opencannabis.schema.inventory.StartTriggerType getType();

    /**
     * <pre>
     * Schedule parameter, which is required for periodic triggering.
     * </pre>
     *
     * <code>uint64 schedule = 2;</code>
     */
    long getSchedule();
  }
  /**
   * <pre>
   * Describes the start trigger boundary parameters to apply.
   * </pre>
   *
   * Protobuf type {@code opencannabis.inventory.rfid.BoundaryConfig.StartTrigger}
   */
  public  static final class StartTrigger extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:opencannabis.inventory.rfid.BoundaryConfig.StartTrigger)
      StartTriggerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StartTrigger.newBuilder() to construct.
    private StartTrigger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StartTrigger() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StartTrigger(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              schedule_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StartTrigger_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StartTrigger_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.class, io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
     * reader configuration active and begin scanning.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
     * reader configuration active and begin scanning.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
     */
    public io.opencannabis.schema.inventory.StartTriggerType getType() {
      @SuppressWarnings("deprecation")
      io.opencannabis.schema.inventory.StartTriggerType result = io.opencannabis.schema.inventory.StartTriggerType.valueOf(type_);
      return result == null ? io.opencannabis.schema.inventory.StartTriggerType.UNRECOGNIZED : result;
    }

    public static final int SCHEDULE_FIELD_NUMBER = 2;
    private long schedule_;
    /**
     * <pre>
     * Schedule parameter, which is required for periodic triggering.
     * </pre>
     *
     * <code>uint64 schedule = 2;</code>
     */
    public long getSchedule() {
      return schedule_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != io.opencannabis.schema.inventory.StartTriggerType.NO_START_TRIGGER.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (schedule_ != 0L) {
        output.writeUInt64(2, schedule_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != io.opencannabis.schema.inventory.StartTriggerType.NO_START_TRIGGER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (schedule_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, schedule_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger)) {
        return super.equals(obj);
      }
      io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger other = (io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger) obj;

      if (type_ != other.type_) return false;
      if (getSchedule()
          != other.getSchedule()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SCHEDULE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSchedule());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the start trigger boundary parameters to apply.
     * </pre>
     *
     * Protobuf type {@code opencannabis.inventory.rfid.BoundaryConfig.StartTrigger}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:opencannabis.inventory.rfid.BoundaryConfig.StartTrigger)
        io.opencannabis.schema.inventory.BoundaryConfig.StartTriggerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StartTrigger_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StartTrigger_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.class, io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.Builder.class);
      }

      // Construct using io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        schedule_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StartTrigger_descriptor;
      }

      @java.lang.Override
      public io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger getDefaultInstanceForType() {
        return io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.getDefaultInstance();
      }

      @java.lang.Override
      public io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger build() {
        io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger buildPartial() {
        io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger result = new io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger(this);
        result.type_ = type_;
        result.schedule_ = schedule_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger) {
          return mergeFrom((io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger other) {
        if (other == io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getSchedule() != 0L) {
          setSchedule(other.getSchedule());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
       * reader configuration active and begin scanning.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
       * reader configuration active and begin scanning.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
       * reader configuration active and begin scanning.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
       */
      public io.opencannabis.schema.inventory.StartTriggerType getType() {
        @SuppressWarnings("deprecation")
        io.opencannabis.schema.inventory.StartTriggerType result = io.opencannabis.schema.inventory.StartTriggerType.valueOf(type_);
        return result == null ? io.opencannabis.schema.inventory.StartTriggerType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
       * reader configuration active and begin scanning.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
       */
      public Builder setType(io.opencannabis.schema.inventory.StartTriggerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Start trigger type to set, which may carry parameters, or not. Describes to the unit when to make a given RFID
       * reader configuration active and begin scanning.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StartTriggerType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long schedule_ ;
      /**
       * <pre>
       * Schedule parameter, which is required for periodic triggering.
       * </pre>
       *
       * <code>uint64 schedule = 2;</code>
       */
      public long getSchedule() {
        return schedule_;
      }
      /**
       * <pre>
       * Schedule parameter, which is required for periodic triggering.
       * </pre>
       *
       * <code>uint64 schedule = 2;</code>
       */
      public Builder setSchedule(long value) {
        
        schedule_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Schedule parameter, which is required for periodic triggering.
       * </pre>
       *
       * <code>uint64 schedule = 2;</code>
       */
      public Builder clearSchedule() {
        
        schedule_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:opencannabis.inventory.rfid.BoundaryConfig.StartTrigger)
    }

    // @@protoc_insertion_point(class_scope:opencannabis.inventory.rfid.BoundaryConfig.StartTrigger)
    private static final io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger();
    }

    public static io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StartTrigger>
        PARSER = new com.google.protobuf.AbstractParser<StartTrigger>() {
      @java.lang.Override
      public StartTrigger parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StartTrigger(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StartTrigger> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StartTrigger> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StopTriggerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:opencannabis.inventory.rfid.BoundaryConfig.StopTrigger)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
     * scanning for RFID tags and emitting events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
     * scanning for RFID tags and emitting events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
     */
    io.opencannabis.schema.inventory.StopTriggerType getType();

    /**
     * <pre>
     * Schedule parameter, which is required for deadline-based stop triggering.
     * </pre>
     *
     * <code>uint64 schedule = 2;</code>
     */
    long getSchedule();
  }
  /**
   * <pre>
   * Describes the stop trigger boundary parameters to apply.
   * </pre>
   *
   * Protobuf type {@code opencannabis.inventory.rfid.BoundaryConfig.StopTrigger}
   */
  public  static final class StopTrigger extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:opencannabis.inventory.rfid.BoundaryConfig.StopTrigger)
      StopTriggerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StopTrigger.newBuilder() to construct.
    private StopTrigger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StopTrigger() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StopTrigger(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              schedule_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StopTrigger_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StopTrigger_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.class, io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
     * scanning for RFID tags and emitting events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
     * scanning for RFID tags and emitting events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
     */
    public io.opencannabis.schema.inventory.StopTriggerType getType() {
      @SuppressWarnings("deprecation")
      io.opencannabis.schema.inventory.StopTriggerType result = io.opencannabis.schema.inventory.StopTriggerType.valueOf(type_);
      return result == null ? io.opencannabis.schema.inventory.StopTriggerType.UNRECOGNIZED : result;
    }

    public static final int SCHEDULE_FIELD_NUMBER = 2;
    private long schedule_;
    /**
     * <pre>
     * Schedule parameter, which is required for deadline-based stop triggering.
     * </pre>
     *
     * <code>uint64 schedule = 2;</code>
     */
    public long getSchedule() {
      return schedule_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != io.opencannabis.schema.inventory.StopTriggerType.NO_STOP_TRIGGER.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (schedule_ != 0L) {
        output.writeUInt64(2, schedule_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != io.opencannabis.schema.inventory.StopTriggerType.NO_STOP_TRIGGER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (schedule_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, schedule_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger)) {
        return super.equals(obj);
      }
      io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger other = (io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger) obj;

      if (type_ != other.type_) return false;
      if (getSchedule()
          != other.getSchedule()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SCHEDULE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSchedule());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the stop trigger boundary parameters to apply.
     * </pre>
     *
     * Protobuf type {@code opencannabis.inventory.rfid.BoundaryConfig.StopTrigger}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:opencannabis.inventory.rfid.BoundaryConfig.StopTrigger)
        io.opencannabis.schema.inventory.BoundaryConfig.StopTriggerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StopTrigger_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StopTrigger_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.class, io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.Builder.class);
      }

      // Construct using io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        schedule_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_StopTrigger_descriptor;
      }

      @java.lang.Override
      public io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger getDefaultInstanceForType() {
        return io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.getDefaultInstance();
      }

      @java.lang.Override
      public io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger build() {
        io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger buildPartial() {
        io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger result = new io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger(this);
        result.type_ = type_;
        result.schedule_ = schedule_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger) {
          return mergeFrom((io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger other) {
        if (other == io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getSchedule() != 0L) {
          setSchedule(other.getSchedule());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
       * scanning for RFID tags and emitting events.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
       * scanning for RFID tags and emitting events.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
       * scanning for RFID tags and emitting events.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
       */
      public io.opencannabis.schema.inventory.StopTriggerType getType() {
        @SuppressWarnings("deprecation")
        io.opencannabis.schema.inventory.StopTriggerType result = io.opencannabis.schema.inventory.StopTriggerType.valueOf(type_);
        return result == null ? io.opencannabis.schema.inventory.StopTriggerType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
       * scanning for RFID tags and emitting events.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
       */
      public Builder setType(io.opencannabis.schema.inventory.StopTriggerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stop trigger type to set, which may carry parameters, or not, and describes how the unit knows when to stop
       * scanning for RFID tags and emitting events.
       * </pre>
       *
       * <code>.opencannabis.inventory.rfid.StopTriggerType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long schedule_ ;
      /**
       * <pre>
       * Schedule parameter, which is required for deadline-based stop triggering.
       * </pre>
       *
       * <code>uint64 schedule = 2;</code>
       */
      public long getSchedule() {
        return schedule_;
      }
      /**
       * <pre>
       * Schedule parameter, which is required for deadline-based stop triggering.
       * </pre>
       *
       * <code>uint64 schedule = 2;</code>
       */
      public Builder setSchedule(long value) {
        
        schedule_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Schedule parameter, which is required for deadline-based stop triggering.
       * </pre>
       *
       * <code>uint64 schedule = 2;</code>
       */
      public Builder clearSchedule() {
        
        schedule_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:opencannabis.inventory.rfid.BoundaryConfig.StopTrigger)
    }

    // @@protoc_insertion_point(class_scope:opencannabis.inventory.rfid.BoundaryConfig.StopTrigger)
    private static final io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger();
    }

    public static io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StopTrigger>
        PARSER = new com.google.protobuf.AbstractParser<StopTrigger>() {
      @java.lang.Override
      public StopTrigger parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StopTrigger(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StopTrigger> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StopTrigger> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int START_FIELD_NUMBER = 1;
  private io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger start_;
  /**
   * <pre>
   * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
   * be emitted to LLRP clients listening for read events.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
   */
  public boolean hasStart() {
    return start_ != null;
  }
  /**
   * <pre>
   * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
   * be emitted to LLRP clients listening for read events.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
   */
  public io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger getStart() {
    return start_ == null ? io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.getDefaultInstance() : start_;
  }
  /**
   * <pre>
   * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
   * be emitted to LLRP clients listening for read events.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
   */
  public io.opencannabis.schema.inventory.BoundaryConfig.StartTriggerOrBuilder getStartOrBuilder() {
    return getStart();
  }

  public static final int STOP_FIELD_NUMBER = 2;
  private io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger stop_;
  /**
   * <pre>
   * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
   * met or otherwise satisfied, scanning and event reporting stops.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
   */
  public boolean hasStop() {
    return stop_ != null;
  }
  /**
   * <pre>
   * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
   * met or otherwise satisfied, scanning and event reporting stops.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
   */
  public io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger getStop() {
    return stop_ == null ? io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.getDefaultInstance() : stop_;
  }
  /**
   * <pre>
   * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
   * met or otherwise satisfied, scanning and event reporting stops.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
   */
  public io.opencannabis.schema.inventory.BoundaryConfig.StopTriggerOrBuilder getStopOrBuilder() {
    return getStop();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (start_ != null) {
      output.writeMessage(1, getStart());
    }
    if (stop_ != null) {
      output.writeMessage(2, getStop());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (start_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStart());
    }
    if (stop_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getStop());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opencannabis.schema.inventory.BoundaryConfig)) {
      return super.equals(obj);
    }
    io.opencannabis.schema.inventory.BoundaryConfig other = (io.opencannabis.schema.inventory.BoundaryConfig) obj;

    if (hasStart() != other.hasStart()) return false;
    if (hasStart()) {
      if (!getStart()
          .equals(other.getStart())) return false;
    }
    if (hasStop() != other.hasStop()) return false;
    if (hasStop()) {
      if (!getStop()
          .equals(other.getStop())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStart()) {
      hash = (37 * hash) + START_FIELD_NUMBER;
      hash = (53 * hash) + getStart().hashCode();
    }
    if (hasStop()) {
      hash = (37 * hash) + STOP_FIELD_NUMBER;
      hash = (53 * hash) + getStop().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.BoundaryConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opencannabis.schema.inventory.BoundaryConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes a boundary, or triggering, configuration profile for a given RFID reader/controller, or ROSpec,
   * configuration profile. Boundary configs describe when to start, and stop, scanning for tags.
   * </pre>
   *
   * Protobuf type {@code opencannabis.inventory.rfid.BoundaryConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opencannabis.inventory.rfid.BoundaryConfig)
      io.opencannabis.schema.inventory.BoundaryConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.inventory.BoundaryConfig.class, io.opencannabis.schema.inventory.BoundaryConfig.Builder.class);
    }

    // Construct using io.opencannabis.schema.inventory.BoundaryConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (startBuilder_ == null) {
        start_ = null;
      } else {
        start_ = null;
        startBuilder_ = null;
      }
      if (stopBuilder_ == null) {
        stop_ = null;
      } else {
        stop_ = null;
        stopBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_BoundaryConfig_descriptor;
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.BoundaryConfig getDefaultInstanceForType() {
      return io.opencannabis.schema.inventory.BoundaryConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.BoundaryConfig build() {
      io.opencannabis.schema.inventory.BoundaryConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.BoundaryConfig buildPartial() {
      io.opencannabis.schema.inventory.BoundaryConfig result = new io.opencannabis.schema.inventory.BoundaryConfig(this);
      if (startBuilder_ == null) {
        result.start_ = start_;
      } else {
        result.start_ = startBuilder_.build();
      }
      if (stopBuilder_ == null) {
        result.stop_ = stop_;
      } else {
        result.stop_ = stopBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opencannabis.schema.inventory.BoundaryConfig) {
        return mergeFrom((io.opencannabis.schema.inventory.BoundaryConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opencannabis.schema.inventory.BoundaryConfig other) {
      if (other == io.opencannabis.schema.inventory.BoundaryConfig.getDefaultInstance()) return this;
      if (other.hasStart()) {
        mergeStart(other.getStart());
      }
      if (other.hasStop()) {
        mergeStop(other.getStop());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.opencannabis.schema.inventory.BoundaryConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.opencannabis.schema.inventory.BoundaryConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger start_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger, io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.Builder, io.opencannabis.schema.inventory.BoundaryConfig.StartTriggerOrBuilder> startBuilder_;
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    public boolean hasStart() {
      return startBuilder_ != null || start_ != null;
    }
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    public io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger getStart() {
      if (startBuilder_ == null) {
        return start_ == null ? io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.getDefaultInstance() : start_;
      } else {
        return startBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    public Builder setStart(io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger value) {
      if (startBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        start_ = value;
        onChanged();
      } else {
        startBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    public Builder setStart(
        io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.Builder builderForValue) {
      if (startBuilder_ == null) {
        start_ = builderForValue.build();
        onChanged();
      } else {
        startBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    public Builder mergeStart(io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger value) {
      if (startBuilder_ == null) {
        if (start_ != null) {
          start_ =
            io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.newBuilder(start_).mergeFrom(value).buildPartial();
        } else {
          start_ = value;
        }
        onChanged();
      } else {
        startBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    public Builder clearStart() {
      if (startBuilder_ == null) {
        start_ = null;
        onChanged();
      } else {
        start_ = null;
        startBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    public io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.Builder getStartBuilder() {
      
      onChanged();
      return getStartFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    public io.opencannabis.schema.inventory.BoundaryConfig.StartTriggerOrBuilder getStartOrBuilder() {
      if (startBuilder_ != null) {
        return startBuilder_.getMessageOrBuilder();
      } else {
        return start_ == null ?
            io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.getDefaultInstance() : start_;
      }
    }
    /**
     * <pre>
     * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
     * be emitted to LLRP clients listening for read events.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger, io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.Builder, io.opencannabis.schema.inventory.BoundaryConfig.StartTriggerOrBuilder> 
        getStartFieldBuilder() {
      if (startBuilder_ == null) {
        startBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger, io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger.Builder, io.opencannabis.schema.inventory.BoundaryConfig.StartTriggerOrBuilder>(
                getStart(),
                getParentForChildren(),
                isClean());
        start_ = null;
      }
      return startBuilder_;
    }

    private io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger stop_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger, io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.Builder, io.opencannabis.schema.inventory.BoundaryConfig.StopTriggerOrBuilder> stopBuilder_;
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    public boolean hasStop() {
      return stopBuilder_ != null || stop_ != null;
    }
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    public io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger getStop() {
      if (stopBuilder_ == null) {
        return stop_ == null ? io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.getDefaultInstance() : stop_;
      } else {
        return stopBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    public Builder setStop(io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger value) {
      if (stopBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        stop_ = value;
        onChanged();
      } else {
        stopBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    public Builder setStop(
        io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.Builder builderForValue) {
      if (stopBuilder_ == null) {
        stop_ = builderForValue.build();
        onChanged();
      } else {
        stopBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    public Builder mergeStop(io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger value) {
      if (stopBuilder_ == null) {
        if (stop_ != null) {
          stop_ =
            io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.newBuilder(stop_).mergeFrom(value).buildPartial();
        } else {
          stop_ = value;
        }
        onChanged();
      } else {
        stopBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    public Builder clearStop() {
      if (stopBuilder_ == null) {
        stop_ = null;
        onChanged();
      } else {
        stop_ = null;
        stopBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    public io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.Builder getStopBuilder() {
      
      onChanged();
      return getStopFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    public io.opencannabis.schema.inventory.BoundaryConfig.StopTriggerOrBuilder getStopOrBuilder() {
      if (stopBuilder_ != null) {
        return stopBuilder_.getMessageOrBuilder();
      } else {
        return stop_ == null ?
            io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.getDefaultInstance() : stop_;
      }
    }
    /**
     * <pre>
     * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
     * met or otherwise satisfied, scanning and event reporting stops.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger, io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.Builder, io.opencannabis.schema.inventory.BoundaryConfig.StopTriggerOrBuilder> 
        getStopFieldBuilder() {
      if (stopBuilder_ == null) {
        stopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger, io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger.Builder, io.opencannabis.schema.inventory.BoundaryConfig.StopTriggerOrBuilder>(
                getStop(),
                getParentForChildren(),
                isClean());
        stop_ = null;
      }
      return stopBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opencannabis.inventory.rfid.BoundaryConfig)
  }

  // @@protoc_insertion_point(class_scope:opencannabis.inventory.rfid.BoundaryConfig)
  private static final io.opencannabis.schema.inventory.BoundaryConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opencannabis.schema.inventory.BoundaryConfig();
  }

  public static io.opencannabis.schema.inventory.BoundaryConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BoundaryConfig>
      PARSER = new com.google.protobuf.AbstractParser<BoundaryConfig>() {
    @java.lang.Override
    public BoundaryConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BoundaryConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BoundaryConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BoundaryConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.opencannabis.schema.inventory.BoundaryConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

