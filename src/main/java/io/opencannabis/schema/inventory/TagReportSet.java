/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory/rfid/LLRP.proto

package io.opencannabis.schema.inventory;

/**
 * <pre>
 * Describes a set of RFID tag reports, produced by an RFID reader device, through an antenna, which has attenuated with
 * one or more tags and detected their contents as part of an RF survey or reader operation run.
 * </pre>
 *
 * Protobuf type {@code opencannabis.inventory.rfid.TagReportSet}
 */
public  final class TagReportSet extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opencannabis.inventory.rfid.TagReportSet)
    TagReportSetOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TagReportSet.newBuilder() to construct.
  private TagReportSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TagReportSet() {
    report_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TagReportSet(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.opencannabis.schema.inventory.TagReportOrigin.Builder subBuilder = null;
            if (origin_ != null) {
              subBuilder = origin_.toBuilder();
            }
            origin_ = input.readMessage(io.opencannabis.schema.inventory.TagReportOrigin.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(origin_);
              origin_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              report_ = new java.util.ArrayList<io.opencannabis.schema.inventory.TagReport>();
              mutable_bitField0_ |= 0x00000002;
            }
            report_.add(
                input.readMessage(io.opencannabis.schema.inventory.TagReport.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        report_ = java.util.Collections.unmodifiableList(report_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReportSet_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReportSet_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opencannabis.schema.inventory.TagReportSet.class, io.opencannabis.schema.inventory.TagReportSet.Builder.class);
  }

  private int bitField0_;
  public static final int ORIGIN_FIELD_NUMBER = 1;
  private io.opencannabis.schema.inventory.TagReportOrigin origin_;
  /**
   * <pre>
   * Specifies the origin of this tag report, including the reader device and partnership scope.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
   */
  public boolean hasOrigin() {
    return origin_ != null;
  }
  /**
   * <pre>
   * Specifies the origin of this tag report, including the reader device and partnership scope.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
   */
  public io.opencannabis.schema.inventory.TagReportOrigin getOrigin() {
    return origin_ == null ? io.opencannabis.schema.inventory.TagReportOrigin.getDefaultInstance() : origin_;
  }
  /**
   * <pre>
   * Specifies the origin of this tag report, including the reader device and partnership scope.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
   */
  public io.opencannabis.schema.inventory.TagReportOriginOrBuilder getOriginOrBuilder() {
    return getOrigin();
  }

  public static final int REPORT_FIELD_NUMBER = 2;
  private java.util.List<io.opencannabis.schema.inventory.TagReport> report_;
  /**
   * <pre>
   * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
   * that detected the tag in question.
   * </pre>
   *
   * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
   */
  public java.util.List<io.opencannabis.schema.inventory.TagReport> getReportList() {
    return report_;
  }
  /**
   * <pre>
   * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
   * that detected the tag in question.
   * </pre>
   *
   * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
   */
  public java.util.List<? extends io.opencannabis.schema.inventory.TagReportOrBuilder> 
      getReportOrBuilderList() {
    return report_;
  }
  /**
   * <pre>
   * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
   * that detected the tag in question.
   * </pre>
   *
   * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
   */
  public int getReportCount() {
    return report_.size();
  }
  /**
   * <pre>
   * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
   * that detected the tag in question.
   * </pre>
   *
   * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
   */
  public io.opencannabis.schema.inventory.TagReport getReport(int index) {
    return report_.get(index);
  }
  /**
   * <pre>
   * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
   * that detected the tag in question.
   * </pre>
   *
   * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
   */
  public io.opencannabis.schema.inventory.TagReportOrBuilder getReportOrBuilder(
      int index) {
    return report_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (origin_ != null) {
      output.writeMessage(1, getOrigin());
    }
    for (int i = 0; i < report_.size(); i++) {
      output.writeMessage(2, report_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (origin_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getOrigin());
    }
    for (int i = 0; i < report_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, report_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opencannabis.schema.inventory.TagReportSet)) {
      return super.equals(obj);
    }
    io.opencannabis.schema.inventory.TagReportSet other = (io.opencannabis.schema.inventory.TagReportSet) obj;

    if (hasOrigin() != other.hasOrigin()) return false;
    if (hasOrigin()) {
      if (!getOrigin()
          .equals(other.getOrigin())) return false;
    }
    if (!getReportList()
        .equals(other.getReportList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOrigin()) {
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
    }
    if (getReportCount() > 0) {
      hash = (37 * hash) + REPORT_FIELD_NUMBER;
      hash = (53 * hash) + getReportList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.inventory.TagReportSet parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opencannabis.schema.inventory.TagReportSet prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes a set of RFID tag reports, produced by an RFID reader device, through an antenna, which has attenuated with
   * one or more tags and detected their contents as part of an RF survey or reader operation run.
   * </pre>
   *
   * Protobuf type {@code opencannabis.inventory.rfid.TagReportSet}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opencannabis.inventory.rfid.TagReportSet)
      io.opencannabis.schema.inventory.TagReportSetOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReportSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReportSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.inventory.TagReportSet.class, io.opencannabis.schema.inventory.TagReportSet.Builder.class);
    }

    // Construct using io.opencannabis.schema.inventory.TagReportSet.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getReportFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (originBuilder_ == null) {
        origin_ = null;
      } else {
        origin_ = null;
        originBuilder_ = null;
      }
      if (reportBuilder_ == null) {
        report_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        reportBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opencannabis.schema.inventory.LLRP.internal_static_opencannabis_inventory_rfid_TagReportSet_descriptor;
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.TagReportSet getDefaultInstanceForType() {
      return io.opencannabis.schema.inventory.TagReportSet.getDefaultInstance();
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.TagReportSet build() {
      io.opencannabis.schema.inventory.TagReportSet result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.opencannabis.schema.inventory.TagReportSet buildPartial() {
      io.opencannabis.schema.inventory.TagReportSet result = new io.opencannabis.schema.inventory.TagReportSet(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (originBuilder_ == null) {
        result.origin_ = origin_;
      } else {
        result.origin_ = originBuilder_.build();
      }
      if (reportBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          report_ = java.util.Collections.unmodifiableList(report_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.report_ = report_;
      } else {
        result.report_ = reportBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opencannabis.schema.inventory.TagReportSet) {
        return mergeFrom((io.opencannabis.schema.inventory.TagReportSet)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opencannabis.schema.inventory.TagReportSet other) {
      if (other == io.opencannabis.schema.inventory.TagReportSet.getDefaultInstance()) return this;
      if (other.hasOrigin()) {
        mergeOrigin(other.getOrigin());
      }
      if (reportBuilder_ == null) {
        if (!other.report_.isEmpty()) {
          if (report_.isEmpty()) {
            report_ = other.report_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureReportIsMutable();
            report_.addAll(other.report_);
          }
          onChanged();
        }
      } else {
        if (!other.report_.isEmpty()) {
          if (reportBuilder_.isEmpty()) {
            reportBuilder_.dispose();
            reportBuilder_ = null;
            report_ = other.report_;
            bitField0_ = (bitField0_ & ~0x00000002);
            reportBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getReportFieldBuilder() : null;
          } else {
            reportBuilder_.addAllMessages(other.report_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.opencannabis.schema.inventory.TagReportSet parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.opencannabis.schema.inventory.TagReportSet) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private io.opencannabis.schema.inventory.TagReportOrigin origin_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.TagReportOrigin, io.opencannabis.schema.inventory.TagReportOrigin.Builder, io.opencannabis.schema.inventory.TagReportOriginOrBuilder> originBuilder_;
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    public boolean hasOrigin() {
      return originBuilder_ != null || origin_ != null;
    }
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    public io.opencannabis.schema.inventory.TagReportOrigin getOrigin() {
      if (originBuilder_ == null) {
        return origin_ == null ? io.opencannabis.schema.inventory.TagReportOrigin.getDefaultInstance() : origin_;
      } else {
        return originBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    public Builder setOrigin(io.opencannabis.schema.inventory.TagReportOrigin value) {
      if (originBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        origin_ = value;
        onChanged();
      } else {
        originBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    public Builder setOrigin(
        io.opencannabis.schema.inventory.TagReportOrigin.Builder builderForValue) {
      if (originBuilder_ == null) {
        origin_ = builderForValue.build();
        onChanged();
      } else {
        originBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    public Builder mergeOrigin(io.opencannabis.schema.inventory.TagReportOrigin value) {
      if (originBuilder_ == null) {
        if (origin_ != null) {
          origin_ =
            io.opencannabis.schema.inventory.TagReportOrigin.newBuilder(origin_).mergeFrom(value).buildPartial();
        } else {
          origin_ = value;
        }
        onChanged();
      } else {
        originBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    public Builder clearOrigin() {
      if (originBuilder_ == null) {
        origin_ = null;
        onChanged();
      } else {
        origin_ = null;
        originBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    public io.opencannabis.schema.inventory.TagReportOrigin.Builder getOriginBuilder() {
      
      onChanged();
      return getOriginFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    public io.opencannabis.schema.inventory.TagReportOriginOrBuilder getOriginOrBuilder() {
      if (originBuilder_ != null) {
        return originBuilder_.getMessageOrBuilder();
      } else {
        return origin_ == null ?
            io.opencannabis.schema.inventory.TagReportOrigin.getDefaultInstance() : origin_;
      }
    }
    /**
     * <pre>
     * Specifies the origin of this tag report, including the reader device and partnership scope.
     * </pre>
     *
     * <code>.opencannabis.inventory.rfid.TagReportOrigin origin = 1 [(.gen_bq_schema.description) = "Specifies the origin of this tag report, including the reader device and scope."];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.inventory.TagReportOrigin, io.opencannabis.schema.inventory.TagReportOrigin.Builder, io.opencannabis.schema.inventory.TagReportOriginOrBuilder> 
        getOriginFieldBuilder() {
      if (originBuilder_ == null) {
        originBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.inventory.TagReportOrigin, io.opencannabis.schema.inventory.TagReportOrigin.Builder, io.opencannabis.schema.inventory.TagReportOriginOrBuilder>(
                getOrigin(),
                getParentForChildren(),
                isClean());
        origin_ = null;
      }
      return originBuilder_;
    }

    private java.util.List<io.opencannabis.schema.inventory.TagReport> report_ =
      java.util.Collections.emptyList();
    private void ensureReportIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        report_ = new java.util.ArrayList<io.opencannabis.schema.inventory.TagReport>(report_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.opencannabis.schema.inventory.TagReport, io.opencannabis.schema.inventory.TagReport.Builder, io.opencannabis.schema.inventory.TagReportOrBuilder> reportBuilder_;

    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public java.util.List<io.opencannabis.schema.inventory.TagReport> getReportList() {
      if (reportBuilder_ == null) {
        return java.util.Collections.unmodifiableList(report_);
      } else {
        return reportBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public int getReportCount() {
      if (reportBuilder_ == null) {
        return report_.size();
      } else {
        return reportBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public io.opencannabis.schema.inventory.TagReport getReport(int index) {
      if (reportBuilder_ == null) {
        return report_.get(index);
      } else {
        return reportBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder setReport(
        int index, io.opencannabis.schema.inventory.TagReport value) {
      if (reportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReportIsMutable();
        report_.set(index, value);
        onChanged();
      } else {
        reportBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder setReport(
        int index, io.opencannabis.schema.inventory.TagReport.Builder builderForValue) {
      if (reportBuilder_ == null) {
        ensureReportIsMutable();
        report_.set(index, builderForValue.build());
        onChanged();
      } else {
        reportBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder addReport(io.opencannabis.schema.inventory.TagReport value) {
      if (reportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReportIsMutable();
        report_.add(value);
        onChanged();
      } else {
        reportBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder addReport(
        int index, io.opencannabis.schema.inventory.TagReport value) {
      if (reportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReportIsMutable();
        report_.add(index, value);
        onChanged();
      } else {
        reportBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder addReport(
        io.opencannabis.schema.inventory.TagReport.Builder builderForValue) {
      if (reportBuilder_ == null) {
        ensureReportIsMutable();
        report_.add(builderForValue.build());
        onChanged();
      } else {
        reportBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder addReport(
        int index, io.opencannabis.schema.inventory.TagReport.Builder builderForValue) {
      if (reportBuilder_ == null) {
        ensureReportIsMutable();
        report_.add(index, builderForValue.build());
        onChanged();
      } else {
        reportBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder addAllReport(
        java.lang.Iterable<? extends io.opencannabis.schema.inventory.TagReport> values) {
      if (reportBuilder_ == null) {
        ensureReportIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, report_);
        onChanged();
      } else {
        reportBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder clearReport() {
      if (reportBuilder_ == null) {
        report_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        reportBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public Builder removeReport(int index) {
      if (reportBuilder_ == null) {
        ensureReportIsMutable();
        report_.remove(index);
        onChanged();
      } else {
        reportBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public io.opencannabis.schema.inventory.TagReport.Builder getReportBuilder(
        int index) {
      return getReportFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public io.opencannabis.schema.inventory.TagReportOrBuilder getReportOrBuilder(
        int index) {
      if (reportBuilder_ == null) {
        return report_.get(index);  } else {
        return reportBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public java.util.List<? extends io.opencannabis.schema.inventory.TagReportOrBuilder> 
         getReportOrBuilderList() {
      if (reportBuilder_ != null) {
        return reportBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(report_);
      }
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public io.opencannabis.schema.inventory.TagReport.Builder addReportBuilder() {
      return getReportFieldBuilder().addBuilder(
          io.opencannabis.schema.inventory.TagReport.getDefaultInstance());
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public io.opencannabis.schema.inventory.TagReport.Builder addReportBuilder(
        int index) {
      return getReportFieldBuilder().addBuilder(
          index, io.opencannabis.schema.inventory.TagReport.getDefaultInstance());
    }
    /**
     * <pre>
     * Describes the tags seen in a given tag report set, including each tag's relative signal strength and the antenna
     * that detected the tag in question.
     * </pre>
     *
     * <code>repeated .opencannabis.inventory.rfid.TagReport report = 2 [(.gen_bq_schema.description) = "Describes the tags seen in a given tag report set."];</code>
     */
    public java.util.List<io.opencannabis.schema.inventory.TagReport.Builder> 
         getReportBuilderList() {
      return getReportFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.opencannabis.schema.inventory.TagReport, io.opencannabis.schema.inventory.TagReport.Builder, io.opencannabis.schema.inventory.TagReportOrBuilder> 
        getReportFieldBuilder() {
      if (reportBuilder_ == null) {
        reportBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.opencannabis.schema.inventory.TagReport, io.opencannabis.schema.inventory.TagReport.Builder, io.opencannabis.schema.inventory.TagReportOrBuilder>(
                report_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        report_ = null;
      }
      return reportBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opencannabis.inventory.rfid.TagReportSet)
  }

  // @@protoc_insertion_point(class_scope:opencannabis.inventory.rfid.TagReportSet)
  private static final io.opencannabis.schema.inventory.TagReportSet DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opencannabis.schema.inventory.TagReportSet();
  }

  public static io.opencannabis.schema.inventory.TagReportSet getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TagReportSet>
      PARSER = new com.google.protobuf.AbstractParser<TagReportSet>() {
    @java.lang.Override
    public TagReportSet parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TagReportSet(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TagReportSet> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TagReportSet> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.opencannabis.schema.inventory.TagReportSet getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

