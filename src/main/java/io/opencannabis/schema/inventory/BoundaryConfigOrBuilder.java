/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory/rfid/LLRP.proto

package io.opencannabis.schema.inventory;

public interface BoundaryConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.inventory.rfid.BoundaryConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
   * be emitted to LLRP clients listening for read events.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
   */
  boolean hasStart();
  /**
   * <pre>
   * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
   * be emitted to LLRP clients listening for read events.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
   */
  io.opencannabis.schema.inventory.BoundaryConfig.StartTrigger getStart();
  /**
   * <pre>
   * Specifies the start trigger for an `ROSpec`, which describes how RF operations, or reading events, should begin and
   * be emitted to LLRP clients listening for read events.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StartTrigger start = 1;</code>
   */
  io.opencannabis.schema.inventory.BoundaryConfig.StartTriggerOrBuilder getStartOrBuilder();

  /**
   * <pre>
   * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
   * met or otherwise satisfied, scanning and event reporting stops.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
   */
  boolean hasStop();
  /**
   * <pre>
   * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
   * met or otherwise satisfied, scanning and event reporting stops.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
   */
  io.opencannabis.schema.inventory.BoundaryConfig.StopTrigger getStop();
  /**
   * <pre>
   * Specifies the stop trigger for an `ROSpec`, which describes how long to scan for RF tags. Once a stop trigger is
   * met or otherwise satisfied, scanning and event reporting stops.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.BoundaryConfig.StopTrigger stop = 2;</code>
   */
  io.opencannabis.schema.inventory.BoundaryConfig.StopTriggerOrBuilder getStopOrBuilder();
}
