/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory/rfid/RFID.proto

package io.opencannabis.schema.inventory;

public interface ReaderOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.inventory.rfid.Reader)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies the string name of the reader, if one is assigned and could be detected.
   * </pre>
   *
   * <code>string name = 1 [(.gen_bq_schema.description) = "Canonical label/name for the reader device involved in an RFID operation."];</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * Specifies the string name of the reader, if one is assigned and could be detected.
   * </pre>
   *
   * <code>string name = 1 [(.gen_bq_schema.description) = "Canonical label/name for the reader device involved in an RFID operation."];</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Specifies the MAC address of the reader device, assigned to the Ethernet/PoE port embedded on the device and hooked
   * into the local network.
   * </pre>
   *
   * <code>string mac = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "MAC address of the reader device involved in an RFID operation."];</code>
   */
  java.lang.String getMac();
  /**
   * <pre>
   * Specifies the MAC address of the reader device, assigned to the Ethernet/PoE port embedded on the device and hooked
   * into the local network.
   * </pre>
   *
   * <code>string mac = 2 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "MAC address of the reader device involved in an RFID operation."];</code>
   */
  com.google.protobuf.ByteString
      getMacBytes();

  /**
   * <pre>
   * Specifies the IP address of the reader device, where it can be connected to over LLRP, assuming no firewall or
   * security IDS/IPS interference.
   * </pre>
   *
   * <code>string ip = 3 [(.gen_bq_schema.description) = "IP address of the reader device involved in an RFID operation."];</code>
   */
  java.lang.String getIp();
  /**
   * <pre>
   * Specifies the IP address of the reader device, where it can be connected to over LLRP, assuming no firewall or
   * security IDS/IPS interference.
   * </pre>
   *
   * <code>string ip = 3 [(.gen_bq_schema.description) = "IP address of the reader device involved in an RFID operation."];</code>
   */
  com.google.protobuf.ByteString
      getIpBytes();

  /**
   * <pre>
   * Describes the vendor of the RFID reader controller, if one could be detected.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.ReaderVendor vendor = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Vendor for the reader involved in an RFID operation."];</code>
   */
  int getVendorValue();
  /**
   * <pre>
   * Describes the vendor of the RFID reader controller, if one could be detected.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.ReaderVendor vendor = 4 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Vendor for the reader involved in an RFID operation."];</code>
   */
  io.opencannabis.schema.inventory.ReaderVendor getVendor();

  /**
   * <pre>
   * Describes the model of the RFID reader controller, if one could be detected.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.ReaderModel model = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Model of the reader involved in an RFID operation."];</code>
   */
  int getModelValue();
  /**
   * <pre>
   * Describes the model of the RFID reader controller, if one could be detected.
   * </pre>
   *
   * <code>.opencannabis.inventory.rfid.ReaderModel model = 5 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Model of the reader involved in an RFID operation."];</code>
   */
  io.opencannabis.schema.inventory.ReaderModel getModel();
}
