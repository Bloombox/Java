/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: content/Brand.proto

package io.opencannabis.schema.content;

public interface BrandOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.content.Brand)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Naming information for this brand.
   * </pre>
   *
   * <code>.opencannabis.content.Name name = 1;</code>
   */
  boolean hasName();
  /**
   * <pre>
   * Naming information for this brand.
   * </pre>
   *
   * <code>.opencannabis.content.Name name = 1;</code>
   */
  io.opencannabis.schema.content.Name getName();
  /**
   * <pre>
   * Naming information for this brand.
   * </pre>
   *
   * <code>.opencannabis.content.Name name = 1;</code>
   */
  io.opencannabis.schema.content.NameOrBuilder getNameOrBuilder();

  /**
   * <pre>
   * Parent/owning brand, if applicable.
   * </pre>
   *
   * <code>.opencannabis.content.Brand parent = 2;</code>
   */
  boolean hasParent();
  /**
   * <pre>
   * Parent/owning brand, if applicable.
   * </pre>
   *
   * <code>.opencannabis.content.Brand parent = 2;</code>
   */
  io.opencannabis.schema.content.Brand getParent();
  /**
   * <pre>
   * Parent/owning brand, if applicable.
   * </pre>
   *
   * <code>.opencannabis.content.Brand parent = 2;</code>
   */
  io.opencannabis.schema.content.BrandOrBuilder getParentOrBuilder();

  /**
   * <pre>
   * Summary information or content about this brand.
   * </pre>
   *
   * <code>.opencannabis.content.Content summary = 3;</code>
   */
  boolean hasSummary();
  /**
   * <pre>
   * Summary information or content about this brand.
   * </pre>
   *
   * <code>.opencannabis.content.Content summary = 3;</code>
   */
  io.opencannabis.schema.content.Content getSummary();
  /**
   * <pre>
   * Summary information or content about this brand.
   * </pre>
   *
   * <code>.opencannabis.content.Content summary = 3;</code>
   */
  io.opencannabis.schema.content.ContentOrBuilder getSummaryOrBuilder();

  /**
   * <pre>
   * Media items attached to this brand.
   * </pre>
   *
   * <code>repeated .opencannabis.media.MediaItem media = 20;</code>
   */
  java.util.List<io.opencannabis.schema.media.MediaItem> 
      getMediaList();
  /**
   * <pre>
   * Media items attached to this brand.
   * </pre>
   *
   * <code>repeated .opencannabis.media.MediaItem media = 20;</code>
   */
  io.opencannabis.schema.media.MediaItem getMedia(int index);
  /**
   * <pre>
   * Media items attached to this brand.
   * </pre>
   *
   * <code>repeated .opencannabis.media.MediaItem media = 20;</code>
   */
  int getMediaCount();
  /**
   * <pre>
   * Media items attached to this brand.
   * </pre>
   *
   * <code>repeated .opencannabis.media.MediaItem media = 20;</code>
   */
  java.util.List<? extends io.opencannabis.schema.media.MediaItemOrBuilder> 
      getMediaOrBuilderList();
  /**
   * <pre>
   * Media items attached to this brand.
   * </pre>
   *
   * <code>repeated .opencannabis.media.MediaItem media = 20;</code>
   */
  io.opencannabis.schema.media.MediaItemOrBuilder getMediaOrBuilder(
      int index);
}
