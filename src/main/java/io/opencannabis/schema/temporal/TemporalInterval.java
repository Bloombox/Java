/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temporal/Interval.proto

package io.opencannabis.schema.temporal;

public final class TemporalInterval {
  private TemporalInterval() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Enumerates supported time interval types.
   * </pre>
   *
   * Protobuf enum {@code opencannabis.temporal.Interval}
   */
  public enum Interval
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Specifies the default value of a minute-scale window.
     * </pre>
     *
     * <code>MINUTELY = 0;</code>
     */
    MINUTELY(0),
    /**
     * <pre>
     * Specifies an hour-scale window.
     * </pre>
     *
     * <code>HOURLY = 1;</code>
     */
    HOURLY(1),
    /**
     * <pre>
     * Specifies a day-scale window.
     * </pre>
     *
     * <code>DAILY = 2;</code>
     */
    DAILY(2),
    /**
     * <pre>
     * Specifies a week-scale window.
     * </pre>
     *
     * <code>WEEKLY = 3;</code>
     */
    WEEKLY(3),
    /**
     * <pre>
     * Specifies a calendar month-scale window.
     * </pre>
     *
     * <code>MONTHLY = 4;</code>
     */
    MONTHLY(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Specifies the default value of a minute-scale window.
     * </pre>
     *
     * <code>MINUTELY = 0;</code>
     */
    public static final int MINUTELY_VALUE = 0;
    /**
     * <pre>
     * Specifies an hour-scale window.
     * </pre>
     *
     * <code>HOURLY = 1;</code>
     */
    public static final int HOURLY_VALUE = 1;
    /**
     * <pre>
     * Specifies a day-scale window.
     * </pre>
     *
     * <code>DAILY = 2;</code>
     */
    public static final int DAILY_VALUE = 2;
    /**
     * <pre>
     * Specifies a week-scale window.
     * </pre>
     *
     * <code>WEEKLY = 3;</code>
     */
    public static final int WEEKLY_VALUE = 3;
    /**
     * <pre>
     * Specifies a calendar month-scale window.
     * </pre>
     *
     * <code>MONTHLY = 4;</code>
     */
    public static final int MONTHLY_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Interval valueOf(int value) {
      return forNumber(value);
    }

    public static Interval forNumber(int value) {
      switch (value) {
        case 0: return MINUTELY;
        case 1: return HOURLY;
        case 2: return DAILY;
        case 3: return WEEKLY;
        case 4: return MONTHLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Interval>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Interval> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Interval>() {
            public Interval findValueByNumber(int number) {
              return Interval.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.opencannabis.schema.temporal.TemporalInterval.getDescriptor().getEnumTypes().get(0);
    }

    private static final Interval[] VALUES = values();

    public static Interval valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Interval(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:opencannabis.temporal.Interval)
  }

  public interface TimeIntervalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:opencannabis.temporal.TimeInterval)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies the type of interval.
     * </pre>
     *
     * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
     */
    int getIntervalValue();
    /**
     * <pre>
     * Specifies the type of interval.
     * </pre>
     *
     * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
     */
    io.opencannabis.schema.temporal.TemporalInterval.Interval getInterval();

    /**
     * <pre>
     * Optional: specifies the interval border.
     * </pre>
     *
     * <code>uint32 every = 2 [(.gen_bq_schema.description) = "Specifies an optional interval border, i.e., the N in &#92;'every N seconds&#92;'."];</code>
     */
    int getEvery();
  }
  /**
   * <pre>
   * Specifies time interval information.
   * </pre>
   *
   * Protobuf type {@code opencannabis.temporal.TimeInterval}
   */
  public  static final class TimeInterval extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:opencannabis.temporal.TimeInterval)
      TimeIntervalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimeInterval.newBuilder() to construct.
    private TimeInterval(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimeInterval() {
      interval_ = 0;
      every_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TimeInterval(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              interval_ = rawValue;
              break;
            }
            case 16: {

              every_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.temporal.TemporalInterval.internal_static_opencannabis_temporal_TimeInterval_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.temporal.TemporalInterval.internal_static_opencannabis_temporal_TimeInterval_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.temporal.TemporalInterval.TimeInterval.class, io.opencannabis.schema.temporal.TemporalInterval.TimeInterval.Builder.class);
    }

    public static final int INTERVAL_FIELD_NUMBER = 1;
    private int interval_;
    /**
     * <pre>
     * Specifies the type of interval.
     * </pre>
     *
     * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
     */
    public int getIntervalValue() {
      return interval_;
    }
    /**
     * <pre>
     * Specifies the type of interval.
     * </pre>
     *
     * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalInterval.Interval getInterval() {
      io.opencannabis.schema.temporal.TemporalInterval.Interval result = io.opencannabis.schema.temporal.TemporalInterval.Interval.valueOf(interval_);
      return result == null ? io.opencannabis.schema.temporal.TemporalInterval.Interval.UNRECOGNIZED : result;
    }

    public static final int EVERY_FIELD_NUMBER = 2;
    private int every_;
    /**
     * <pre>
     * Optional: specifies the interval border.
     * </pre>
     *
     * <code>uint32 every = 2 [(.gen_bq_schema.description) = "Specifies an optional interval border, i.e., the N in &#92;'every N seconds&#92;'."];</code>
     */
    public int getEvery() {
      return every_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (interval_ != io.opencannabis.schema.temporal.TemporalInterval.Interval.MINUTELY.getNumber()) {
        output.writeEnum(1, interval_);
      }
      if (every_ != 0) {
        output.writeUInt32(2, every_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (interval_ != io.opencannabis.schema.temporal.TemporalInterval.Interval.MINUTELY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, interval_);
      }
      if (every_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, every_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.opencannabis.schema.temporal.TemporalInterval.TimeInterval)) {
        return super.equals(obj);
      }
      io.opencannabis.schema.temporal.TemporalInterval.TimeInterval other = (io.opencannabis.schema.temporal.TemporalInterval.TimeInterval) obj;

      boolean result = true;
      result = result && interval_ == other.interval_;
      result = result && (getEvery()
          == other.getEvery());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + interval_;
      hash = (37 * hash) + EVERY_FIELD_NUMBER;
      hash = (53 * hash) + getEvery();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.opencannabis.schema.temporal.TemporalInterval.TimeInterval prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies time interval information.
     * </pre>
     *
     * Protobuf type {@code opencannabis.temporal.TimeInterval}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:opencannabis.temporal.TimeInterval)
        io.opencannabis.schema.temporal.TemporalInterval.TimeIntervalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.opencannabis.schema.temporal.TemporalInterval.internal_static_opencannabis_temporal_TimeInterval_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.opencannabis.schema.temporal.TemporalInterval.internal_static_opencannabis_temporal_TimeInterval_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.opencannabis.schema.temporal.TemporalInterval.TimeInterval.class, io.opencannabis.schema.temporal.TemporalInterval.TimeInterval.Builder.class);
      }

      // Construct using io.opencannabis.schema.temporal.TemporalInterval.TimeInterval.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        interval_ = 0;

        every_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.opencannabis.schema.temporal.TemporalInterval.internal_static_opencannabis_temporal_TimeInterval_descriptor;
      }

      public io.opencannabis.schema.temporal.TemporalInterval.TimeInterval getDefaultInstanceForType() {
        return io.opencannabis.schema.temporal.TemporalInterval.TimeInterval.getDefaultInstance();
      }

      public io.opencannabis.schema.temporal.TemporalInterval.TimeInterval build() {
        io.opencannabis.schema.temporal.TemporalInterval.TimeInterval result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.opencannabis.schema.temporal.TemporalInterval.TimeInterval buildPartial() {
        io.opencannabis.schema.temporal.TemporalInterval.TimeInterval result = new io.opencannabis.schema.temporal.TemporalInterval.TimeInterval(this);
        result.interval_ = interval_;
        result.every_ = every_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.opencannabis.schema.temporal.TemporalInterval.TimeInterval) {
          return mergeFrom((io.opencannabis.schema.temporal.TemporalInterval.TimeInterval)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.opencannabis.schema.temporal.TemporalInterval.TimeInterval other) {
        if (other == io.opencannabis.schema.temporal.TemporalInterval.TimeInterval.getDefaultInstance()) return this;
        if (other.interval_ != 0) {
          setIntervalValue(other.getIntervalValue());
        }
        if (other.getEvery() != 0) {
          setEvery(other.getEvery());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.opencannabis.schema.temporal.TemporalInterval.TimeInterval parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.opencannabis.schema.temporal.TemporalInterval.TimeInterval) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int interval_ = 0;
      /**
       * <pre>
       * Specifies the type of interval.
       * </pre>
       *
       * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
       */
      public int getIntervalValue() {
        return interval_;
      }
      /**
       * <pre>
       * Specifies the type of interval.
       * </pre>
       *
       * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
       */
      public Builder setIntervalValue(int value) {
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the type of interval.
       * </pre>
       *
       * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalInterval.Interval getInterval() {
        io.opencannabis.schema.temporal.TemporalInterval.Interval result = io.opencannabis.schema.temporal.TemporalInterval.Interval.valueOf(interval_);
        return result == null ? io.opencannabis.schema.temporal.TemporalInterval.Interval.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Specifies the type of interval.
       * </pre>
       *
       * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
       */
      public Builder setInterval(io.opencannabis.schema.temporal.TemporalInterval.Interval value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        interval_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the type of interval.
       * </pre>
       *
       * <code>.opencannabis.temporal.Interval interval = 1 [(.gen_bq_schema.description) = "Specifies the type/window for the time interval."];</code>
       */
      public Builder clearInterval() {
        
        interval_ = 0;
        onChanged();
        return this;
      }

      private int every_ ;
      /**
       * <pre>
       * Optional: specifies the interval border.
       * </pre>
       *
       * <code>uint32 every = 2 [(.gen_bq_schema.description) = "Specifies an optional interval border, i.e., the N in &#92;'every N seconds&#92;'."];</code>
       */
      public int getEvery() {
        return every_;
      }
      /**
       * <pre>
       * Optional: specifies the interval border.
       * </pre>
       *
       * <code>uint32 every = 2 [(.gen_bq_schema.description) = "Specifies an optional interval border, i.e., the N in &#92;'every N seconds&#92;'."];</code>
       */
      public Builder setEvery(int value) {
        
        every_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional: specifies the interval border.
       * </pre>
       *
       * <code>uint32 every = 2 [(.gen_bq_schema.description) = "Specifies an optional interval border, i.e., the N in &#92;'every N seconds&#92;'."];</code>
       */
      public Builder clearEvery() {
        
        every_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:opencannabis.temporal.TimeInterval)
    }

    // @@protoc_insertion_point(class_scope:opencannabis.temporal.TimeInterval)
    private static final io.opencannabis.schema.temporal.TemporalInterval.TimeInterval DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.opencannabis.schema.temporal.TemporalInterval.TimeInterval();
    }

    public static io.opencannabis.schema.temporal.TemporalInterval.TimeInterval getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimeInterval>
        PARSER = new com.google.protobuf.AbstractParser<TimeInterval>() {
      public TimeInterval parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TimeInterval(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimeInterval> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeInterval> getParserForType() {
      return PARSER;
    }

    public io.opencannabis.schema.temporal.TemporalInterval.TimeInterval getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opencannabis_temporal_TimeInterval_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opencannabis_temporal_TimeInterval_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027temporal/Interval.proto\022\025opencannabis." +
      "temporal\032\016bq_field.proto\"\322\001\n\014TimeInterva" +
      "l\022f\n\010interval\030\001 \001(\0162\037.opencannabis.tempo" +
      "ral.IntervalB3\212@0Specifies the type/wind" +
      "ow for the time interval.\022Z\n\005every\030\002 \001(\r" +
      "BK\212@HSpecifies an optional interval bord" +
      "er, i.e., the N in \'every N seconds\'.*H\n" +
      "\010Interval\022\014\n\010MINUTELY\020\000\022\n\n\006HOURLY\020\001\022\t\n\005D" +
      "AILY\020\002\022\n\n\006WEEKLY\020\003\022\013\n\007MONTHLY\020\004B=\n\037io.op" +
      "encannabis.schema.temporalB\020TemporalInte" +
      "rvalH\001P\000\242\002\003OCSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gen_bq_schema.BqField.getDescriptor(),
        }, assigner);
    internal_static_opencannabis_temporal_TimeInterval_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opencannabis_temporal_TimeInterval_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opencannabis_temporal_TimeInterval_descriptor,
        new java.lang.String[] { "Interval", "Every", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    gen_bq_schema.BqField.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
