/*
 * Copyright 2018, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temporal/Duration.proto

package io.opencannabis.schema.temporal;

/**
 * <pre>
 * Specifies time units that may be used to express durations.
 * </pre>
 *
 * Protobuf enum {@code opencannabis.temporal.TimeUnit}
 */
public enum TimeUnit
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Millisecond-level resolution.
   * </pre>
   *
   * <code>MILLISECONDS = 0;</code>
   */
  MILLISECONDS(0),
  /**
   * <pre>
   * Microsecond-level resolution.
   * </pre>
   *
   * <code>MICROSECONDS = 1;</code>
   */
  MICROSECONDS(1),
  /**
   * <pre>
   * Second-level resolution.
   * </pre>
   *
   * <code>SECONDS = 2;</code>
   */
  SECONDS(2),
  /**
   * <pre>
   * Minute-level resolution.
   * </pre>
   *
   * <code>MINUTES = 3;</code>
   */
  MINUTES(3),
  /**
   * <pre>
   * Hour-level resolution.
   * </pre>
   *
   * <code>HOURS = 4;</code>
   */
  HOURS(4),
  /**
   * <pre>
   * Day-level resolution.
   * </pre>
   *
   * <code>DAYS = 5;</code>
   */
  DAYS(5),
  /**
   * <pre>
   * Week-level resolution.
   * </pre>
   *
   * <code>WEEKS = 6;</code>
   */
  WEEKS(6),
  /**
   * <pre>
   * Month-level resolution.
   * </pre>
   *
   * <code>MONTHS = 7;</code>
   */
  MONTHS(7),
  /**
   * <pre>
   * Year-level resolution.
   * </pre>
   *
   * <code>YEARS = 8;</code>
   */
  YEARS(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Millisecond-level resolution.
   * </pre>
   *
   * <code>MILLISECONDS = 0;</code>
   */
  public static final int MILLISECONDS_VALUE = 0;
  /**
   * <pre>
   * Microsecond-level resolution.
   * </pre>
   *
   * <code>MICROSECONDS = 1;</code>
   */
  public static final int MICROSECONDS_VALUE = 1;
  /**
   * <pre>
   * Second-level resolution.
   * </pre>
   *
   * <code>SECONDS = 2;</code>
   */
  public static final int SECONDS_VALUE = 2;
  /**
   * <pre>
   * Minute-level resolution.
   * </pre>
   *
   * <code>MINUTES = 3;</code>
   */
  public static final int MINUTES_VALUE = 3;
  /**
   * <pre>
   * Hour-level resolution.
   * </pre>
   *
   * <code>HOURS = 4;</code>
   */
  public static final int HOURS_VALUE = 4;
  /**
   * <pre>
   * Day-level resolution.
   * </pre>
   *
   * <code>DAYS = 5;</code>
   */
  public static final int DAYS_VALUE = 5;
  /**
   * <pre>
   * Week-level resolution.
   * </pre>
   *
   * <code>WEEKS = 6;</code>
   */
  public static final int WEEKS_VALUE = 6;
  /**
   * <pre>
   * Month-level resolution.
   * </pre>
   *
   * <code>MONTHS = 7;</code>
   */
  public static final int MONTHS_VALUE = 7;
  /**
   * <pre>
   * Year-level resolution.
   * </pre>
   *
   * <code>YEARS = 8;</code>
   */
  public static final int YEARS_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TimeUnit valueOf(int value) {
    return forNumber(value);
  }

  public static TimeUnit forNumber(int value) {
    switch (value) {
      case 0: return MILLISECONDS;
      case 1: return MICROSECONDS;
      case 2: return SECONDS;
      case 3: return MINUTES;
      case 4: return HOURS;
      case 5: return DAYS;
      case 6: return WEEKS;
      case 7: return MONTHS;
      case 8: return YEARS;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TimeUnit>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TimeUnit> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TimeUnit>() {
          public TimeUnit findValueByNumber(int number) {
            return TimeUnit.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.opencannabis.schema.temporal.DurationOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final TimeUnit[] VALUES = values();

  public static TimeUnit valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TimeUnit(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:opencannabis.temporal.TimeUnit)
}

