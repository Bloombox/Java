/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temporal/Instant.proto

package io.opencannabis.schema.temporal;

public interface InstantOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.temporal.Instant)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ISO8601-formatted timestamp.
   * </pre>
   *
   * <code>string iso8601 = 1 [(.gen_bq_schema.description) = "ISO8601-formatted timestamp."];</code>
   */
  java.lang.String getIso8601();
  /**
   * <pre>
   * ISO8601-formatted timestamp.
   * </pre>
   *
   * <code>string iso8601 = 1 [(.gen_bq_schema.description) = "ISO8601-formatted timestamp."];</code>
   */
  com.google.protobuf.ByteString
      getIso8601Bytes();

  /**
   * <pre>
   * Unix epoch timestamp, at millisecond resolution.
   * </pre>
   *
   * <code>uint64 timestamp = 2 [(.gen_bq_schema.description) = "Unix epoch timestamp, at millisecond resolution."];</code>
   */
  long getTimestamp();

  public io.opencannabis.schema.temporal.Instant.SpecCase getSpecCase();
}
