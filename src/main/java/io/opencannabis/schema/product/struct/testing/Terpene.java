// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestResults.proto

package io.opencannabis.schema.product.struct.testing;

/**
 * <pre>
 * Enumerates known terpene compounds. Terpenes are volatile chemical compounds that define the taste and aroma (flavor,
 * smell, etc), and in some manners, the psychokinetic experience of cannabis in flower, concentrate, edible, preroll or
 * cartridge form.
 * </pre>
 *
 * Protobuf enum {@code opencannabis.structs.labtesting.Terpene}
 */
public enum Terpene
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Camphene.
   * </pre>
   *
   * <code>CAMPHENE = 0;</code>
   */
  CAMPHENE(0),
  /**
   * <pre>
   * Carene.
   * </pre>
   *
   * <code>CARENE = 1;</code>
   */
  CARENE(1),
  /**
   * <pre>
   * Beta-caryophyllene.
   * </pre>
   *
   * <code>BETA_CARYOPHYLLENE = 2;</code>
   */
  BETA_CARYOPHYLLENE(2),
  /**
   * <pre>
   * Caryophyllene-oxide.
   * </pre>
   *
   * <code>CARYOPHYLLENE_OXIDE = 3;</code>
   */
  CARYOPHYLLENE_OXIDE(3),
  /**
   * <pre>
   * Eucalyptol.
   * </pre>
   *
   * <code>EUCALYPTOL = 4;</code>
   */
  EUCALYPTOL(4),
  /**
   * <pre>
   * Fenchol.
   * </pre>
   *
   * <code>FENCHOL = 5;</code>
   */
  FENCHOL(5),
  /**
   * <pre>
   * Alpha-humulene.
   * </pre>
   *
   * <code>ALPHA_HUMULENE = 6;</code>
   */
  ALPHA_HUMULENE(6),
  /**
   * <pre>
   * Limonene.
   * </pre>
   *
   * <code>LIMONENE = 7;</code>
   */
  LIMONENE(7),
  /**
   * <pre>
   * Linalool.
   * </pre>
   *
   * <code>LINALOOL = 8;</code>
   */
  LINALOOL(8),
  /**
   * <pre>
   * Myrcene.
   * </pre>
   *
   * <code>MYRCENE = 9;</code>
   */
  MYRCENE(9),
  /**
   * <pre>
   * Alpha-ocimene.
   * </pre>
   *
   * <code>ALPHA_OCIMENE = 10;</code>
   */
  ALPHA_OCIMENE(10),
  /**
   * <pre>
   * Beta-ocimene.
   * </pre>
   *
   * <code>BETA_OCIMENE = 11;</code>
   */
  BETA_OCIMENE(11),
  /**
   * <pre>
   * Alpha-phellandrene.
   * </pre>
   *
   * <code>ALPHA_PHELLANDRENE = 12;</code>
   */
  ALPHA_PHELLANDRENE(12),
  /**
   * <pre>
   * Alpha-pinene.
   * </pre>
   *
   * <code>ALPHA_PINENE = 13;</code>
   */
  ALPHA_PINENE(13),
  /**
   * <pre>
   * Beta-pinene.
   * </pre>
   *
   * <code>BETA_PINENE = 14;</code>
   */
  BETA_PINENE(14),
  /**
   * <pre>
   * Alpha-terpineol.
   * </pre>
   *
   * <code>ALPHA_TERPINEOL = 15;</code>
   */
  ALPHA_TERPINEOL(15),
  /**
   * <pre>
   * Alpha-terpinine.
   * </pre>
   *
   * <code>ALPHA_TERPININE = 16;</code>
   */
  ALPHA_TERPININE(16),
  /**
   * <pre>
   * Gamma-terpinine.
   * </pre>
   *
   * <code>GAMMA_TERPININE = 17;</code>
   */
  GAMMA_TERPININE(17),
  /**
   * <pre>
   * Terpinolene.
   * </pre>
   *
   * <code>TERPINOLENE = 18;</code>
   */
  TERPINOLENE(18),
  /**
   * <pre>
   * Valencene.
   * </pre>
   *
   * <code>VALENCENE = 19;</code>
   */
  VALENCENE(19),
  /**
   * <pre>
   * Geraniol.
   * </pre>
   *
   * <code>GERANIOL = 20;</code>
   */
  GERANIOL(20),
  /**
   * <pre>
   * Phellandrene.
   * </pre>
   *
   * <code>PHELLANDRENE = 21;</code>
   */
  PHELLANDRENE(21),
  /**
   * <pre>
   * Borneol.
   * </pre>
   *
   * <code>BORNEOL = 22;</code>
   */
  BORNEOL(22),
  /**
   * <pre>
   * Isoborneol.
   * </pre>
   *
   * <code>ISOBORNEOL = 23;</code>
   */
  ISOBORNEOL(23),
  /**
   * <pre>
   * Bisabolol.
   * </pre>
   *
   * <code>BISABOLOL = 24;</code>
   */
  BISABOLOL(24),
  /**
   * <pre>
   * Phytol.
   * </pre>
   *
   * <code>PHYTOL = 25;</code>
   */
  PHYTOL(25),
  /**
   * <pre>
   * Sabinene.
   * </pre>
   *
   * <code>SABINENE = 26;</code>
   */
  SABINENE(26),
  /**
   * <pre>
   * Camphor.
   * </pre>
   *
   * <code>CAMPHOR = 27;</code>
   */
  CAMPHOR(27),
  /**
   * <pre>
   * Menthol.
   * </pre>
   *
   * <code>MENTHOL = 28;</code>
   */
  MENTHOL(28),
  /**
   * <pre>
   * Cedrene.
   * </pre>
   *
   * <code>CEDRENE = 29;</code>
   */
  CEDRENE(29),
  /**
   * <pre>
   * Nerol.
   * </pre>
   *
   * <code>NEROL = 30;</code>
   */
  NEROL(30),
  /**
   * <pre>
   * Nerolidol.
   * </pre>
   *
   * <code>NEROLIDOL = 31;</code>
   */
  NEROLIDOL(31),
  /**
   * <pre>
   * Guaiol.
   * </pre>
   *
   * <code>GUAIOL = 32;</code>
   */
  GUAIOL(32),
  /**
   * <pre>
   * Isopulegol.
   * </pre>
   *
   * <code>ISOPULEGOL = 33;</code>
   */
  ISOPULEGOL(33),
  /**
   * <pre>
   * Geranyl-acetate.
   * </pre>
   *
   * <code>GERANYL_ACETATE = 34;</code>
   */
  GERANYL_ACETATE(34),
  /**
   * <pre>
   * Cymene.
   * </pre>
   *
   * <code>CYMENE = 35;</code>
   */
  CYMENE(35),
  /**
   * <pre>
   * Pulegone.
   * </pre>
   *
   * <code>PULEGONE = 36;</code>
   */
  PULEGONE(36),
  /**
   * <pre>
   * Cineole.
   * </pre>
   *
   * <code>CINEOLE = 37;</code>
   */
  CINEOLE(37),
  /**
   * <pre>
   * Fenchone.
   * </pre>
   *
   * <code>FENCHONE = 38;</code>
   */
  FENCHONE(38),
  /**
   * <pre>
   * Terpinene.
   * </pre>
   *
   * <code>TERPINENE = 39;</code>
   */
  TERPINENE(39),
  /**
   * <pre>
   * Citronellol.
   * </pre>
   *
   * <code>CITRONELLOL = 40;</code>
   */
  CITRONELLOL(40),
  /**
   * <pre>
   * Delta-3-carene.
   * </pre>
   *
   * <code>DELTA_3_CARENE = 41;</code>
   */
  DELTA_3_CARENE(41),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Camphene.
   * </pre>
   *
   * <code>CAMPHENE = 0;</code>
   */
  public static final int CAMPHENE_VALUE = 0;
  /**
   * <pre>
   * Carene.
   * </pre>
   *
   * <code>CARENE = 1;</code>
   */
  public static final int CARENE_VALUE = 1;
  /**
   * <pre>
   * Beta-caryophyllene.
   * </pre>
   *
   * <code>BETA_CARYOPHYLLENE = 2;</code>
   */
  public static final int BETA_CARYOPHYLLENE_VALUE = 2;
  /**
   * <pre>
   * Caryophyllene-oxide.
   * </pre>
   *
   * <code>CARYOPHYLLENE_OXIDE = 3;</code>
   */
  public static final int CARYOPHYLLENE_OXIDE_VALUE = 3;
  /**
   * <pre>
   * Eucalyptol.
   * </pre>
   *
   * <code>EUCALYPTOL = 4;</code>
   */
  public static final int EUCALYPTOL_VALUE = 4;
  /**
   * <pre>
   * Fenchol.
   * </pre>
   *
   * <code>FENCHOL = 5;</code>
   */
  public static final int FENCHOL_VALUE = 5;
  /**
   * <pre>
   * Alpha-humulene.
   * </pre>
   *
   * <code>ALPHA_HUMULENE = 6;</code>
   */
  public static final int ALPHA_HUMULENE_VALUE = 6;
  /**
   * <pre>
   * Limonene.
   * </pre>
   *
   * <code>LIMONENE = 7;</code>
   */
  public static final int LIMONENE_VALUE = 7;
  /**
   * <pre>
   * Linalool.
   * </pre>
   *
   * <code>LINALOOL = 8;</code>
   */
  public static final int LINALOOL_VALUE = 8;
  /**
   * <pre>
   * Myrcene.
   * </pre>
   *
   * <code>MYRCENE = 9;</code>
   */
  public static final int MYRCENE_VALUE = 9;
  /**
   * <pre>
   * Alpha-ocimene.
   * </pre>
   *
   * <code>ALPHA_OCIMENE = 10;</code>
   */
  public static final int ALPHA_OCIMENE_VALUE = 10;
  /**
   * <pre>
   * Beta-ocimene.
   * </pre>
   *
   * <code>BETA_OCIMENE = 11;</code>
   */
  public static final int BETA_OCIMENE_VALUE = 11;
  /**
   * <pre>
   * Alpha-phellandrene.
   * </pre>
   *
   * <code>ALPHA_PHELLANDRENE = 12;</code>
   */
  public static final int ALPHA_PHELLANDRENE_VALUE = 12;
  /**
   * <pre>
   * Alpha-pinene.
   * </pre>
   *
   * <code>ALPHA_PINENE = 13;</code>
   */
  public static final int ALPHA_PINENE_VALUE = 13;
  /**
   * <pre>
   * Beta-pinene.
   * </pre>
   *
   * <code>BETA_PINENE = 14;</code>
   */
  public static final int BETA_PINENE_VALUE = 14;
  /**
   * <pre>
   * Alpha-terpineol.
   * </pre>
   *
   * <code>ALPHA_TERPINEOL = 15;</code>
   */
  public static final int ALPHA_TERPINEOL_VALUE = 15;
  /**
   * <pre>
   * Alpha-terpinine.
   * </pre>
   *
   * <code>ALPHA_TERPININE = 16;</code>
   */
  public static final int ALPHA_TERPININE_VALUE = 16;
  /**
   * <pre>
   * Gamma-terpinine.
   * </pre>
   *
   * <code>GAMMA_TERPININE = 17;</code>
   */
  public static final int GAMMA_TERPININE_VALUE = 17;
  /**
   * <pre>
   * Terpinolene.
   * </pre>
   *
   * <code>TERPINOLENE = 18;</code>
   */
  public static final int TERPINOLENE_VALUE = 18;
  /**
   * <pre>
   * Valencene.
   * </pre>
   *
   * <code>VALENCENE = 19;</code>
   */
  public static final int VALENCENE_VALUE = 19;
  /**
   * <pre>
   * Geraniol.
   * </pre>
   *
   * <code>GERANIOL = 20;</code>
   */
  public static final int GERANIOL_VALUE = 20;
  /**
   * <pre>
   * Phellandrene.
   * </pre>
   *
   * <code>PHELLANDRENE = 21;</code>
   */
  public static final int PHELLANDRENE_VALUE = 21;
  /**
   * <pre>
   * Borneol.
   * </pre>
   *
   * <code>BORNEOL = 22;</code>
   */
  public static final int BORNEOL_VALUE = 22;
  /**
   * <pre>
   * Isoborneol.
   * </pre>
   *
   * <code>ISOBORNEOL = 23;</code>
   */
  public static final int ISOBORNEOL_VALUE = 23;
  /**
   * <pre>
   * Bisabolol.
   * </pre>
   *
   * <code>BISABOLOL = 24;</code>
   */
  public static final int BISABOLOL_VALUE = 24;
  /**
   * <pre>
   * Phytol.
   * </pre>
   *
   * <code>PHYTOL = 25;</code>
   */
  public static final int PHYTOL_VALUE = 25;
  /**
   * <pre>
   * Sabinene.
   * </pre>
   *
   * <code>SABINENE = 26;</code>
   */
  public static final int SABINENE_VALUE = 26;
  /**
   * <pre>
   * Camphor.
   * </pre>
   *
   * <code>CAMPHOR = 27;</code>
   */
  public static final int CAMPHOR_VALUE = 27;
  /**
   * <pre>
   * Menthol.
   * </pre>
   *
   * <code>MENTHOL = 28;</code>
   */
  public static final int MENTHOL_VALUE = 28;
  /**
   * <pre>
   * Cedrene.
   * </pre>
   *
   * <code>CEDRENE = 29;</code>
   */
  public static final int CEDRENE_VALUE = 29;
  /**
   * <pre>
   * Nerol.
   * </pre>
   *
   * <code>NEROL = 30;</code>
   */
  public static final int NEROL_VALUE = 30;
  /**
   * <pre>
   * Nerolidol.
   * </pre>
   *
   * <code>NEROLIDOL = 31;</code>
   */
  public static final int NEROLIDOL_VALUE = 31;
  /**
   * <pre>
   * Guaiol.
   * </pre>
   *
   * <code>GUAIOL = 32;</code>
   */
  public static final int GUAIOL_VALUE = 32;
  /**
   * <pre>
   * Isopulegol.
   * </pre>
   *
   * <code>ISOPULEGOL = 33;</code>
   */
  public static final int ISOPULEGOL_VALUE = 33;
  /**
   * <pre>
   * Geranyl-acetate.
   * </pre>
   *
   * <code>GERANYL_ACETATE = 34;</code>
   */
  public static final int GERANYL_ACETATE_VALUE = 34;
  /**
   * <pre>
   * Cymene.
   * </pre>
   *
   * <code>CYMENE = 35;</code>
   */
  public static final int CYMENE_VALUE = 35;
  /**
   * <pre>
   * Pulegone.
   * </pre>
   *
   * <code>PULEGONE = 36;</code>
   */
  public static final int PULEGONE_VALUE = 36;
  /**
   * <pre>
   * Cineole.
   * </pre>
   *
   * <code>CINEOLE = 37;</code>
   */
  public static final int CINEOLE_VALUE = 37;
  /**
   * <pre>
   * Fenchone.
   * </pre>
   *
   * <code>FENCHONE = 38;</code>
   */
  public static final int FENCHONE_VALUE = 38;
  /**
   * <pre>
   * Terpinene.
   * </pre>
   *
   * <code>TERPINENE = 39;</code>
   */
  public static final int TERPINENE_VALUE = 39;
  /**
   * <pre>
   * Citronellol.
   * </pre>
   *
   * <code>CITRONELLOL = 40;</code>
   */
  public static final int CITRONELLOL_VALUE = 40;
  /**
   * <pre>
   * Delta-3-carene.
   * </pre>
   *
   * <code>DELTA_3_CARENE = 41;</code>
   */
  public static final int DELTA_3_CARENE_VALUE = 41;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Terpene valueOf(int value) {
    return forNumber(value);
  }

  public static Terpene forNumber(int value) {
    switch (value) {
      case 0: return CAMPHENE;
      case 1: return CARENE;
      case 2: return BETA_CARYOPHYLLENE;
      case 3: return CARYOPHYLLENE_OXIDE;
      case 4: return EUCALYPTOL;
      case 5: return FENCHOL;
      case 6: return ALPHA_HUMULENE;
      case 7: return LIMONENE;
      case 8: return LINALOOL;
      case 9: return MYRCENE;
      case 10: return ALPHA_OCIMENE;
      case 11: return BETA_OCIMENE;
      case 12: return ALPHA_PHELLANDRENE;
      case 13: return ALPHA_PINENE;
      case 14: return BETA_PINENE;
      case 15: return ALPHA_TERPINEOL;
      case 16: return ALPHA_TERPININE;
      case 17: return GAMMA_TERPININE;
      case 18: return TERPINOLENE;
      case 19: return VALENCENE;
      case 20: return GERANIOL;
      case 21: return PHELLANDRENE;
      case 22: return BORNEOL;
      case 23: return ISOBORNEOL;
      case 24: return BISABOLOL;
      case 25: return PHYTOL;
      case 26: return SABINENE;
      case 27: return CAMPHOR;
      case 28: return MENTHOL;
      case 29: return CEDRENE;
      case 30: return NEROL;
      case 31: return NEROLIDOL;
      case 32: return GUAIOL;
      case 33: return ISOPULEGOL;
      case 34: return GERANYL_ACETATE;
      case 35: return CYMENE;
      case 36: return PULEGONE;
      case 37: return CINEOLE;
      case 38: return FENCHONE;
      case 39: return TERPINENE;
      case 40: return CITRONELLOL;
      case 41: return DELTA_3_CARENE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Terpene>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Terpene> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Terpene>() {
          public Terpene findValueByNumber(int number) {
            return Terpene.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.opencannabis.schema.product.struct.testing.LabTesting.getDescriptor().getEnumTypes().get(6);
  }

  private static final Terpene[] VALUES = values();

  public static Terpene valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Terpene(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:opencannabis.structs.labtesting.Terpene)
}

