/*
 * Copyright 2018, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestResults.proto

package io.opencannabis.schema.product.struct.testing;

public interface ContaminantsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.structs.labtesting.Contaminants)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Pesticide-specific test results. Indicates a pesticide reading, by chemical compound name, and a reading value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Pesticides pesticides = 1;</code>
   */
  boolean hasPesticides();
  /**
   * <pre>
   * Pesticide-specific test results. Indicates a pesticide reading, by chemical compound name, and a reading value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Pesticides pesticides = 1;</code>
   */
  io.opencannabis.schema.product.struct.testing.Pesticides getPesticides();
  /**
   * <pre>
   * Pesticide-specific test results. Indicates a pesticide reading, by chemical compound name, and a reading value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Pesticides pesticides = 1;</code>
   */
  io.opencannabis.schema.product.struct.testing.PesticidesOrBuilder getPesticidesOrBuilder();

  /**
   * <pre>
   * Heavy metal specific test results. Indicates a heavy metal reading, by chemical compound name, along with a 
   * reading value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Metals metals = 2;</code>
   */
  boolean hasMetals();
  /**
   * <pre>
   * Heavy metal specific test results. Indicates a heavy metal reading, by chemical compound name, along with a 
   * reading value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Metals metals = 2;</code>
   */
  io.opencannabis.schema.product.struct.testing.Metals getMetals();
  /**
   * <pre>
   * Heavy metal specific test results. Indicates a heavy metal reading, by chemical compound name, along with a 
   * reading value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Metals metals = 2;</code>
   */
  io.opencannabis.schema.product.struct.testing.MetalsOrBuilder getMetalsOrBuilder();

  /**
   * <pre>
   * Mold and mildew specific test results. Indicates a mold or mildew reading, by species name, along with a reading
   * value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.MoldMildew mold_mildew = 3;</code>
   */
  boolean hasMoldMildew();
  /**
   * <pre>
   * Mold and mildew specific test results. Indicates a mold or mildew reading, by species name, along with a reading
   * value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.MoldMildew mold_mildew = 3;</code>
   */
  io.opencannabis.schema.product.struct.testing.MoldMildew getMoldMildew();
  /**
   * <pre>
   * Mold and mildew specific test results. Indicates a mold or mildew reading, by species name, along with a reading
   * value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.MoldMildew mold_mildew = 3;</code>
   */
  io.opencannabis.schema.product.struct.testing.MoldMildewOrBuilder getMoldMildewOrBuilder();

  /**
   * <pre>
   * Place to store other contaminants that may be found in cannabis, including, but not limited to: glass, sand,
   * detergents, etc.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.OtherContaminants other_contaminants = 4;</code>
   */
  boolean hasOtherContaminants();
  /**
   * <pre>
   * Place to store other contaminants that may be found in cannabis, including, but not limited to: glass, sand,
   * detergents, etc.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.OtherContaminants other_contaminants = 4;</code>
   */
  io.opencannabis.schema.product.struct.testing.OtherContaminants getOtherContaminants();
  /**
   * <pre>
   * Place to store other contaminants that may be found in cannabis, including, but not limited to: glass, sand,
   * detergents, etc.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.OtherContaminants other_contaminants = 4;</code>
   */
  io.opencannabis.schema.product.struct.testing.OtherContaminantsOrBuilder getOtherContaminantsOrBuilder();
}
