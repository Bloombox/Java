/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestResults.proto

package io.opencannabis.schema.product.struct.testing;

/**
 * <pre>
 * Specifies coordinate values for a given lab testing result. This consists of 'zones' (i.e. floors, greenhouses), 
 * made up of 'batches' (i.e. rooms, sections), containing 'lots' (i.e. rows, trays) of individual plants or products.
 * </pre>
 *
 * Protobuf type {@code opencannabis.structs.labtesting.TestCoordinates}
 */
public  final class TestCoordinates extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opencannabis.structs.labtesting.TestCoordinates)
    TestCoordinatesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestCoordinates.newBuilder() to construct.
  private TestCoordinates(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestCoordinates() {
    zone_ = "";
    lot_ = "";
    batch_ = "";
    sampleId_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TestCoordinates(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            zone_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            lot_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            batch_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            sampleId_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opencannabis.schema.product.struct.testing.LabTesting.internal_static_opencannabis_structs_labtesting_TestCoordinates_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opencannabis.schema.product.struct.testing.LabTesting.internal_static_opencannabis_structs_labtesting_TestCoordinates_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opencannabis.schema.product.struct.testing.TestCoordinates.class, io.opencannabis.schema.product.struct.testing.TestCoordinates.Builder.class);
  }

  public static final int ZONE_FIELD_NUMBER = 1;
  private volatile java.lang.Object zone_;
  /**
   * <pre>
   * Specifies the 'zone' value for a set of test results. This is usually used as/by a floor or greenhouse ID.
   * </pre>
   *
   * <code>string zone = 1;</code>
   */
  public java.lang.String getZone() {
    java.lang.Object ref = zone_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      zone_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Specifies the 'zone' value for a set of test results. This is usually used as/by a floor or greenhouse ID.
   * </pre>
   *
   * <code>string zone = 1;</code>
   */
  public com.google.protobuf.ByteString
      getZoneBytes() {
    java.lang.Object ref = zone_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      zone_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOT_FIELD_NUMBER = 2;
  private volatile java.lang.Object lot_;
  /**
   * <pre>
   * Specifies the 'lot' value for a set of test results. This is usually used as/by a room or section ID.
   * </pre>
   *
   * <code>string lot = 2;</code>
   */
  public java.lang.String getLot() {
    java.lang.Object ref = lot_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      lot_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Specifies the 'lot' value for a set of test results. This is usually used as/by a room or section ID.
   * </pre>
   *
   * <code>string lot = 2;</code>
   */
  public com.google.protobuf.ByteString
      getLotBytes() {
    java.lang.Object ref = lot_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      lot_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BATCH_FIELD_NUMBER = 3;
  private volatile java.lang.Object batch_;
  /**
   * <pre>
   * Specifies the 'batch' value for a set of test results. This is usually used as/by a row or tray ID for individual
   * plants or test sample products.
   * </pre>
   *
   * <code>string batch = 3;</code>
   */
  public java.lang.String getBatch() {
    java.lang.Object ref = batch_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      batch_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Specifies the 'batch' value for a set of test results. This is usually used as/by a row or tray ID for individual
   * plants or test sample products.
   * </pre>
   *
   * <code>string batch = 3;</code>
   */
  public com.google.protobuf.ByteString
      getBatchBytes() {
    java.lang.Object ref = batch_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      batch_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SAMPLE_ID_FIELD_NUMBER = 4;
  private volatile java.lang.Object sampleId_;
  /**
   * <pre>
   * Unique ID given to the sample that was tested. This may represent individual plants or products, grouped lots or
   * batches, or even random selections from entire zones.
   * </pre>
   *
   * <code>string sample_id = 4;</code>
   */
  public java.lang.String getSampleId() {
    java.lang.Object ref = sampleId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sampleId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Unique ID given to the sample that was tested. This may represent individual plants or products, grouped lots or
   * batches, or even random selections from entire zones.
   * </pre>
   *
   * <code>string sample_id = 4;</code>
   */
  public com.google.protobuf.ByteString
      getSampleIdBytes() {
    java.lang.Object ref = sampleId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sampleId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getZoneBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, zone_);
    }
    if (!getLotBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, lot_);
    }
    if (!getBatchBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, batch_);
    }
    if (!getSampleIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sampleId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getZoneBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, zone_);
    }
    if (!getLotBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, lot_);
    }
    if (!getBatchBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, batch_);
    }
    if (!getSampleIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, sampleId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opencannabis.schema.product.struct.testing.TestCoordinates)) {
      return super.equals(obj);
    }
    io.opencannabis.schema.product.struct.testing.TestCoordinates other = (io.opencannabis.schema.product.struct.testing.TestCoordinates) obj;

    if (!getZone()
        .equals(other.getZone())) return false;
    if (!getLot()
        .equals(other.getLot())) return false;
    if (!getBatch()
        .equals(other.getBatch())) return false;
    if (!getSampleId()
        .equals(other.getSampleId())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ZONE_FIELD_NUMBER;
    hash = (53 * hash) + getZone().hashCode();
    hash = (37 * hash) + LOT_FIELD_NUMBER;
    hash = (53 * hash) + getLot().hashCode();
    hash = (37 * hash) + BATCH_FIELD_NUMBER;
    hash = (53 * hash) + getBatch().hashCode();
    hash = (37 * hash) + SAMPLE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSampleId().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opencannabis.schema.product.struct.testing.TestCoordinates parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opencannabis.schema.product.struct.testing.TestCoordinates prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies coordinate values for a given lab testing result. This consists of 'zones' (i.e. floors, greenhouses), 
   * made up of 'batches' (i.e. rooms, sections), containing 'lots' (i.e. rows, trays) of individual plants or products.
   * </pre>
   *
   * Protobuf type {@code opencannabis.structs.labtesting.TestCoordinates}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opencannabis.structs.labtesting.TestCoordinates)
      io.opencannabis.schema.product.struct.testing.TestCoordinatesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.product.struct.testing.LabTesting.internal_static_opencannabis_structs_labtesting_TestCoordinates_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.product.struct.testing.LabTesting.internal_static_opencannabis_structs_labtesting_TestCoordinates_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.product.struct.testing.TestCoordinates.class, io.opencannabis.schema.product.struct.testing.TestCoordinates.Builder.class);
    }

    // Construct using io.opencannabis.schema.product.struct.testing.TestCoordinates.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      zone_ = "";

      lot_ = "";

      batch_ = "";

      sampleId_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opencannabis.schema.product.struct.testing.LabTesting.internal_static_opencannabis_structs_labtesting_TestCoordinates_descriptor;
    }

    @java.lang.Override
    public io.opencannabis.schema.product.struct.testing.TestCoordinates getDefaultInstanceForType() {
      return io.opencannabis.schema.product.struct.testing.TestCoordinates.getDefaultInstance();
    }

    @java.lang.Override
    public io.opencannabis.schema.product.struct.testing.TestCoordinates build() {
      io.opencannabis.schema.product.struct.testing.TestCoordinates result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.opencannabis.schema.product.struct.testing.TestCoordinates buildPartial() {
      io.opencannabis.schema.product.struct.testing.TestCoordinates result = new io.opencannabis.schema.product.struct.testing.TestCoordinates(this);
      result.zone_ = zone_;
      result.lot_ = lot_;
      result.batch_ = batch_;
      result.sampleId_ = sampleId_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opencannabis.schema.product.struct.testing.TestCoordinates) {
        return mergeFrom((io.opencannabis.schema.product.struct.testing.TestCoordinates)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opencannabis.schema.product.struct.testing.TestCoordinates other) {
      if (other == io.opencannabis.schema.product.struct.testing.TestCoordinates.getDefaultInstance()) return this;
      if (!other.getZone().isEmpty()) {
        zone_ = other.zone_;
        onChanged();
      }
      if (!other.getLot().isEmpty()) {
        lot_ = other.lot_;
        onChanged();
      }
      if (!other.getBatch().isEmpty()) {
        batch_ = other.batch_;
        onChanged();
      }
      if (!other.getSampleId().isEmpty()) {
        sampleId_ = other.sampleId_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.opencannabis.schema.product.struct.testing.TestCoordinates parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.opencannabis.schema.product.struct.testing.TestCoordinates) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object zone_ = "";
    /**
     * <pre>
     * Specifies the 'zone' value for a set of test results. This is usually used as/by a floor or greenhouse ID.
     * </pre>
     *
     * <code>string zone = 1;</code>
     */
    public java.lang.String getZone() {
      java.lang.Object ref = zone_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        zone_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Specifies the 'zone' value for a set of test results. This is usually used as/by a floor or greenhouse ID.
     * </pre>
     *
     * <code>string zone = 1;</code>
     */
    public com.google.protobuf.ByteString
        getZoneBytes() {
      java.lang.Object ref = zone_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Specifies the 'zone' value for a set of test results. This is usually used as/by a floor or greenhouse ID.
     * </pre>
     *
     * <code>string zone = 1;</code>
     */
    public Builder setZone(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      zone_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the 'zone' value for a set of test results. This is usually used as/by a floor or greenhouse ID.
     * </pre>
     *
     * <code>string zone = 1;</code>
     */
    public Builder clearZone() {
      
      zone_ = getDefaultInstance().getZone();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the 'zone' value for a set of test results. This is usually used as/by a floor or greenhouse ID.
     * </pre>
     *
     * <code>string zone = 1;</code>
     */
    public Builder setZoneBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      zone_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object lot_ = "";
    /**
     * <pre>
     * Specifies the 'lot' value for a set of test results. This is usually used as/by a room or section ID.
     * </pre>
     *
     * <code>string lot = 2;</code>
     */
    public java.lang.String getLot() {
      java.lang.Object ref = lot_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lot_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Specifies the 'lot' value for a set of test results. This is usually used as/by a room or section ID.
     * </pre>
     *
     * <code>string lot = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLotBytes() {
      java.lang.Object ref = lot_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lot_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Specifies the 'lot' value for a set of test results. This is usually used as/by a room or section ID.
     * </pre>
     *
     * <code>string lot = 2;</code>
     */
    public Builder setLot(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      lot_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the 'lot' value for a set of test results. This is usually used as/by a room or section ID.
     * </pre>
     *
     * <code>string lot = 2;</code>
     */
    public Builder clearLot() {
      
      lot_ = getDefaultInstance().getLot();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the 'lot' value for a set of test results. This is usually used as/by a room or section ID.
     * </pre>
     *
     * <code>string lot = 2;</code>
     */
    public Builder setLotBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      lot_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object batch_ = "";
    /**
     * <pre>
     * Specifies the 'batch' value for a set of test results. This is usually used as/by a row or tray ID for individual
     * plants or test sample products.
     * </pre>
     *
     * <code>string batch = 3;</code>
     */
    public java.lang.String getBatch() {
      java.lang.Object ref = batch_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        batch_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Specifies the 'batch' value for a set of test results. This is usually used as/by a row or tray ID for individual
     * plants or test sample products.
     * </pre>
     *
     * <code>string batch = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBatchBytes() {
      java.lang.Object ref = batch_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        batch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Specifies the 'batch' value for a set of test results. This is usually used as/by a row or tray ID for individual
     * plants or test sample products.
     * </pre>
     *
     * <code>string batch = 3;</code>
     */
    public Builder setBatch(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      batch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the 'batch' value for a set of test results. This is usually used as/by a row or tray ID for individual
     * plants or test sample products.
     * </pre>
     *
     * <code>string batch = 3;</code>
     */
    public Builder clearBatch() {
      
      batch_ = getDefaultInstance().getBatch();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the 'batch' value for a set of test results. This is usually used as/by a row or tray ID for individual
     * plants or test sample products.
     * </pre>
     *
     * <code>string batch = 3;</code>
     */
    public Builder setBatchBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      batch_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object sampleId_ = "";
    /**
     * <pre>
     * Unique ID given to the sample that was tested. This may represent individual plants or products, grouped lots or
     * batches, or even random selections from entire zones.
     * </pre>
     *
     * <code>string sample_id = 4;</code>
     */
    public java.lang.String getSampleId() {
      java.lang.Object ref = sampleId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sampleId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Unique ID given to the sample that was tested. This may represent individual plants or products, grouped lots or
     * batches, or even random selections from entire zones.
     * </pre>
     *
     * <code>string sample_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSampleIdBytes() {
      java.lang.Object ref = sampleId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sampleId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Unique ID given to the sample that was tested. This may represent individual plants or products, grouped lots or
     * batches, or even random selections from entire zones.
     * </pre>
     *
     * <code>string sample_id = 4;</code>
     */
    public Builder setSampleId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sampleId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique ID given to the sample that was tested. This may represent individual plants or products, grouped lots or
     * batches, or even random selections from entire zones.
     * </pre>
     *
     * <code>string sample_id = 4;</code>
     */
    public Builder clearSampleId() {
      
      sampleId_ = getDefaultInstance().getSampleId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique ID given to the sample that was tested. This may represent individual plants or products, grouped lots or
     * batches, or even random selections from entire zones.
     * </pre>
     *
     * <code>string sample_id = 4;</code>
     */
    public Builder setSampleIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sampleId_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opencannabis.structs.labtesting.TestCoordinates)
  }

  // @@protoc_insertion_point(class_scope:opencannabis.structs.labtesting.TestCoordinates)
  private static final io.opencannabis.schema.product.struct.testing.TestCoordinates DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opencannabis.schema.product.struct.testing.TestCoordinates();
  }

  public static io.opencannabis.schema.product.struct.testing.TestCoordinates getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestCoordinates>
      PARSER = new com.google.protobuf.AbstractParser<TestCoordinates>() {
    @java.lang.Override
    public TestCoordinates parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TestCoordinates(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TestCoordinates> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestCoordinates> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.opencannabis.schema.product.struct.testing.TestCoordinates getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

