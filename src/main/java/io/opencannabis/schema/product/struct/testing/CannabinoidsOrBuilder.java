// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestResults.proto

package io.opencannabis.schema.product.struct.testing;

public interface CannabinoidsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.structs.labtesting.Cannabinoids)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * THC testing value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.TestValue thc = 1;</code>
   */
  boolean hasThc();
  /**
   * <pre>
   * THC testing value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.TestValue thc = 1;</code>
   */
  io.opencannabis.schema.product.struct.testing.TestValue getThc();
  /**
   * <pre>
   * THC testing value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.TestValue thc = 1;</code>
   */
  io.opencannabis.schema.product.struct.testing.TestValueOrBuilder getThcOrBuilder();

  /**
   * <pre>
   * CBD testing value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.TestValue cbd = 2;</code>
   */
  boolean hasCbd();
  /**
   * <pre>
   * CBD testing value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.TestValue cbd = 2;</code>
   */
  io.opencannabis.schema.product.struct.testing.TestValue getCbd();
  /**
   * <pre>
   * CBD testing value.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.TestValue cbd = 2;</code>
   */
  io.opencannabis.schema.product.struct.testing.TestValueOrBuilder getCbdOrBuilder();

  /**
   * <pre>
   * Individual results payloads for other cannabinoids.
   * </pre>
   *
   * <code>repeated .opencannabis.structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  java.util.List<io.opencannabis.schema.product.struct.testing.Cannabinoids.Result> 
      getResultsList();
  /**
   * <pre>
   * Individual results payloads for other cannabinoids.
   * </pre>
   *
   * <code>repeated .opencannabis.structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  io.opencannabis.schema.product.struct.testing.Cannabinoids.Result getResults(int index);
  /**
   * <pre>
   * Individual results payloads for other cannabinoids.
   * </pre>
   *
   * <code>repeated .opencannabis.structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  int getResultsCount();
  /**
   * <pre>
   * Individual results payloads for other cannabinoids.
   * </pre>
   *
   * <code>repeated .opencannabis.structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  java.util.List<? extends io.opencannabis.schema.product.struct.testing.Cannabinoids.ResultOrBuilder> 
      getResultsOrBuilderList();
  /**
   * <pre>
   * Individual results payloads for other cannabinoids.
   * </pre>
   *
   * <code>repeated .opencannabis.structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  io.opencannabis.schema.product.struct.testing.Cannabinoids.ResultOrBuilder getResultsOrBuilder(
      int index);

  /**
   * <pre>
   * Overall THC to CBD ratio, calculated if underlying data is available.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.CannabinoidRatio ratio = 4;</code>
   */
  int getRatioValue();
  /**
   * <pre>
   * Overall THC to CBD ratio, calculated if underlying data is available.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.CannabinoidRatio ratio = 4;</code>
   */
  io.opencannabis.schema.product.struct.testing.CannabinoidRatio getRatio();

  /**
   * <pre>
   * Calculated potency estimate, based on this product's type/kind and test results.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.PotencyEstimate potency = 5;</code>
   */
  int getPotencyValue();
  /**
   * <pre>
   * Calculated potency estimate, based on this product's type/kind and test results.
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.PotencyEstimate potency = 5;</code>
   */
  io.opencannabis.schema.product.struct.testing.PotencyEstimate getPotency();
}
