// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestResults.proto

package io.opencannabis.schema.product.struct.testing;

public interface PesticidesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.structs.labtesting.Pesticides)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>bool pesticide_free = 1;</code>
   */
  boolean getPesticideFree();

  /**
   * <code>map&lt;string, .opencannabis.structs.labtesting.TestValue&gt; measurements = 2;</code>
   */
  int getMeasurementsCount();
  /**
   * <code>map&lt;string, .opencannabis.structs.labtesting.TestValue&gt; measurements = 2;</code>
   */
  boolean containsMeasurements(
      java.lang.String key);
  /**
   * Use {@link #getMeasurementsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.opencannabis.schema.product.struct.testing.TestValue>
  getMeasurements();
  /**
   * <code>map&lt;string, .opencannabis.structs.labtesting.TestValue&gt; measurements = 2;</code>
   */
  java.util.Map<java.lang.String, io.opencannabis.schema.product.struct.testing.TestValue>
  getMeasurementsMap();
  /**
   * <code>map&lt;string, .opencannabis.structs.labtesting.TestValue&gt; measurements = 2;</code>
   */

  io.opencannabis.schema.product.struct.testing.TestValue getMeasurementsOrDefault(
      java.lang.String key,
      io.opencannabis.schema.product.struct.testing.TestValue defaultValue);
  /**
   * <code>map&lt;string, .opencannabis.structs.labtesting.TestValue&gt; measurements = 2;</code>
   */

  io.opencannabis.schema.product.struct.testing.TestValue getMeasurementsOrThrow(
      java.lang.String key);
}
