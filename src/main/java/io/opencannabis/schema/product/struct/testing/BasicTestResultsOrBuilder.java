// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/BasicTestResults.proto

package io.opencannabis.schema.product.struct.testing;

public interface BasicTestResultsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.structs.labtesting.BasicTestResults)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>bool available = 1;</code>
   */
  boolean getAvailable();

  /**
   * <code>repeated .opencannabis.structs.labtesting.TestMedia media = 2;</code>
   */
  java.util.List<io.opencannabis.schema.product.struct.testing.TestMedia> 
      getMediaList();
  /**
   * <code>repeated .opencannabis.structs.labtesting.TestMedia media = 2;</code>
   */
  io.opencannabis.schema.product.struct.testing.TestMedia getMedia(int index);
  /**
   * <code>repeated .opencannabis.structs.labtesting.TestMedia media = 2;</code>
   */
  int getMediaCount();
  /**
   * <code>repeated .opencannabis.structs.labtesting.TestMedia media = 2;</code>
   */
  java.util.List<? extends io.opencannabis.schema.product.struct.testing.TestMediaOrBuilder> 
      getMediaOrBuilderList();
  /**
   * <code>repeated .opencannabis.structs.labtesting.TestMedia media = 2;</code>
   */
  io.opencannabis.schema.product.struct.testing.TestMediaOrBuilder getMediaOrBuilder(
      int index);

  /**
   * <code>.opencannabis.temporal.Instant last_updated = 3;</code>
   */
  boolean hasLastUpdated();
  /**
   * <code>.opencannabis.temporal.Instant last_updated = 3;</code>
   */
  io.opencannabis.schema.temporal.Instant getLastUpdated();
  /**
   * <code>.opencannabis.temporal.Instant last_updated = 3;</code>
   */
  io.opencannabis.schema.temporal.InstantOrBuilder getLastUpdatedOrBuilder();

  /**
   * <pre>
   * --- Cannabinoids + Subjective
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Cannabinoids cannabinoids = 20;</code>
   */
  boolean hasCannabinoids();
  /**
   * <pre>
   * --- Cannabinoids + Subjective
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Cannabinoids cannabinoids = 20;</code>
   */
  io.opencannabis.schema.product.struct.testing.Cannabinoids getCannabinoids();
  /**
   * <pre>
   * --- Cannabinoids + Subjective
   * </pre>
   *
   * <code>.opencannabis.structs.labtesting.Cannabinoids cannabinoids = 20;</code>
   */
  io.opencannabis.schema.product.struct.testing.CannabinoidsOrBuilder getCannabinoidsOrBuilder();

  /**
   * <code>.opencannabis.structs.labtesting.Subjective subjective = 30;</code>
   */
  boolean hasSubjective();
  /**
   * <code>.opencannabis.structs.labtesting.Subjective subjective = 30;</code>
   */
  io.opencannabis.schema.product.struct.testing.Subjective getSubjective();
  /**
   * <code>.opencannabis.structs.labtesting.Subjective subjective = 30;</code>
   */
  io.opencannabis.schema.product.struct.testing.SubjectiveOrBuilder getSubjectiveOrBuilder();
}
