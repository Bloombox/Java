// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proximity/BluetoothBeacon.proto

package io.opencannabis.schema.proximity;

public interface BluetoothBeaconOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencannabis.proximity.BluetoothBeacon)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * UUID for the device, as observed or broadcasted.
   * </pre>
   *
   * <code>string uuid = 1;</code>
   */
  java.lang.String getUuid();
  /**
   * <pre>
   * UUID for the device, as observed or broadcasted.
   * </pre>
   *
   * <code>string uuid = 1;</code>
   */
  com.google.protobuf.ByteString
      getUuidBytes();

  /**
   * <pre>
   * 'Major' value in the BLE signal.
   * </pre>
   *
   * <code>uint32 major = 2;</code>
   */
  int getMajor();

  /**
   * <pre>
   * 'Minor' value in the BLE signal.
   * </pre>
   *
   * <code>uint32 minor = 3;</code>
   */
  int getMinor();

  /**
   * <pre>
   * Timestamp for when this beacon was witnessed.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant seen = 4;</code>
   */
  boolean hasSeen();
  /**
   * <pre>
   * Timestamp for when this beacon was witnessed.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant seen = 4;</code>
   */
  io.opencannabis.schema.temporal.TemporalInstant.Instant getSeen();
  /**
   * <pre>
   * Timestamp for when this beacon was witnessed.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant seen = 4;</code>
   */
  io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getSeenOrBuilder();

  /**
   * <pre>
   * Location of the emitting or reporting (receiving) beacon.
   * </pre>
   *
   * <code>.opencannabis.geo.Location location = 5;</code>
   */
  boolean hasLocation();
  /**
   * <pre>
   * Location of the emitting or reporting (receiving) beacon.
   * </pre>
   *
   * <code>.opencannabis.geo.Location location = 5;</code>
   */
  io.opencannabis.schema.geo.Location getLocation();
  /**
   * <pre>
   * Location of the emitting or reporting (receiving) beacon.
   * </pre>
   *
   * <code>.opencannabis.geo.Location location = 5;</code>
   */
  io.opencannabis.schema.geo.LocationOrBuilder getLocationOrBuilder();

  /**
   * <pre>
   * Estimate as to the distance accuracy of this beacon.
   * </pre>
   *
   * <code>.opencannabis.geo.LocationAccuracy accuracy = 6;</code>
   */
  boolean hasAccuracy();
  /**
   * <pre>
   * Estimate as to the distance accuracy of this beacon.
   * </pre>
   *
   * <code>.opencannabis.geo.LocationAccuracy accuracy = 6;</code>
   */
  io.opencannabis.schema.geo.LocationAccuracy getAccuracy();
  /**
   * <pre>
   * Estimate as to the distance accuracy of this beacon.
   * </pre>
   *
   * <code>.opencannabis.geo.LocationAccuracy accuracy = 6;</code>
   */
  io.opencannabis.schema.geo.LocationAccuracyOrBuilder getAccuracyOrBuilder();
}
