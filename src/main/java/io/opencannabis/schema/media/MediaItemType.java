/*
 * Copyright 2019, Momentum Ideas Co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: media/MediaType.proto

package io.opencannabis.schema.media;

public final class MediaItemType {
  private MediaItemType() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MediaTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:opencannabis.media.MediaType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies the generic kind of media being described or attached.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
     */
    int getKindValue();
    /**
     * <pre>
     * Specifies the generic kind of media being described or attached.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
     */
    io.opencannabis.schema.media.MediaItemType.MediaType.Kind getKind();

    /**
     * <pre>
     * Specifies content type for an image-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
     */
    int getImageTypeValue();
    /**
     * <pre>
     * Specifies content type for an image-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
     */
    io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind getImageType();

    /**
     * <pre>
     * Specifies content type for a document-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
     */
    int getDocumentTypeValue();
    /**
     * <pre>
     * Specifies content type for a document-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
     */
    io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind getDocumentType();

    /**
     * <pre>
     * Specifies content type for a video-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
     */
    int getVideoTypeValue();
    /**
     * <pre>
     * Specifies content type for a video-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
     */
    io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind getVideoType();

    public io.opencannabis.schema.media.MediaItemType.MediaType.ContentCase getContentCase();
  }
  /**
   * <pre>
   * Specifies the type of media being attached or described.
   * </pre>
   *
   * Protobuf type {@code opencannabis.media.MediaType}
   */
  public  static final class MediaType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:opencannabis.media.MediaType)
      MediaTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MediaType.newBuilder() to construct.
    private MediaType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MediaType() {
      kind_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MediaType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              kind_ = rawValue;
              break;
            }
            case 808: {
              int rawValue = input.readEnum();
              contentCase_ = 101;
              content_ = rawValue;
              break;
            }
            case 1608: {
              int rawValue = input.readEnum();
              contentCase_ = 201;
              content_ = rawValue;
              break;
            }
            case 2408: {
              int rawValue = input.readEnum();
              contentCase_ = 301;
              content_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opencannabis.schema.media.MediaItemType.internal_static_opencannabis_media_MediaType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opencannabis.schema.media.MediaItemType.internal_static_opencannabis_media_MediaType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opencannabis.schema.media.MediaItemType.MediaType.class, io.opencannabis.schema.media.MediaItemType.MediaType.Builder.class);
    }

    /**
     * <pre>
     * Enumerates, in generic terms, the kinds of media that can be attached or described.
     * </pre>
     *
     * Protobuf enum {@code opencannabis.media.MediaType.Kind}
     */
    public enum Kind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Web link, or URI.
       * </pre>
       *
       * <code>LINK = 0;</code>
       */
      LINK(0),
      /**
       * <pre>
       * Image or photograph.
       * </pre>
       *
       * <code>IMAGE = 1;</code>
       */
      IMAGE(1),
      /**
       * <pre>
       * Document or text data.
       * </pre>
       *
       * <code>DOCUMENT = 2;</code>
       */
      DOCUMENT(2),
      /**
       * <pre>
       * Video data.
       * </pre>
       *
       * <code>VIDEO = 3;</code>
       */
      VIDEO(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Web link, or URI.
       * </pre>
       *
       * <code>LINK = 0;</code>
       */
      public static final int LINK_VALUE = 0;
      /**
       * <pre>
       * Image or photograph.
       * </pre>
       *
       * <code>IMAGE = 1;</code>
       */
      public static final int IMAGE_VALUE = 1;
      /**
       * <pre>
       * Document or text data.
       * </pre>
       *
       * <code>DOCUMENT = 2;</code>
       */
      public static final int DOCUMENT_VALUE = 2;
      /**
       * <pre>
       * Video data.
       * </pre>
       *
       * <code>VIDEO = 3;</code>
       */
      public static final int VIDEO_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Kind valueOf(int value) {
        return forNumber(value);
      }

      public static Kind forNumber(int value) {
        switch (value) {
          case 0: return LINK;
          case 1: return IMAGE;
          case 2: return DOCUMENT;
          case 3: return VIDEO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Kind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
              public Kind findValueByNumber(int number) {
                return Kind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.opencannabis.schema.media.MediaItemType.MediaType.getDescriptor().getEnumTypes().get(0);
      }

      private static final Kind[] VALUES = values();

      public static Kind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Kind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:opencannabis.media.MediaType.Kind)
    }

    /**
     * <pre>
     * Specifies kinds of images that may be attached or described.
     * </pre>
     *
     * Protobuf enum {@code opencannabis.media.MediaType.ImageKind}
     */
    public enum ImageKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unspecified image type.
       * </pre>
       *
       * <code>UNSPECIFIED_IMAGE_TYPE = 0;</code>
       */
      UNSPECIFIED_IMAGE_TYPE(0),
      /**
       * <pre>
       * PNG image.
       * </pre>
       *
       * <code>PNG = 1;</code>
       */
      PNG(1),
      /**
       * <pre>
       * JPG image.
       * </pre>
       *
       * <code>JPG = 2;</code>
       */
      JPG(2),
      /**
       * <pre>
       * GIF image.
       * </pre>
       *
       * <code>GIF = 3;</code>
       */
      GIF(3),
      /**
       * <pre>
       * SVG image.
       * </pre>
       *
       * <code>SVG = 4;</code>
       */
      SVG(4),
      /**
       * <pre>
       * WEBP image.
       * </pre>
       *
       * <code>WEBP = 5;</code>
       */
      WEBP(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unspecified image type.
       * </pre>
       *
       * <code>UNSPECIFIED_IMAGE_TYPE = 0;</code>
       */
      public static final int UNSPECIFIED_IMAGE_TYPE_VALUE = 0;
      /**
       * <pre>
       * PNG image.
       * </pre>
       *
       * <code>PNG = 1;</code>
       */
      public static final int PNG_VALUE = 1;
      /**
       * <pre>
       * JPG image.
       * </pre>
       *
       * <code>JPG = 2;</code>
       */
      public static final int JPG_VALUE = 2;
      /**
       * <pre>
       * GIF image.
       * </pre>
       *
       * <code>GIF = 3;</code>
       */
      public static final int GIF_VALUE = 3;
      /**
       * <pre>
       * SVG image.
       * </pre>
       *
       * <code>SVG = 4;</code>
       */
      public static final int SVG_VALUE = 4;
      /**
       * <pre>
       * WEBP image.
       * </pre>
       *
       * <code>WEBP = 5;</code>
       */
      public static final int WEBP_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ImageKind valueOf(int value) {
        return forNumber(value);
      }

      public static ImageKind forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED_IMAGE_TYPE;
          case 1: return PNG;
          case 2: return JPG;
          case 3: return GIF;
          case 4: return SVG;
          case 5: return WEBP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ImageKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ImageKind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ImageKind>() {
              public ImageKind findValueByNumber(int number) {
                return ImageKind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.opencannabis.schema.media.MediaItemType.MediaType.getDescriptor().getEnumTypes().get(1);
      }

      private static final ImageKind[] VALUES = values();

      public static ImageKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ImageKind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:opencannabis.media.MediaType.ImageKind)
    }

    /**
     * <pre>
     * Specifies the pixel density setting for an image.
     * </pre>
     *
     * Protobuf enum {@code opencannabis.media.MediaType.ImageDPI}
     */
    public enum ImageDPI
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * The image has normal, 1:1 pixel density.
       * </pre>
       *
       * <code>X1 = 0;</code>
       */
      X1(0),
      /**
       * <pre>
       * The image has double pixel density.
       * </pre>
       *
       * <code>X2 = 1;</code>
       */
      X2(1),
      /**
       * <pre>
       * The image has triple pixel density.
       * </pre>
       *
       * <code>X3 = 2;</code>
       */
      X3(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * The image has normal, 1:1 pixel density.
       * </pre>
       *
       * <code>X1 = 0;</code>
       */
      public static final int X1_VALUE = 0;
      /**
       * <pre>
       * The image has double pixel density.
       * </pre>
       *
       * <code>X2 = 1;</code>
       */
      public static final int X2_VALUE = 1;
      /**
       * <pre>
       * The image has triple pixel density.
       * </pre>
       *
       * <code>X3 = 2;</code>
       */
      public static final int X3_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ImageDPI valueOf(int value) {
        return forNumber(value);
      }

      public static ImageDPI forNumber(int value) {
        switch (value) {
          case 0: return X1;
          case 1: return X2;
          case 2: return X3;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ImageDPI>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ImageDPI> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ImageDPI>() {
              public ImageDPI findValueByNumber(int number) {
                return ImageDPI.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.opencannabis.schema.media.MediaItemType.MediaType.getDescriptor().getEnumTypes().get(2);
      }

      private static final ImageDPI[] VALUES = values();

      public static ImageDPI valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ImageDPI(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:opencannabis.media.MediaType.ImageDPI)
    }

    /**
     * <pre>
     * Specifies kinds of documents that may be attached or described.
     * </pre>
     *
     * Protobuf enum {@code opencannabis.media.MediaType.DocumentKind}
     */
    public enum DocumentKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unspecified document type.
       * </pre>
       *
       * <code>UNSPECIFIED_DOCUMENT_TYPE = 0;</code>
       */
      UNSPECIFIED_DOCUMENT_TYPE(0),
      /**
       * <pre>
       * Plaintext format.
       * </pre>
       *
       * <code>TXT = 1;</code>
       */
      TXT(1),
      /**
       * <pre>
       * HTML format.
       * </pre>
       *
       * <code>HTML = 2;</code>
       */
      HTML(2),
      /**
       * <pre>
       * PDF format.
       * </pre>
       *
       * <code>PDF = 3;</code>
       */
      PDF(3),
      /**
       * <pre>
       * Markdown format.
       * </pre>
       *
       * <code>MARKDOWN = 4;</code>
       */
      MARKDOWN(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unspecified document type.
       * </pre>
       *
       * <code>UNSPECIFIED_DOCUMENT_TYPE = 0;</code>
       */
      public static final int UNSPECIFIED_DOCUMENT_TYPE_VALUE = 0;
      /**
       * <pre>
       * Plaintext format.
       * </pre>
       *
       * <code>TXT = 1;</code>
       */
      public static final int TXT_VALUE = 1;
      /**
       * <pre>
       * HTML format.
       * </pre>
       *
       * <code>HTML = 2;</code>
       */
      public static final int HTML_VALUE = 2;
      /**
       * <pre>
       * PDF format.
       * </pre>
       *
       * <code>PDF = 3;</code>
       */
      public static final int PDF_VALUE = 3;
      /**
       * <pre>
       * Markdown format.
       * </pre>
       *
       * <code>MARKDOWN = 4;</code>
       */
      public static final int MARKDOWN_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DocumentKind valueOf(int value) {
        return forNumber(value);
      }

      public static DocumentKind forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED_DOCUMENT_TYPE;
          case 1: return TXT;
          case 2: return HTML;
          case 3: return PDF;
          case 4: return MARKDOWN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DocumentKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DocumentKind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DocumentKind>() {
              public DocumentKind findValueByNumber(int number) {
                return DocumentKind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.opencannabis.schema.media.MediaItemType.MediaType.getDescriptor().getEnumTypes().get(3);
      }

      private static final DocumentKind[] VALUES = values();

      public static DocumentKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DocumentKind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:opencannabis.media.MediaType.DocumentKind)
    }

    /**
     * <pre>
     * Specifies kinds of videos that may be attached or described.
     * </pre>
     *
     * Protobuf enum {@code opencannabis.media.MediaType.VideoKind}
     */
    public enum VideoKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unspecified video type.
       * </pre>
       *
       * <code>UNSPECIFIED_VIDEO_TYPE = 0;</code>
       */
      UNSPECIFIED_VIDEO_TYPE(0),
      /**
       * <pre>
       * MP4 video.
       * </pre>
       *
       * <code>MP4 = 1;</code>
       */
      MP4(1),
      /**
       * <pre>
       * Flash video.
       * </pre>
       *
       * <code>FLV = 2;</code>
       */
      FLV(2),
      /**
       * <pre>
       * HTTP Live Streaming video.
       * </pre>
       *
       * <code>HLS = 3;</code>
       */
      HLS(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unspecified video type.
       * </pre>
       *
       * <code>UNSPECIFIED_VIDEO_TYPE = 0;</code>
       */
      public static final int UNSPECIFIED_VIDEO_TYPE_VALUE = 0;
      /**
       * <pre>
       * MP4 video.
       * </pre>
       *
       * <code>MP4 = 1;</code>
       */
      public static final int MP4_VALUE = 1;
      /**
       * <pre>
       * Flash video.
       * </pre>
       *
       * <code>FLV = 2;</code>
       */
      public static final int FLV_VALUE = 2;
      /**
       * <pre>
       * HTTP Live Streaming video.
       * </pre>
       *
       * <code>HLS = 3;</code>
       */
      public static final int HLS_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VideoKind valueOf(int value) {
        return forNumber(value);
      }

      public static VideoKind forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED_VIDEO_TYPE;
          case 1: return MP4;
          case 2: return FLV;
          case 3: return HLS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<VideoKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          VideoKind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<VideoKind>() {
              public VideoKind findValueByNumber(int number) {
                return VideoKind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.opencannabis.schema.media.MediaItemType.MediaType.getDescriptor().getEnumTypes().get(4);
      }

      private static final VideoKind[] VALUES = values();

      public static VideoKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private VideoKind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:opencannabis.media.MediaType.VideoKind)
    }

    private int contentCase_ = 0;
    private java.lang.Object content_;
    public enum ContentCase
        implements com.google.protobuf.Internal.EnumLite {
      IMAGE_TYPE(101),
      DOCUMENT_TYPE(201),
      VIDEO_TYPE(301),
      CONTENT_NOT_SET(0);
      private final int value;
      private ContentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContentCase forNumber(int value) {
        switch (value) {
          case 101: return IMAGE_TYPE;
          case 201: return DOCUMENT_TYPE;
          case 301: return VIDEO_TYPE;
          case 0: return CONTENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ContentCase
    getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    public static final int KIND_FIELD_NUMBER = 1;
    private int kind_;
    /**
     * <pre>
     * Specifies the generic kind of media being described or attached.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
     */
    public int getKindValue() {
      return kind_;
    }
    /**
     * <pre>
     * Specifies the generic kind of media being described or attached.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
     */
    public io.opencannabis.schema.media.MediaItemType.MediaType.Kind getKind() {
      @SuppressWarnings("deprecation")
      io.opencannabis.schema.media.MediaItemType.MediaType.Kind result = io.opencannabis.schema.media.MediaItemType.MediaType.Kind.valueOf(kind_);
      return result == null ? io.opencannabis.schema.media.MediaItemType.MediaType.Kind.UNRECOGNIZED : result;
    }

    public static final int IMAGE_TYPE_FIELD_NUMBER = 101;
    /**
     * <pre>
     * Specifies content type for an image-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
     */
    public int getImageTypeValue() {
      if (contentCase_ == 101) {
        return (java.lang.Integer) content_;
      }
      return 0;
    }
    /**
     * <pre>
     * Specifies content type for an image-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
     */
    public io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind getImageType() {
      if (contentCase_ == 101) {
        @SuppressWarnings("deprecation")
        io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind result = io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind.valueOf(
            (java.lang.Integer) content_);
        return result == null ? io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind.UNRECOGNIZED : result;
      }
      return io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind.UNSPECIFIED_IMAGE_TYPE;
    }

    public static final int DOCUMENT_TYPE_FIELD_NUMBER = 201;
    /**
     * <pre>
     * Specifies content type for a document-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
     */
    public int getDocumentTypeValue() {
      if (contentCase_ == 201) {
        return (java.lang.Integer) content_;
      }
      return 0;
    }
    /**
     * <pre>
     * Specifies content type for a document-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
     */
    public io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind getDocumentType() {
      if (contentCase_ == 201) {
        @SuppressWarnings("deprecation")
        io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind result = io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind.valueOf(
            (java.lang.Integer) content_);
        return result == null ? io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind.UNRECOGNIZED : result;
      }
      return io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind.UNSPECIFIED_DOCUMENT_TYPE;
    }

    public static final int VIDEO_TYPE_FIELD_NUMBER = 301;
    /**
     * <pre>
     * Specifies content type for a video-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
     */
    public int getVideoTypeValue() {
      if (contentCase_ == 301) {
        return (java.lang.Integer) content_;
      }
      return 0;
    }
    /**
     * <pre>
     * Specifies content type for a video-based media item.
     * </pre>
     *
     * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
     */
    public io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind getVideoType() {
      if (contentCase_ == 301) {
        @SuppressWarnings("deprecation")
        io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind result = io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind.valueOf(
            (java.lang.Integer) content_);
        return result == null ? io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind.UNRECOGNIZED : result;
      }
      return io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind.UNSPECIFIED_VIDEO_TYPE;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (kind_ != io.opencannabis.schema.media.MediaItemType.MediaType.Kind.LINK.getNumber()) {
        output.writeEnum(1, kind_);
      }
      if (contentCase_ == 101) {
        output.writeEnum(101, ((java.lang.Integer) content_));
      }
      if (contentCase_ == 201) {
        output.writeEnum(201, ((java.lang.Integer) content_));
      }
      if (contentCase_ == 301) {
        output.writeEnum(301, ((java.lang.Integer) content_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (kind_ != io.opencannabis.schema.media.MediaItemType.MediaType.Kind.LINK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, kind_);
      }
      if (contentCase_ == 101) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(101, ((java.lang.Integer) content_));
      }
      if (contentCase_ == 201) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(201, ((java.lang.Integer) content_));
      }
      if (contentCase_ == 301) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(301, ((java.lang.Integer) content_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.opencannabis.schema.media.MediaItemType.MediaType)) {
        return super.equals(obj);
      }
      io.opencannabis.schema.media.MediaItemType.MediaType other = (io.opencannabis.schema.media.MediaItemType.MediaType) obj;

      if (kind_ != other.kind_) return false;
      if (!getContentCase().equals(other.getContentCase())) return false;
      switch (contentCase_) {
        case 101:
          if (getImageTypeValue()
              != other.getImageTypeValue()) return false;
          break;
        case 201:
          if (getDocumentTypeValue()
              != other.getDocumentTypeValue()) return false;
          break;
        case 301:
          if (getVideoTypeValue()
              != other.getVideoTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KIND_FIELD_NUMBER;
      hash = (53 * hash) + kind_;
      switch (contentCase_) {
        case 101:
          hash = (37 * hash) + IMAGE_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getImageTypeValue();
          break;
        case 201:
          hash = (37 * hash) + DOCUMENT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getDocumentTypeValue();
          break;
        case 301:
          hash = (37 * hash) + VIDEO_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getVideoTypeValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.opencannabis.schema.media.MediaItemType.MediaType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.opencannabis.schema.media.MediaItemType.MediaType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies the type of media being attached or described.
     * </pre>
     *
     * Protobuf type {@code opencannabis.media.MediaType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:opencannabis.media.MediaType)
        io.opencannabis.schema.media.MediaItemType.MediaTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.opencannabis.schema.media.MediaItemType.internal_static_opencannabis_media_MediaType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.opencannabis.schema.media.MediaItemType.internal_static_opencannabis_media_MediaType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.opencannabis.schema.media.MediaItemType.MediaType.class, io.opencannabis.schema.media.MediaItemType.MediaType.Builder.class);
      }

      // Construct using io.opencannabis.schema.media.MediaItemType.MediaType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        kind_ = 0;

        contentCase_ = 0;
        content_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.opencannabis.schema.media.MediaItemType.internal_static_opencannabis_media_MediaType_descriptor;
      }

      @java.lang.Override
      public io.opencannabis.schema.media.MediaItemType.MediaType getDefaultInstanceForType() {
        return io.opencannabis.schema.media.MediaItemType.MediaType.getDefaultInstance();
      }

      @java.lang.Override
      public io.opencannabis.schema.media.MediaItemType.MediaType build() {
        io.opencannabis.schema.media.MediaItemType.MediaType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.opencannabis.schema.media.MediaItemType.MediaType buildPartial() {
        io.opencannabis.schema.media.MediaItemType.MediaType result = new io.opencannabis.schema.media.MediaItemType.MediaType(this);
        result.kind_ = kind_;
        if (contentCase_ == 101) {
          result.content_ = content_;
        }
        if (contentCase_ == 201) {
          result.content_ = content_;
        }
        if (contentCase_ == 301) {
          result.content_ = content_;
        }
        result.contentCase_ = contentCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.opencannabis.schema.media.MediaItemType.MediaType) {
          return mergeFrom((io.opencannabis.schema.media.MediaItemType.MediaType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.opencannabis.schema.media.MediaItemType.MediaType other) {
        if (other == io.opencannabis.schema.media.MediaItemType.MediaType.getDefaultInstance()) return this;
        if (other.kind_ != 0) {
          setKindValue(other.getKindValue());
        }
        switch (other.getContentCase()) {
          case IMAGE_TYPE: {
            setImageTypeValue(other.getImageTypeValue());
            break;
          }
          case DOCUMENT_TYPE: {
            setDocumentTypeValue(other.getDocumentTypeValue());
            break;
          }
          case VIDEO_TYPE: {
            setVideoTypeValue(other.getVideoTypeValue());
            break;
          }
          case CONTENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.opencannabis.schema.media.MediaItemType.MediaType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.opencannabis.schema.media.MediaItemType.MediaType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int contentCase_ = 0;
      private java.lang.Object content_;
      public ContentCase
          getContentCase() {
        return ContentCase.forNumber(
            contentCase_);
      }

      public Builder clearContent() {
        contentCase_ = 0;
        content_ = null;
        onChanged();
        return this;
      }


      private int kind_ = 0;
      /**
       * <pre>
       * Specifies the generic kind of media being described or attached.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
       */
      public int getKindValue() {
        return kind_;
      }
      /**
       * <pre>
       * Specifies the generic kind of media being described or attached.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
       */
      public Builder setKindValue(int value) {
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the generic kind of media being described or attached.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
       */
      public io.opencannabis.schema.media.MediaItemType.MediaType.Kind getKind() {
        @SuppressWarnings("deprecation")
        io.opencannabis.schema.media.MediaItemType.MediaType.Kind result = io.opencannabis.schema.media.MediaItemType.MediaType.Kind.valueOf(kind_);
        return result == null ? io.opencannabis.schema.media.MediaItemType.MediaType.Kind.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Specifies the generic kind of media being described or attached.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
       */
      public Builder setKind(io.opencannabis.schema.media.MediaItemType.MediaType.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        kind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the generic kind of media being described or attached.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.Kind kind = 1 [(.gen_bq_schema.description) = "Specifies the generic kind of media being described or attached."];</code>
       */
      public Builder clearKind() {
        
        kind_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Specifies content type for an image-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
       */
      public int getImageTypeValue() {
        if (contentCase_ == 101) {
          return ((java.lang.Integer) content_).intValue();
        }
        return 0;
      }
      /**
       * <pre>
       * Specifies content type for an image-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
       */
      public Builder setImageTypeValue(int value) {
        contentCase_ = 101;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies content type for an image-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
       */
      public io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind getImageType() {
        if (contentCase_ == 101) {
          @SuppressWarnings("deprecation")
          io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind result = io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind.valueOf(
              (java.lang.Integer) content_);
          return result == null ? io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind.UNRECOGNIZED : result;
        }
        return io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind.UNSPECIFIED_IMAGE_TYPE;
      }
      /**
       * <pre>
       * Specifies content type for an image-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
       */
      public Builder setImageType(io.opencannabis.schema.media.MediaItemType.MediaType.ImageKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        contentCase_ = 101;
        content_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies content type for an image-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.ImageKind image_type = 101 [(.gen_bq_schema.description) = "Specifies content for an image-based media item."];</code>
       */
      public Builder clearImageType() {
        if (contentCase_ == 101) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Specifies content type for a document-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
       */
      public int getDocumentTypeValue() {
        if (contentCase_ == 201) {
          return ((java.lang.Integer) content_).intValue();
        }
        return 0;
      }
      /**
       * <pre>
       * Specifies content type for a document-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
       */
      public Builder setDocumentTypeValue(int value) {
        contentCase_ = 201;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies content type for a document-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
       */
      public io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind getDocumentType() {
        if (contentCase_ == 201) {
          @SuppressWarnings("deprecation")
          io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind result = io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind.valueOf(
              (java.lang.Integer) content_);
          return result == null ? io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind.UNRECOGNIZED : result;
        }
        return io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind.UNSPECIFIED_DOCUMENT_TYPE;
      }
      /**
       * <pre>
       * Specifies content type for a document-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
       */
      public Builder setDocumentType(io.opencannabis.schema.media.MediaItemType.MediaType.DocumentKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        contentCase_ = 201;
        content_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies content type for a document-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.DocumentKind document_type = 201 [(.gen_bq_schema.description) = "Specifies content for a document-based media item."];</code>
       */
      public Builder clearDocumentType() {
        if (contentCase_ == 201) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Specifies content type for a video-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
       */
      public int getVideoTypeValue() {
        if (contentCase_ == 301) {
          return ((java.lang.Integer) content_).intValue();
        }
        return 0;
      }
      /**
       * <pre>
       * Specifies content type for a video-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
       */
      public Builder setVideoTypeValue(int value) {
        contentCase_ = 301;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies content type for a video-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
       */
      public io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind getVideoType() {
        if (contentCase_ == 301) {
          @SuppressWarnings("deprecation")
          io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind result = io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind.valueOf(
              (java.lang.Integer) content_);
          return result == null ? io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind.UNRECOGNIZED : result;
        }
        return io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind.UNSPECIFIED_VIDEO_TYPE;
      }
      /**
       * <pre>
       * Specifies content type for a video-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
       */
      public Builder setVideoType(io.opencannabis.schema.media.MediaItemType.MediaType.VideoKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        contentCase_ = 301;
        content_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies content type for a video-based media item.
       * </pre>
       *
       * <code>.opencannabis.media.MediaType.VideoKind video_type = 301 [(.gen_bq_schema.description) = "Specifies content for a video-based media item."];</code>
       */
      public Builder clearVideoType() {
        if (contentCase_ == 301) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:opencannabis.media.MediaType)
    }

    // @@protoc_insertion_point(class_scope:opencannabis.media.MediaType)
    private static final io.opencannabis.schema.media.MediaItemType.MediaType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.opencannabis.schema.media.MediaItemType.MediaType();
    }

    public static io.opencannabis.schema.media.MediaItemType.MediaType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MediaType>
        PARSER = new com.google.protobuf.AbstractParser<MediaType>() {
      @java.lang.Override
      public MediaType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MediaType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MediaType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MediaType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.opencannabis.schema.media.MediaItemType.MediaType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opencannabis_media_MediaType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opencannabis_media_MediaType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025media/MediaType.proto\022\022opencannabis.me" +
      "dia\032\016bq_field.proto\"\300\006\n\tMediaType\022u\n\004kin" +
      "d\030\001 \001(\0162\".opencannabis.media.MediaType.K" +
      "indBC\212@@Specifies the generic kind of me" +
      "dia being described or attached.\022r\n\nimag" +
      "e_type\030e \001(\0162\'.opencannabis.media.MediaT" +
      "ype.ImageKindB3\212@0Specifies content for " +
      "an image-based media item.H\000\022{\n\rdocument" +
      "_type\030\311\001 \001(\0162*.opencannabis.media.MediaT" +
      "ype.DocumentKindB5\212@2Specifies content f" +
      "or a document-based media item.H\000\022r\n\nvid" +
      "eo_type\030\255\002 \001(\0162\'.opencannabis.media.Medi" +
      "aType.VideoKindB2\212@/Specifies content fo" +
      "r a video-based media item.H\000\"4\n\004Kind\022\010\n" +
      "\004LINK\020\000\022\t\n\005IMAGE\020\001\022\014\n\010DOCUMENT\020\002\022\t\n\005VIDE" +
      "O\020\003\"U\n\tImageKind\022\032\n\026UNSPECIFIED_IMAGE_TY" +
      "PE\020\000\022\007\n\003PNG\020\001\022\007\n\003JPG\020\002\022\007\n\003GIF\020\003\022\007\n\003SVG\020\004" +
      "\022\010\n\004WEBP\020\005\"\"\n\010ImageDPI\022\006\n\002X1\020\000\022\006\n\002X2\020\001\022\006" +
      "\n\002X3\020\002\"W\n\014DocumentKind\022\035\n\031UNSPECIFIED_DO" +
      "CUMENT_TYPE\020\000\022\007\n\003TXT\020\001\022\010\n\004HTML\020\002\022\007\n\003PDF\020" +
      "\003\022\014\n\010MARKDOWN\020\004\"B\n\tVideoKind\022\032\n\026UNSPECIF" +
      "IED_VIDEO_TYPE\020\000\022\007\n\003MP4\020\001\022\007\n\003FLV\020\002\022\007\n\003HL" +
      "S\020\003B\t\n\007contentB7\n\034io.opencannabis.schema" +
      ".mediaB\rMediaItemTypeH\001P\000\242\002\003OCSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gen_bq_schema.BqField.getDescriptor(),
        }, assigner);
    internal_static_opencannabis_media_MediaType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opencannabis_media_MediaType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opencannabis_media_MediaType_descriptor,
        new java.lang.String[] { "Kind", "ImageType", "DocumentType", "VideoType", "Content", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    gen_bq_schema.BqField.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
