// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: security/Token.proto

package io.bloombox.schema.security;

public interface TokenPayloadOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bloombox.schema.security.TokenPayload)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Access token.
   * </pre>
   *
   * <code>string token = 1;</code>
   */
  java.lang.String getToken();
  /**
   * <pre>
   * Access token.
   * </pre>
   *
   * <code>string token = 1;</code>
   */
  com.google.protobuf.ByteString
      getTokenBytes();

  /**
   * <pre>
   * Expiration timestamp for the token.
   * </pre>
   *
   * <code>uint64 expiration = 2;</code>
   */
  long getExpiration();

  /**
   * <pre>
   * Issuance timestamp for the token.
   * </pre>
   *
   * <code>uint64 issuance = 3;</code>
   */
  long getIssuance();

  /**
   * <pre>
   * Scopes being requested, or included in this token.
   * </pre>
   *
   * <code>repeated .opencannabis.oauth.AuthorizationScope scope = 4;</code>
   */
  java.util.List<io.opencannabis.schema.oauth.AuthorizationScope> 
      getScopeList();
  /**
   * <pre>
   * Scopes being requested, or included in this token.
   * </pre>
   *
   * <code>repeated .opencannabis.oauth.AuthorizationScope scope = 4;</code>
   */
  io.opencannabis.schema.oauth.AuthorizationScope getScope(int index);
  /**
   * <pre>
   * Scopes being requested, or included in this token.
   * </pre>
   *
   * <code>repeated .opencannabis.oauth.AuthorizationScope scope = 4;</code>
   */
  int getScopeCount();
  /**
   * <pre>
   * Scopes being requested, or included in this token.
   * </pre>
   *
   * <code>repeated .opencannabis.oauth.AuthorizationScope scope = 4;</code>
   */
  java.util.List<? extends io.opencannabis.schema.oauth.AuthorizationScopeOrBuilder> 
      getScopeOrBuilderList();
  /**
   * <pre>
   * Scopes being requested, or included in this token.
   * </pre>
   *
   * <code>repeated .opencannabis.oauth.AuthorizationScope scope = 4;</code>
   */
  io.opencannabis.schema.oauth.AuthorizationScopeOrBuilder getScopeOrBuilder(
      int index);
}
