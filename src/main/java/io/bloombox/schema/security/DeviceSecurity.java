/*
 * Copyright 2019, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: security/DeviceTicket.proto

package io.bloombox.schema.security;

public final class DeviceSecurity {
  private DeviceSecurity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DeviceTicketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.security.DeviceTicket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.security.AuthToken token = 1;</code>
     */
    boolean hasToken();
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.security.AuthToken token = 1;</code>
     */
    io.bloombox.schema.security.AuthToken getToken();
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.security.AuthToken token = 1;</code>
     */
    io.bloombox.schema.security.AuthTokenOrBuilder getTokenOrBuilder();

    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    boolean hasDevice();
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    io.opencannabis.schema.device.Device getDevice();
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    io.opencannabis.schema.device.DeviceOrBuilder getDeviceOrBuilder();

    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    boolean hasIssued();
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    io.opencannabis.schema.temporal.TemporalInstant.Instant getIssued();
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getIssuedOrBuilder();

    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    boolean hasExpires();
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    io.opencannabis.schema.temporal.TemporalInstant.Instant getExpires();
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getExpiresOrBuilder();
  }
  /**
   * <pre>
   * Specifies an auth token issued to a device, or some other machine-based actor.
   * </pre>
   *
   * Protobuf type {@code bloombox.security.DeviceTicket}
   */
  public  static final class DeviceTicket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.security.DeviceTicket)
      DeviceTicketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceTicket.newBuilder() to construct.
    private DeviceTicket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceTicket() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceTicket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.bloombox.schema.security.AuthToken.Builder subBuilder = null;
              if (token_ != null) {
                subBuilder = token_.toBuilder();
              }
              token_ = input.readMessage(io.bloombox.schema.security.AuthToken.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(token_);
                token_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.opencannabis.schema.device.Device.Builder subBuilder = null;
              if (device_ != null) {
                subBuilder = device_.toBuilder();
              }
              device_ = input.readMessage(io.opencannabis.schema.device.Device.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(device_);
                device_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
              if (issued_ != null) {
                subBuilder = issued_.toBuilder();
              }
              issued_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(issued_);
                issued_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
              if (expires_ != null) {
                subBuilder = expires_.toBuilder();
              }
              expires_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expires_);
                expires_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.security.DeviceSecurity.internal_static_bloombox_security_DeviceTicket_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.security.DeviceSecurity.internal_static_bloombox_security_DeviceTicket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.security.DeviceSecurity.DeviceTicket.class, io.bloombox.schema.security.DeviceSecurity.DeviceTicket.Builder.class);
    }

    public static final int TOKEN_FIELD_NUMBER = 1;
    private io.bloombox.schema.security.AuthToken token_;
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.security.AuthToken token = 1;</code>
     */
    public boolean hasToken() {
      return token_ != null;
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.security.AuthToken token = 1;</code>
     */
    public io.bloombox.schema.security.AuthToken getToken() {
      return token_ == null ? io.bloombox.schema.security.AuthToken.getDefaultInstance() : token_;
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.security.AuthToken token = 1;</code>
     */
    public io.bloombox.schema.security.AuthTokenOrBuilder getTokenOrBuilder() {
      return getToken();
    }

    public static final int DEVICE_FIELD_NUMBER = 2;
    private io.opencannabis.schema.device.Device device_;
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public boolean hasDevice() {
      return device_ != null;
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public io.opencannabis.schema.device.Device getDevice() {
      return device_ == null ? io.opencannabis.schema.device.Device.getDefaultInstance() : device_;
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public io.opencannabis.schema.device.DeviceOrBuilder getDeviceOrBuilder() {
      return getDevice();
    }

    public static final int ISSUED_FIELD_NUMBER = 3;
    private io.opencannabis.schema.temporal.TemporalInstant.Instant issued_;
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public boolean hasIssued() {
      return issued_ != null;
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getIssued() {
      return issued_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : issued_;
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getIssuedOrBuilder() {
      return getIssued();
    }

    public static final int EXPIRES_FIELD_NUMBER = 4;
    private io.opencannabis.schema.temporal.TemporalInstant.Instant expires_;
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public boolean hasExpires() {
      return expires_ != null;
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getExpires() {
      return expires_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : expires_;
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getExpiresOrBuilder() {
      return getExpires();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (token_ != null) {
        output.writeMessage(1, getToken());
      }
      if (device_ != null) {
        output.writeMessage(2, getDevice());
      }
      if (issued_ != null) {
        output.writeMessage(3, getIssued());
      }
      if (expires_ != null) {
        output.writeMessage(4, getExpires());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (token_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getToken());
      }
      if (device_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDevice());
      }
      if (issued_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getIssued());
      }
      if (expires_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getExpires());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.security.DeviceSecurity.DeviceTicket)) {
        return super.equals(obj);
      }
      io.bloombox.schema.security.DeviceSecurity.DeviceTicket other = (io.bloombox.schema.security.DeviceSecurity.DeviceTicket) obj;

      if (hasToken() != other.hasToken()) return false;
      if (hasToken()) {
        if (!getToken()
            .equals(other.getToken())) return false;
      }
      if (hasDevice() != other.hasDevice()) return false;
      if (hasDevice()) {
        if (!getDevice()
            .equals(other.getDevice())) return false;
      }
      if (hasIssued() != other.hasIssued()) return false;
      if (hasIssued()) {
        if (!getIssued()
            .equals(other.getIssued())) return false;
      }
      if (hasExpires() != other.hasExpires()) return false;
      if (hasExpires()) {
        if (!getExpires()
            .equals(other.getExpires())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasToken()) {
        hash = (37 * hash) + TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getToken().hashCode();
      }
      if (hasDevice()) {
        hash = (37 * hash) + DEVICE_FIELD_NUMBER;
        hash = (53 * hash) + getDevice().hashCode();
      }
      if (hasIssued()) {
        hash = (37 * hash) + ISSUED_FIELD_NUMBER;
        hash = (53 * hash) + getIssued().hashCode();
      }
      if (hasExpires()) {
        hash = (37 * hash) + EXPIRES_FIELD_NUMBER;
        hash = (53 * hash) + getExpires().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.security.DeviceSecurity.DeviceTicket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies an auth token issued to a device, or some other machine-based actor.
     * </pre>
     *
     * Protobuf type {@code bloombox.security.DeviceTicket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.security.DeviceTicket)
        io.bloombox.schema.security.DeviceSecurity.DeviceTicketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.security.DeviceSecurity.internal_static_bloombox_security_DeviceTicket_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.security.DeviceSecurity.internal_static_bloombox_security_DeviceTicket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.security.DeviceSecurity.DeviceTicket.class, io.bloombox.schema.security.DeviceSecurity.DeviceTicket.Builder.class);
      }

      // Construct using io.bloombox.schema.security.DeviceSecurity.DeviceTicket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (tokenBuilder_ == null) {
          token_ = null;
        } else {
          token_ = null;
          tokenBuilder_ = null;
        }
        if (deviceBuilder_ == null) {
          device_ = null;
        } else {
          device_ = null;
          deviceBuilder_ = null;
        }
        if (issuedBuilder_ == null) {
          issued_ = null;
        } else {
          issued_ = null;
          issuedBuilder_ = null;
        }
        if (expiresBuilder_ == null) {
          expires_ = null;
        } else {
          expires_ = null;
          expiresBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.security.DeviceSecurity.internal_static_bloombox_security_DeviceTicket_descriptor;
      }

      @java.lang.Override
      public io.bloombox.schema.security.DeviceSecurity.DeviceTicket getDefaultInstanceForType() {
        return io.bloombox.schema.security.DeviceSecurity.DeviceTicket.getDefaultInstance();
      }

      @java.lang.Override
      public io.bloombox.schema.security.DeviceSecurity.DeviceTicket build() {
        io.bloombox.schema.security.DeviceSecurity.DeviceTicket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.bloombox.schema.security.DeviceSecurity.DeviceTicket buildPartial() {
        io.bloombox.schema.security.DeviceSecurity.DeviceTicket result = new io.bloombox.schema.security.DeviceSecurity.DeviceTicket(this);
        if (tokenBuilder_ == null) {
          result.token_ = token_;
        } else {
          result.token_ = tokenBuilder_.build();
        }
        if (deviceBuilder_ == null) {
          result.device_ = device_;
        } else {
          result.device_ = deviceBuilder_.build();
        }
        if (issuedBuilder_ == null) {
          result.issued_ = issued_;
        } else {
          result.issued_ = issuedBuilder_.build();
        }
        if (expiresBuilder_ == null) {
          result.expires_ = expires_;
        } else {
          result.expires_ = expiresBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.security.DeviceSecurity.DeviceTicket) {
          return mergeFrom((io.bloombox.schema.security.DeviceSecurity.DeviceTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.security.DeviceSecurity.DeviceTicket other) {
        if (other == io.bloombox.schema.security.DeviceSecurity.DeviceTicket.getDefaultInstance()) return this;
        if (other.hasToken()) {
          mergeToken(other.getToken());
        }
        if (other.hasDevice()) {
          mergeDevice(other.getDevice());
        }
        if (other.hasIssued()) {
          mergeIssued(other.getIssued());
        }
        if (other.hasExpires()) {
          mergeExpires(other.getExpires());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.security.DeviceSecurity.DeviceTicket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.security.DeviceSecurity.DeviceTicket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.bloombox.schema.security.AuthToken token_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.security.AuthToken, io.bloombox.schema.security.AuthToken.Builder, io.bloombox.schema.security.AuthTokenOrBuilder> tokenBuilder_;
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      public boolean hasToken() {
        return tokenBuilder_ != null || token_ != null;
      }
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      public io.bloombox.schema.security.AuthToken getToken() {
        if (tokenBuilder_ == null) {
          return token_ == null ? io.bloombox.schema.security.AuthToken.getDefaultInstance() : token_;
        } else {
          return tokenBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      public Builder setToken(io.bloombox.schema.security.AuthToken value) {
        if (tokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          token_ = value;
          onChanged();
        } else {
          tokenBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      public Builder setToken(
          io.bloombox.schema.security.AuthToken.Builder builderForValue) {
        if (tokenBuilder_ == null) {
          token_ = builderForValue.build();
          onChanged();
        } else {
          tokenBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      public Builder mergeToken(io.bloombox.schema.security.AuthToken value) {
        if (tokenBuilder_ == null) {
          if (token_ != null) {
            token_ =
              io.bloombox.schema.security.AuthToken.newBuilder(token_).mergeFrom(value).buildPartial();
          } else {
            token_ = value;
          }
          onChanged();
        } else {
          tokenBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      public Builder clearToken() {
        if (tokenBuilder_ == null) {
          token_ = null;
          onChanged();
        } else {
          token_ = null;
          tokenBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      public io.bloombox.schema.security.AuthToken.Builder getTokenBuilder() {
        
        onChanged();
        return getTokenFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      public io.bloombox.schema.security.AuthTokenOrBuilder getTokenOrBuilder() {
        if (tokenBuilder_ != null) {
          return tokenBuilder_.getMessageOrBuilder();
        } else {
          return token_ == null ?
              io.bloombox.schema.security.AuthToken.getDefaultInstance() : token_;
        }
      }
      /**
       * <pre>
       * Authentication token, usable by this device to authenticate to the API, etc.
       * </pre>
       *
       * <code>.bloombox.security.AuthToken token = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.security.AuthToken, io.bloombox.schema.security.AuthToken.Builder, io.bloombox.schema.security.AuthTokenOrBuilder> 
          getTokenFieldBuilder() {
        if (tokenBuilder_ == null) {
          tokenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.security.AuthToken, io.bloombox.schema.security.AuthToken.Builder, io.bloombox.schema.security.AuthTokenOrBuilder>(
                  getToken(),
                  getParentForChildren(),
                  isClean());
          token_ = null;
        }
        return tokenBuilder_;
      }

      private io.opencannabis.schema.device.Device device_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.device.Device, io.opencannabis.schema.device.Device.Builder, io.opencannabis.schema.device.DeviceOrBuilder> deviceBuilder_;
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      public boolean hasDevice() {
        return deviceBuilder_ != null || device_ != null;
      }
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      public io.opencannabis.schema.device.Device getDevice() {
        if (deviceBuilder_ == null) {
          return device_ == null ? io.opencannabis.schema.device.Device.getDefaultInstance() : device_;
        } else {
          return deviceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      public Builder setDevice(io.opencannabis.schema.device.Device value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          device_ = value;
          onChanged();
        } else {
          deviceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      public Builder setDevice(
          io.opencannabis.schema.device.Device.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          device_ = builderForValue.build();
          onChanged();
        } else {
          deviceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      public Builder mergeDevice(io.opencannabis.schema.device.Device value) {
        if (deviceBuilder_ == null) {
          if (device_ != null) {
            device_ =
              io.opencannabis.schema.device.Device.newBuilder(device_).mergeFrom(value).buildPartial();
          } else {
            device_ = value;
          }
          onChanged();
        } else {
          deviceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      public Builder clearDevice() {
        if (deviceBuilder_ == null) {
          device_ = null;
          onChanged();
        } else {
          device_ = null;
          deviceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      public io.opencannabis.schema.device.Device.Builder getDeviceBuilder() {
        
        onChanged();
        return getDeviceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      public io.opencannabis.schema.device.DeviceOrBuilder getDeviceOrBuilder() {
        if (deviceBuilder_ != null) {
          return deviceBuilder_.getMessageOrBuilder();
        } else {
          return device_ == null ?
              io.opencannabis.schema.device.Device.getDefaultInstance() : device_;
        }
      }
      /**
       * <pre>
       * Information passed from the server to this device, including credentials, stateful flags, and so on.
       * </pre>
       *
       * <code>.opencannabis.device.Device device = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.device.Device, io.opencannabis.schema.device.Device.Builder, io.opencannabis.schema.device.DeviceOrBuilder> 
          getDeviceFieldBuilder() {
        if (deviceBuilder_ == null) {
          deviceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.device.Device, io.opencannabis.schema.device.Device.Builder, io.opencannabis.schema.device.DeviceOrBuilder>(
                  getDevice(),
                  getParentForChildren(),
                  isClean());
          device_ = null;
        }
        return deviceBuilder_;
      }

      private io.opencannabis.schema.temporal.TemporalInstant.Instant issued_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> issuedBuilder_;
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      public boolean hasIssued() {
        return issuedBuilder_ != null || issued_ != null;
      }
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.Instant getIssued() {
        if (issuedBuilder_ == null) {
          return issued_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : issued_;
        } else {
          return issuedBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      public Builder setIssued(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
        if (issuedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          issued_ = value;
          onChanged();
        } else {
          issuedBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      public Builder setIssued(
          io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
        if (issuedBuilder_ == null) {
          issued_ = builderForValue.build();
          onChanged();
        } else {
          issuedBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      public Builder mergeIssued(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
        if (issuedBuilder_ == null) {
          if (issued_ != null) {
            issued_ =
              io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(issued_).mergeFrom(value).buildPartial();
          } else {
            issued_ = value;
          }
          onChanged();
        } else {
          issuedBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      public Builder clearIssued() {
        if (issuedBuilder_ == null) {
          issued_ = null;
          onChanged();
        } else {
          issued_ = null;
          issuedBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getIssuedBuilder() {
        
        onChanged();
        return getIssuedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getIssuedOrBuilder() {
        if (issuedBuilder_ != null) {
          return issuedBuilder_.getMessageOrBuilder();
        } else {
          return issued_ == null ?
              io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : issued_;
        }
      }
      /**
       * <pre>
       * Issuance timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant issued = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
          getIssuedFieldBuilder() {
        if (issuedBuilder_ == null) {
          issuedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                  getIssued(),
                  getParentForChildren(),
                  isClean());
          issued_ = null;
        }
        return issuedBuilder_;
      }

      private io.opencannabis.schema.temporal.TemporalInstant.Instant expires_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> expiresBuilder_;
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      public boolean hasExpires() {
        return expiresBuilder_ != null || expires_ != null;
      }
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.Instant getExpires() {
        if (expiresBuilder_ == null) {
          return expires_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : expires_;
        } else {
          return expiresBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      public Builder setExpires(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
        if (expiresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expires_ = value;
          onChanged();
        } else {
          expiresBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      public Builder setExpires(
          io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
        if (expiresBuilder_ == null) {
          expires_ = builderForValue.build();
          onChanged();
        } else {
          expiresBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      public Builder mergeExpires(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
        if (expiresBuilder_ == null) {
          if (expires_ != null) {
            expires_ =
              io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(expires_).mergeFrom(value).buildPartial();
          } else {
            expires_ = value;
          }
          onChanged();
        } else {
          expiresBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      public Builder clearExpires() {
        if (expiresBuilder_ == null) {
          expires_ = null;
          onChanged();
        } else {
          expires_ = null;
          expiresBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getExpiresBuilder() {
        
        onChanged();
        return getExpiresFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getExpiresOrBuilder() {
        if (expiresBuilder_ != null) {
          return expiresBuilder_.getMessageOrBuilder();
        } else {
          return expires_ == null ?
              io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : expires_;
        }
      }
      /**
       * <pre>
       * Expiry timestamp for this device token.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant expires = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
          getExpiresFieldBuilder() {
        if (expiresBuilder_ == null) {
          expiresBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                  getExpires(),
                  getParentForChildren(),
                  isClean());
          expires_ = null;
        }
        return expiresBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.security.DeviceTicket)
    }

    // @@protoc_insertion_point(class_scope:bloombox.security.DeviceTicket)
    private static final io.bloombox.schema.security.DeviceSecurity.DeviceTicket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.security.DeviceSecurity.DeviceTicket();
    }

    public static io.bloombox.schema.security.DeviceSecurity.DeviceTicket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceTicket>
        PARSER = new com.google.protobuf.AbstractParser<DeviceTicket>() {
      @java.lang.Override
      public DeviceTicket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceTicket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeviceTicket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceTicket> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.bloombox.schema.security.DeviceSecurity.DeviceTicket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_security_DeviceTicket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_security_DeviceTicket_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033security/DeviceTicket.proto\022\021bloombox." +
      "security\032\023device/Device.proto\032\024security/" +
      "Token.proto\032\026temporal/Instant.proto\"\311\001\n\014" +
      "DeviceTicket\022+\n\005token\030\001 \001(\0132\034.bloombox.s" +
      "ecurity.AuthToken\022+\n\006device\030\002 \001(\0132\033.open" +
      "cannabis.device.Device\022.\n\006issued\030\003 \001(\0132\036" +
      ".opencannabis.temporal.Instant\022/\n\007expire" +
      "s\030\004 \001(\0132\036.opencannabis.temporal.InstantB" +
      "7\n\033io.bloombox.schema.securityB\016DeviceSe" +
      "curityH\001P\000\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.opencannabis.schema.device.DeviceOuterClass.getDescriptor(),
          io.bloombox.schema.security.Token.getDescriptor(),
          io.opencannabis.schema.temporal.TemporalInstant.getDescriptor(),
        }, assigner);
    internal_static_bloombox_security_DeviceTicket_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_security_DeviceTicket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_security_DeviceTicket_descriptor,
        new java.lang.String[] { "Token", "Device", "Issued", "Expires", });
    io.opencannabis.schema.device.DeviceOuterClass.getDescriptor();
    io.bloombox.schema.security.Token.getDescriptor();
    io.opencannabis.schema.temporal.TemporalInstant.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
