/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: security/Token.proto

package io.bloombox.schema.security;

/**
 * <pre>
 * Specifies an authorization token, in the OAuth2 access_token format.
 * </pre>
 *
 * Protobuf type {@code bloombox.schema.security.AuthToken}
 */
public  final class AuthToken extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bloombox.schema.security.AuthToken)
    AuthTokenOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AuthToken.newBuilder() to construct.
  private AuthToken(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AuthToken() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AuthToken(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            payloadCase_ = 1;
            payload_ = s;
            break;
          }
          case 18: {
            io.bloombox.schema.security.TokenPayload.Builder subBuilder = null;
            if (payloadCase_ == 2) {
              subBuilder = ((io.bloombox.schema.security.TokenPayload) payload_).toBuilder();
            }
            payload_ =
                input.readMessage(io.bloombox.schema.security.TokenPayload.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.bloombox.schema.security.TokenPayload) payload_);
              payload_ = subBuilder.buildPartial();
            }
            payloadCase_ = 2;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.security.Token.internal_static_bloombox_schema_security_AuthToken_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.security.Token.internal_static_bloombox_schema_security_AuthToken_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.security.AuthToken.class, io.bloombox.schema.security.AuthToken.Builder.class);
  }

  private int payloadCase_ = 0;
  private java.lang.Object payload_;
  public enum PayloadCase
      implements com.google.protobuf.Internal.EnumLite {
    ENCODED(1),
    TICKET(2),
    PAYLOAD_NOT_SET(0);
    private final int value;
    private PayloadCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PayloadCase valueOf(int value) {
      return forNumber(value);
    }

    public static PayloadCase forNumber(int value) {
      switch (value) {
        case 1: return ENCODED;
        case 2: return TICKET;
        case 0: return PAYLOAD_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public PayloadCase
  getPayloadCase() {
    return PayloadCase.forNumber(
        payloadCase_);
  }

  public static final int ENCODED_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Encoded access token.
   * </pre>
   *
   * <code>string encoded = 1;</code>
   */
  public java.lang.String getEncoded() {
    java.lang.Object ref = "";
    if (payloadCase_ == 1) {
      ref = payload_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (payloadCase_ == 1) {
        payload_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Encoded access token.
   * </pre>
   *
   * <code>string encoded = 1;</code>
   */
  public com.google.protobuf.ByteString
      getEncodedBytes() {
    java.lang.Object ref = "";
    if (payloadCase_ == 1) {
      ref = payload_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (payloadCase_ == 1) {
        payload_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TICKET_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Parsed and structured authorization ticket.
   * </pre>
   *
   * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
   */
  public boolean hasTicket() {
    return payloadCase_ == 2;
  }
  /**
   * <pre>
   * Parsed and structured authorization ticket.
   * </pre>
   *
   * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
   */
  public io.bloombox.schema.security.TokenPayload getTicket() {
    if (payloadCase_ == 2) {
       return (io.bloombox.schema.security.TokenPayload) payload_;
    }
    return io.bloombox.schema.security.TokenPayload.getDefaultInstance();
  }
  /**
   * <pre>
   * Parsed and structured authorization ticket.
   * </pre>
   *
   * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
   */
  public io.bloombox.schema.security.TokenPayloadOrBuilder getTicketOrBuilder() {
    if (payloadCase_ == 2) {
       return (io.bloombox.schema.security.TokenPayload) payload_;
    }
    return io.bloombox.schema.security.TokenPayload.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (payloadCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, payload_);
    }
    if (payloadCase_ == 2) {
      output.writeMessage(2, (io.bloombox.schema.security.TokenPayload) payload_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (payloadCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, payload_);
    }
    if (payloadCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (io.bloombox.schema.security.TokenPayload) payload_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.security.AuthToken)) {
      return super.equals(obj);
    }
    io.bloombox.schema.security.AuthToken other = (io.bloombox.schema.security.AuthToken) obj;

    boolean result = true;
    result = result && getPayloadCase().equals(
        other.getPayloadCase());
    if (!result) return false;
    switch (payloadCase_) {
      case 1:
        result = result && getEncoded()
            .equals(other.getEncoded());
        break;
      case 2:
        result = result && getTicket()
            .equals(other.getTicket());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (payloadCase_) {
      case 1:
        hash = (37 * hash) + ENCODED_FIELD_NUMBER;
        hash = (53 * hash) + getEncoded().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TICKET_FIELD_NUMBER;
        hash = (53 * hash) + getTicket().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.security.AuthToken parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.security.AuthToken parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.security.AuthToken parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.security.AuthToken parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.security.AuthToken prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies an authorization token, in the OAuth2 access_token format.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.security.AuthToken}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bloombox.schema.security.AuthToken)
      io.bloombox.schema.security.AuthTokenOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.security.Token.internal_static_bloombox_schema_security_AuthToken_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.security.Token.internal_static_bloombox_schema_security_AuthToken_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.security.AuthToken.class, io.bloombox.schema.security.AuthToken.Builder.class);
    }

    // Construct using io.bloombox.schema.security.AuthToken.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      payloadCase_ = 0;
      payload_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.security.Token.internal_static_bloombox_schema_security_AuthToken_descriptor;
    }

    public io.bloombox.schema.security.AuthToken getDefaultInstanceForType() {
      return io.bloombox.schema.security.AuthToken.getDefaultInstance();
    }

    public io.bloombox.schema.security.AuthToken build() {
      io.bloombox.schema.security.AuthToken result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.security.AuthToken buildPartial() {
      io.bloombox.schema.security.AuthToken result = new io.bloombox.schema.security.AuthToken(this);
      if (payloadCase_ == 1) {
        result.payload_ = payload_;
      }
      if (payloadCase_ == 2) {
        if (ticketBuilder_ == null) {
          result.payload_ = payload_;
        } else {
          result.payload_ = ticketBuilder_.build();
        }
      }
      result.payloadCase_ = payloadCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.security.AuthToken) {
        return mergeFrom((io.bloombox.schema.security.AuthToken)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.security.AuthToken other) {
      if (other == io.bloombox.schema.security.AuthToken.getDefaultInstance()) return this;
      switch (other.getPayloadCase()) {
        case ENCODED: {
          payloadCase_ = 1;
          payload_ = other.payload_;
          onChanged();
          break;
        }
        case TICKET: {
          mergeTicket(other.getTicket());
          break;
        }
        case PAYLOAD_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.security.AuthToken parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.security.AuthToken) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public PayloadCase
        getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public Builder clearPayload() {
      payloadCase_ = 0;
      payload_ = null;
      onChanged();
      return this;
    }


    /**
     * <pre>
     * Encoded access token.
     * </pre>
     *
     * <code>string encoded = 1;</code>
     */
    public java.lang.String getEncoded() {
      java.lang.Object ref = "";
      if (payloadCase_ == 1) {
        ref = payload_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (payloadCase_ == 1) {
          payload_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Encoded access token.
     * </pre>
     *
     * <code>string encoded = 1;</code>
     */
    public com.google.protobuf.ByteString
        getEncodedBytes() {
      java.lang.Object ref = "";
      if (payloadCase_ == 1) {
        ref = payload_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (payloadCase_ == 1) {
          payload_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Encoded access token.
     * </pre>
     *
     * <code>string encoded = 1;</code>
     */
    public Builder setEncoded(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  payloadCase_ = 1;
      payload_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Encoded access token.
     * </pre>
     *
     * <code>string encoded = 1;</code>
     */
    public Builder clearEncoded() {
      if (payloadCase_ == 1) {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Encoded access token.
     * </pre>
     *
     * <code>string encoded = 1;</code>
     */
    public Builder setEncodedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      payloadCase_ = 1;
      payload_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.security.TokenPayload, io.bloombox.schema.security.TokenPayload.Builder, io.bloombox.schema.security.TokenPayloadOrBuilder> ticketBuilder_;
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    public boolean hasTicket() {
      return payloadCase_ == 2;
    }
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    public io.bloombox.schema.security.TokenPayload getTicket() {
      if (ticketBuilder_ == null) {
        if (payloadCase_ == 2) {
          return (io.bloombox.schema.security.TokenPayload) payload_;
        }
        return io.bloombox.schema.security.TokenPayload.getDefaultInstance();
      } else {
        if (payloadCase_ == 2) {
          return ticketBuilder_.getMessage();
        }
        return io.bloombox.schema.security.TokenPayload.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    public Builder setTicket(io.bloombox.schema.security.TokenPayload value) {
      if (ticketBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        payload_ = value;
        onChanged();
      } else {
        ticketBuilder_.setMessage(value);
      }
      payloadCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    public Builder setTicket(
        io.bloombox.schema.security.TokenPayload.Builder builderForValue) {
      if (ticketBuilder_ == null) {
        payload_ = builderForValue.build();
        onChanged();
      } else {
        ticketBuilder_.setMessage(builderForValue.build());
      }
      payloadCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    public Builder mergeTicket(io.bloombox.schema.security.TokenPayload value) {
      if (ticketBuilder_ == null) {
        if (payloadCase_ == 2 &&
            payload_ != io.bloombox.schema.security.TokenPayload.getDefaultInstance()) {
          payload_ = io.bloombox.schema.security.TokenPayload.newBuilder((io.bloombox.schema.security.TokenPayload) payload_)
              .mergeFrom(value).buildPartial();
        } else {
          payload_ = value;
        }
        onChanged();
      } else {
        if (payloadCase_ == 2) {
          ticketBuilder_.mergeFrom(value);
        }
        ticketBuilder_.setMessage(value);
      }
      payloadCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    public Builder clearTicket() {
      if (ticketBuilder_ == null) {
        if (payloadCase_ == 2) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
      } else {
        if (payloadCase_ == 2) {
          payloadCase_ = 0;
          payload_ = null;
        }
        ticketBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    public io.bloombox.schema.security.TokenPayload.Builder getTicketBuilder() {
      return getTicketFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    public io.bloombox.schema.security.TokenPayloadOrBuilder getTicketOrBuilder() {
      if ((payloadCase_ == 2) && (ticketBuilder_ != null)) {
        return ticketBuilder_.getMessageOrBuilder();
      } else {
        if (payloadCase_ == 2) {
          return (io.bloombox.schema.security.TokenPayload) payload_;
        }
        return io.bloombox.schema.security.TokenPayload.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Parsed and structured authorization ticket.
     * </pre>
     *
     * <code>.bloombox.schema.security.TokenPayload ticket = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.security.TokenPayload, io.bloombox.schema.security.TokenPayload.Builder, io.bloombox.schema.security.TokenPayloadOrBuilder> 
        getTicketFieldBuilder() {
      if (ticketBuilder_ == null) {
        if (!(payloadCase_ == 2)) {
          payload_ = io.bloombox.schema.security.TokenPayload.getDefaultInstance();
        }
        ticketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.security.TokenPayload, io.bloombox.schema.security.TokenPayload.Builder, io.bloombox.schema.security.TokenPayloadOrBuilder>(
                (io.bloombox.schema.security.TokenPayload) payload_,
                getParentForChildren(),
                isClean());
        payload_ = null;
      }
      payloadCase_ = 2;
      onChanged();;
      return ticketBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bloombox.schema.security.AuthToken)
  }

  // @@protoc_insertion_point(class_scope:bloombox.schema.security.AuthToken)
  private static final io.bloombox.schema.security.AuthToken DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.security.AuthToken();
  }

  public static io.bloombox.schema.security.AuthToken getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AuthToken>
      PARSER = new com.google.protobuf.AbstractParser<AuthToken>() {
    public AuthToken parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AuthToken(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AuthToken> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AuthToken> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.security.AuthToken getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

