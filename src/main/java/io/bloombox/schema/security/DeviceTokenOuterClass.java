/*
 * Copyright 2018, Bloombox, LLC. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Bloombox, a California Limited Liability Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: security/DeviceToken.proto

package io.bloombox.schema.security;

public final class DeviceTokenOuterClass {
  private DeviceTokenOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_security_DeviceToken_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_security_DeviceToken_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032security/DeviceToken.proto\022\010security\032\023" +
      "device/Device.proto\032\026temporal/Instant.pr" +
      "oto\032\030security/AuthToken.proto\"\230\001\n\013Device" +
      "Token\022\"\n\005token\030\001 \001(\0132\023.security.AuthToke" +
      "n\022\036\n\006device\030\002 \001(\0132\016.device.Device\022!\n\006iss" +
      "ued\030\003 \001(\0132\021.temporal.Instant\022\"\n\007expires\030" +
      "\004 \001(\0132\021.temporal.InstantB!\n\033io.bloombox." +
      "schema.securityH\001P\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.bloombox.schema.device.DeviceOuterClass.getDescriptor(),
          io.bloombox.schema.temporal.InstantOuterClass.getDescriptor(),
          io.bloombox.schema.security.AuthTokenOuterClass.getDescriptor(),
        }, assigner);
    internal_static_security_DeviceToken_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_security_DeviceToken_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_security_DeviceToken_descriptor,
        new java.lang.String[] { "Token", "Device", "Issued", "Expires", });
    io.bloombox.schema.device.DeviceOuterClass.getDescriptor();
    io.bloombox.schema.temporal.InstantOuterClass.getDescriptor();
    io.bloombox.schema.security.AuthTokenOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
