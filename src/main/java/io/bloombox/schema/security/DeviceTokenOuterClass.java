/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: security/DeviceToken.proto

package io.bloombox.schema.security;

public final class DeviceTokenOuterClass {
  private DeviceTokenOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_security_DeviceToken_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_security_DeviceToken_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032security/DeviceToken.proto\022\030bloombox.s" +
      "chema.security\032\023device/Device.proto\032\024sec" +
      "urity/Token.proto\032\026temporal/Instant.prot" +
      "o\"\317\001\n\013DeviceToken\0222\n\005token\030\001 \001(\0132#.bloom" +
      "box.schema.security.AuthToken\022+\n\006device\030" +
      "\002 \001(\0132\033.opencannabis.device.Device\022.\n\006is" +
      "sued\030\003 \001(\0132\036.opencannabis.temporal.Insta" +
      "nt\022/\n\007expires\030\004 \001(\0132\036.opencannabis.tempo" +
      "ral.InstantB\'\n\033io.bloombox.schema.securi" +
      "tyH\001P\001\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.opencannabis.schema.device.DeviceOuterClass.getDescriptor(),
          io.bloombox.schema.security.Token.getDescriptor(),
          io.opencannabis.schema.temporal.TemporalInstant.getDescriptor(),
        }, assigner);
    internal_static_bloombox_schema_security_DeviceToken_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_schema_security_DeviceToken_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_security_DeviceToken_descriptor,
        new java.lang.String[] { "Token", "Device", "Issued", "Expires", });
    io.opencannabis.schema.device.DeviceOuterClass.getDescriptor();
    io.bloombox.schema.security.Token.getDescriptor();
    io.opencannabis.schema.temporal.TemporalInstant.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
