// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: security/DeviceToken.proto

package io.bloombox.schema.security;

/**
 * <pre>
 * Specifies an auth token issued to a device, or some other machine-based actor.
 * </pre>
 *
 * Protobuf type {@code bloombox.schema.security.DeviceToken}
 */
public  final class DeviceToken extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bloombox.schema.security.DeviceToken)
    DeviceTokenOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DeviceToken.newBuilder() to construct.
  private DeviceToken(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DeviceToken() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DeviceToken(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.bloombox.schema.security.AuthToken.Builder subBuilder = null;
            if (token_ != null) {
              subBuilder = token_.toBuilder();
            }
            token_ = input.readMessage(io.bloombox.schema.security.AuthToken.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(token_);
              token_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.opencannabis.schema.device.Device.Builder subBuilder = null;
            if (device_ != null) {
              subBuilder = device_.toBuilder();
            }
            device_ = input.readMessage(io.opencannabis.schema.device.Device.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(device_);
              device_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
            if (issued_ != null) {
              subBuilder = issued_.toBuilder();
            }
            issued_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(issued_);
              issued_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
            if (expires_ != null) {
              subBuilder = expires_.toBuilder();
            }
            expires_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(expires_);
              expires_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.security.DeviceTokenOuterClass.internal_static_bloombox_schema_security_DeviceToken_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.security.DeviceTokenOuterClass.internal_static_bloombox_schema_security_DeviceToken_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.security.DeviceToken.class, io.bloombox.schema.security.DeviceToken.Builder.class);
  }

  public static final int TOKEN_FIELD_NUMBER = 1;
  private io.bloombox.schema.security.AuthToken token_;
  /**
   * <pre>
   * Authentication token, usable by this device to authenticate to the API, etc.
   * </pre>
   *
   * <code>.bloombox.schema.security.AuthToken token = 1;</code>
   */
  public boolean hasToken() {
    return token_ != null;
  }
  /**
   * <pre>
   * Authentication token, usable by this device to authenticate to the API, etc.
   * </pre>
   *
   * <code>.bloombox.schema.security.AuthToken token = 1;</code>
   */
  public io.bloombox.schema.security.AuthToken getToken() {
    return token_ == null ? io.bloombox.schema.security.AuthToken.getDefaultInstance() : token_;
  }
  /**
   * <pre>
   * Authentication token, usable by this device to authenticate to the API, etc.
   * </pre>
   *
   * <code>.bloombox.schema.security.AuthToken token = 1;</code>
   */
  public io.bloombox.schema.security.AuthTokenOrBuilder getTokenOrBuilder() {
    return getToken();
  }

  public static final int DEVICE_FIELD_NUMBER = 2;
  private io.opencannabis.schema.device.Device device_;
  /**
   * <pre>
   * Information passed from the server to this device, including credentials, stateful flags, and so on.
   * </pre>
   *
   * <code>.opencannabis.device.Device device = 2;</code>
   */
  public boolean hasDevice() {
    return device_ != null;
  }
  /**
   * <pre>
   * Information passed from the server to this device, including credentials, stateful flags, and so on.
   * </pre>
   *
   * <code>.opencannabis.device.Device device = 2;</code>
   */
  public io.opencannabis.schema.device.Device getDevice() {
    return device_ == null ? io.opencannabis.schema.device.Device.getDefaultInstance() : device_;
  }
  /**
   * <pre>
   * Information passed from the server to this device, including credentials, stateful flags, and so on.
   * </pre>
   *
   * <code>.opencannabis.device.Device device = 2;</code>
   */
  public io.opencannabis.schema.device.DeviceOrBuilder getDeviceOrBuilder() {
    return getDevice();
  }

  public static final int ISSUED_FIELD_NUMBER = 3;
  private io.opencannabis.schema.temporal.TemporalInstant.Instant issued_;
  /**
   * <pre>
   * Issuance timestamp for this device token.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant issued = 3;</code>
   */
  public boolean hasIssued() {
    return issued_ != null;
  }
  /**
   * <pre>
   * Issuance timestamp for this device token.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant issued = 3;</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.Instant getIssued() {
    return issued_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : issued_;
  }
  /**
   * <pre>
   * Issuance timestamp for this device token.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant issued = 3;</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getIssuedOrBuilder() {
    return getIssued();
  }

  public static final int EXPIRES_FIELD_NUMBER = 4;
  private io.opencannabis.schema.temporal.TemporalInstant.Instant expires_;
  /**
   * <pre>
   * Expiry timestamp for this device token.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant expires = 4;</code>
   */
  public boolean hasExpires() {
    return expires_ != null;
  }
  /**
   * <pre>
   * Expiry timestamp for this device token.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant expires = 4;</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.Instant getExpires() {
    return expires_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : expires_;
  }
  /**
   * <pre>
   * Expiry timestamp for this device token.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant expires = 4;</code>
   */
  public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getExpiresOrBuilder() {
    return getExpires();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (token_ != null) {
      output.writeMessage(1, getToken());
    }
    if (device_ != null) {
      output.writeMessage(2, getDevice());
    }
    if (issued_ != null) {
      output.writeMessage(3, getIssued());
    }
    if (expires_ != null) {
      output.writeMessage(4, getExpires());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (token_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getToken());
    }
    if (device_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDevice());
    }
    if (issued_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getIssued());
    }
    if (expires_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getExpires());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.security.DeviceToken)) {
      return super.equals(obj);
    }
    io.bloombox.schema.security.DeviceToken other = (io.bloombox.schema.security.DeviceToken) obj;

    boolean result = true;
    result = result && (hasToken() == other.hasToken());
    if (hasToken()) {
      result = result && getToken()
          .equals(other.getToken());
    }
    result = result && (hasDevice() == other.hasDevice());
    if (hasDevice()) {
      result = result && getDevice()
          .equals(other.getDevice());
    }
    result = result && (hasIssued() == other.hasIssued());
    if (hasIssued()) {
      result = result && getIssued()
          .equals(other.getIssued());
    }
    result = result && (hasExpires() == other.hasExpires());
    if (hasExpires()) {
      result = result && getExpires()
          .equals(other.getExpires());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasToken()) {
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
    }
    if (hasDevice()) {
      hash = (37 * hash) + DEVICE_FIELD_NUMBER;
      hash = (53 * hash) + getDevice().hashCode();
    }
    if (hasIssued()) {
      hash = (37 * hash) + ISSUED_FIELD_NUMBER;
      hash = (53 * hash) + getIssued().hashCode();
    }
    if (hasExpires()) {
      hash = (37 * hash) + EXPIRES_FIELD_NUMBER;
      hash = (53 * hash) + getExpires().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.security.DeviceToken parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.security.DeviceToken parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.security.DeviceToken parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.security.DeviceToken parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.security.DeviceToken prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies an auth token issued to a device, or some other machine-based actor.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.security.DeviceToken}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bloombox.schema.security.DeviceToken)
      io.bloombox.schema.security.DeviceTokenOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.security.DeviceTokenOuterClass.internal_static_bloombox_schema_security_DeviceToken_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.security.DeviceTokenOuterClass.internal_static_bloombox_schema_security_DeviceToken_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.security.DeviceToken.class, io.bloombox.schema.security.DeviceToken.Builder.class);
    }

    // Construct using io.bloombox.schema.security.DeviceToken.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (tokenBuilder_ == null) {
        token_ = null;
      } else {
        token_ = null;
        tokenBuilder_ = null;
      }
      if (deviceBuilder_ == null) {
        device_ = null;
      } else {
        device_ = null;
        deviceBuilder_ = null;
      }
      if (issuedBuilder_ == null) {
        issued_ = null;
      } else {
        issued_ = null;
        issuedBuilder_ = null;
      }
      if (expiresBuilder_ == null) {
        expires_ = null;
      } else {
        expires_ = null;
        expiresBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.security.DeviceTokenOuterClass.internal_static_bloombox_schema_security_DeviceToken_descriptor;
    }

    public io.bloombox.schema.security.DeviceToken getDefaultInstanceForType() {
      return io.bloombox.schema.security.DeviceToken.getDefaultInstance();
    }

    public io.bloombox.schema.security.DeviceToken build() {
      io.bloombox.schema.security.DeviceToken result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.security.DeviceToken buildPartial() {
      io.bloombox.schema.security.DeviceToken result = new io.bloombox.schema.security.DeviceToken(this);
      if (tokenBuilder_ == null) {
        result.token_ = token_;
      } else {
        result.token_ = tokenBuilder_.build();
      }
      if (deviceBuilder_ == null) {
        result.device_ = device_;
      } else {
        result.device_ = deviceBuilder_.build();
      }
      if (issuedBuilder_ == null) {
        result.issued_ = issued_;
      } else {
        result.issued_ = issuedBuilder_.build();
      }
      if (expiresBuilder_ == null) {
        result.expires_ = expires_;
      } else {
        result.expires_ = expiresBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.security.DeviceToken) {
        return mergeFrom((io.bloombox.schema.security.DeviceToken)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.security.DeviceToken other) {
      if (other == io.bloombox.schema.security.DeviceToken.getDefaultInstance()) return this;
      if (other.hasToken()) {
        mergeToken(other.getToken());
      }
      if (other.hasDevice()) {
        mergeDevice(other.getDevice());
      }
      if (other.hasIssued()) {
        mergeIssued(other.getIssued());
      }
      if (other.hasExpires()) {
        mergeExpires(other.getExpires());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.security.DeviceToken parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.security.DeviceToken) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.bloombox.schema.security.AuthToken token_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.security.AuthToken, io.bloombox.schema.security.AuthToken.Builder, io.bloombox.schema.security.AuthTokenOrBuilder> tokenBuilder_;
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    public boolean hasToken() {
      return tokenBuilder_ != null || token_ != null;
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    public io.bloombox.schema.security.AuthToken getToken() {
      if (tokenBuilder_ == null) {
        return token_ == null ? io.bloombox.schema.security.AuthToken.getDefaultInstance() : token_;
      } else {
        return tokenBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    public Builder setToken(io.bloombox.schema.security.AuthToken value) {
      if (tokenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        token_ = value;
        onChanged();
      } else {
        tokenBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    public Builder setToken(
        io.bloombox.schema.security.AuthToken.Builder builderForValue) {
      if (tokenBuilder_ == null) {
        token_ = builderForValue.build();
        onChanged();
      } else {
        tokenBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    public Builder mergeToken(io.bloombox.schema.security.AuthToken value) {
      if (tokenBuilder_ == null) {
        if (token_ != null) {
          token_ =
            io.bloombox.schema.security.AuthToken.newBuilder(token_).mergeFrom(value).buildPartial();
        } else {
          token_ = value;
        }
        onChanged();
      } else {
        tokenBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    public Builder clearToken() {
      if (tokenBuilder_ == null) {
        token_ = null;
        onChanged();
      } else {
        token_ = null;
        tokenBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    public io.bloombox.schema.security.AuthToken.Builder getTokenBuilder() {
      
      onChanged();
      return getTokenFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    public io.bloombox.schema.security.AuthTokenOrBuilder getTokenOrBuilder() {
      if (tokenBuilder_ != null) {
        return tokenBuilder_.getMessageOrBuilder();
      } else {
        return token_ == null ?
            io.bloombox.schema.security.AuthToken.getDefaultInstance() : token_;
      }
    }
    /**
     * <pre>
     * Authentication token, usable by this device to authenticate to the API, etc.
     * </pre>
     *
     * <code>.bloombox.schema.security.AuthToken token = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.security.AuthToken, io.bloombox.schema.security.AuthToken.Builder, io.bloombox.schema.security.AuthTokenOrBuilder> 
        getTokenFieldBuilder() {
      if (tokenBuilder_ == null) {
        tokenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.security.AuthToken, io.bloombox.schema.security.AuthToken.Builder, io.bloombox.schema.security.AuthTokenOrBuilder>(
                getToken(),
                getParentForChildren(),
                isClean());
        token_ = null;
      }
      return tokenBuilder_;
    }

    private io.opencannabis.schema.device.Device device_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.device.Device, io.opencannabis.schema.device.Device.Builder, io.opencannabis.schema.device.DeviceOrBuilder> deviceBuilder_;
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public boolean hasDevice() {
      return deviceBuilder_ != null || device_ != null;
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public io.opencannabis.schema.device.Device getDevice() {
      if (deviceBuilder_ == null) {
        return device_ == null ? io.opencannabis.schema.device.Device.getDefaultInstance() : device_;
      } else {
        return deviceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public Builder setDevice(io.opencannabis.schema.device.Device value) {
      if (deviceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        device_ = value;
        onChanged();
      } else {
        deviceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public Builder setDevice(
        io.opencannabis.schema.device.Device.Builder builderForValue) {
      if (deviceBuilder_ == null) {
        device_ = builderForValue.build();
        onChanged();
      } else {
        deviceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public Builder mergeDevice(io.opencannabis.schema.device.Device value) {
      if (deviceBuilder_ == null) {
        if (device_ != null) {
          device_ =
            io.opencannabis.schema.device.Device.newBuilder(device_).mergeFrom(value).buildPartial();
        } else {
          device_ = value;
        }
        onChanged();
      } else {
        deviceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public Builder clearDevice() {
      if (deviceBuilder_ == null) {
        device_ = null;
        onChanged();
      } else {
        device_ = null;
        deviceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public io.opencannabis.schema.device.Device.Builder getDeviceBuilder() {
      
      onChanged();
      return getDeviceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    public io.opencannabis.schema.device.DeviceOrBuilder getDeviceOrBuilder() {
      if (deviceBuilder_ != null) {
        return deviceBuilder_.getMessageOrBuilder();
      } else {
        return device_ == null ?
            io.opencannabis.schema.device.Device.getDefaultInstance() : device_;
      }
    }
    /**
     * <pre>
     * Information passed from the server to this device, including credentials, stateful flags, and so on.
     * </pre>
     *
     * <code>.opencannabis.device.Device device = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.device.Device, io.opencannabis.schema.device.Device.Builder, io.opencannabis.schema.device.DeviceOrBuilder> 
        getDeviceFieldBuilder() {
      if (deviceBuilder_ == null) {
        deviceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.device.Device, io.opencannabis.schema.device.Device.Builder, io.opencannabis.schema.device.DeviceOrBuilder>(
                getDevice(),
                getParentForChildren(),
                isClean());
        device_ = null;
      }
      return deviceBuilder_;
    }

    private io.opencannabis.schema.temporal.TemporalInstant.Instant issued_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> issuedBuilder_;
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public boolean hasIssued() {
      return issuedBuilder_ != null || issued_ != null;
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getIssued() {
      if (issuedBuilder_ == null) {
        return issued_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : issued_;
      } else {
        return issuedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public Builder setIssued(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (issuedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        issued_ = value;
        onChanged();
      } else {
        issuedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public Builder setIssued(
        io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
      if (issuedBuilder_ == null) {
        issued_ = builderForValue.build();
        onChanged();
      } else {
        issuedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public Builder mergeIssued(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (issuedBuilder_ == null) {
        if (issued_ != null) {
          issued_ =
            io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(issued_).mergeFrom(value).buildPartial();
        } else {
          issued_ = value;
        }
        onChanged();
      } else {
        issuedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public Builder clearIssued() {
      if (issuedBuilder_ == null) {
        issued_ = null;
        onChanged();
      } else {
        issued_ = null;
        issuedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getIssuedBuilder() {
      
      onChanged();
      return getIssuedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getIssuedOrBuilder() {
      if (issuedBuilder_ != null) {
        return issuedBuilder_.getMessageOrBuilder();
      } else {
        return issued_ == null ?
            io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : issued_;
      }
    }
    /**
     * <pre>
     * Issuance timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant issued = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
        getIssuedFieldBuilder() {
      if (issuedBuilder_ == null) {
        issuedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                getIssued(),
                getParentForChildren(),
                isClean());
        issued_ = null;
      }
      return issuedBuilder_;
    }

    private io.opencannabis.schema.temporal.TemporalInstant.Instant expires_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> expiresBuilder_;
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public boolean hasExpires() {
      return expiresBuilder_ != null || expires_ != null;
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getExpires() {
      if (expiresBuilder_ == null) {
        return expires_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : expires_;
      } else {
        return expiresBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public Builder setExpires(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (expiresBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expires_ = value;
        onChanged();
      } else {
        expiresBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public Builder setExpires(
        io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
      if (expiresBuilder_ == null) {
        expires_ = builderForValue.build();
        onChanged();
      } else {
        expiresBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public Builder mergeExpires(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
      if (expiresBuilder_ == null) {
        if (expires_ != null) {
          expires_ =
            io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(expires_).mergeFrom(value).buildPartial();
        } else {
          expires_ = value;
        }
        onChanged();
      } else {
        expiresBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public Builder clearExpires() {
      if (expiresBuilder_ == null) {
        expires_ = null;
        onChanged();
      } else {
        expires_ = null;
        expiresBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getExpiresBuilder() {
      
      onChanged();
      return getExpiresFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getExpiresOrBuilder() {
      if (expiresBuilder_ != null) {
        return expiresBuilder_.getMessageOrBuilder();
      } else {
        return expires_ == null ?
            io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : expires_;
      }
    }
    /**
     * <pre>
     * Expiry timestamp for this device token.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant expires = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
        getExpiresFieldBuilder() {
      if (expiresBuilder_ == null) {
        expiresBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                getExpires(),
                getParentForChildren(),
                isClean());
        expires_ = null;
      }
      return expiresBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bloombox.schema.security.DeviceToken)
  }

  // @@protoc_insertion_point(class_scope:bloombox.schema.security.DeviceToken)
  private static final io.bloombox.schema.security.DeviceToken DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.security.DeviceToken();
  }

  public static io.bloombox.schema.security.DeviceToken getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DeviceToken>
      PARSER = new com.google.protobuf.AbstractParser<DeviceToken>() {
    public DeviceToken parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DeviceToken(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DeviceToken> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DeviceToken> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.security.DeviceToken getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

