// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: marketing/Targeting.proto

package io.bloombox.schema.marketing;

/**
 * <pre>
 * Targeting policy block, that binds a targeting configuration to a campaign.
 * </pre>
 *
 * Protobuf type {@code bloombox.schema.marketing.TargetingPolicy}
 */
public  final class TargetingPolicy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bloombox.schema.marketing.TargetingPolicy)
    TargetingPolicyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TargetingPolicy.newBuilder() to construct.
  private TargetingPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TargetingPolicy() {
    enabled_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TargetingPolicy(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            enabled_ = input.readBool();
            break;
          }
          case 18: {
            io.bloombox.schema.marketing.AgeTargeting.Builder subBuilder = null;
            if (policyCase_ == 2) {
              subBuilder = ((io.bloombox.schema.marketing.AgeTargeting) policy_).toBuilder();
            }
            policy_ =
                input.readMessage(io.bloombox.schema.marketing.AgeTargeting.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.bloombox.schema.marketing.AgeTargeting) policy_);
              policy_ = subBuilder.buildPartial();
            }
            policyCase_ = 2;
            break;
          }
          case 26: {
            io.bloombox.schema.marketing.GenderTargeting.Builder subBuilder = null;
            if (policyCase_ == 3) {
              subBuilder = ((io.bloombox.schema.marketing.GenderTargeting) policy_).toBuilder();
            }
            policy_ =
                input.readMessage(io.bloombox.schema.marketing.GenderTargeting.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.bloombox.schema.marketing.GenderTargeting) policy_);
              policy_ = subBuilder.buildPartial();
            }
            policyCase_ = 3;
            break;
          }
          case 34: {
            io.bloombox.schema.marketing.PreferenceTargeting.Builder subBuilder = null;
            if (policyCase_ == 4) {
              subBuilder = ((io.bloombox.schema.marketing.PreferenceTargeting) policy_).toBuilder();
            }
            policy_ =
                input.readMessage(io.bloombox.schema.marketing.PreferenceTargeting.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.bloombox.schema.marketing.PreferenceTargeting) policy_);
              policy_ = subBuilder.buildPartial();
            }
            policyCase_ = 4;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.marketing.Targeting.internal_static_bloombox_schema_marketing_TargetingPolicy_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.marketing.Targeting.internal_static_bloombox_schema_marketing_TargetingPolicy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.marketing.TargetingPolicy.class, io.bloombox.schema.marketing.TargetingPolicy.Builder.class);
  }

  private int policyCase_ = 0;
  private java.lang.Object policy_;
  public enum PolicyCase
      implements com.google.protobuf.Internal.EnumLite {
    AGE(2),
    GENDER(3),
    PREFERENCES(4),
    POLICY_NOT_SET(0);
    private final int value;
    private PolicyCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PolicyCase valueOf(int value) {
      return forNumber(value);
    }

    public static PolicyCase forNumber(int value) {
      switch (value) {
        case 2: return AGE;
        case 3: return GENDER;
        case 4: return PREFERENCES;
        case 0: return POLICY_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public PolicyCase
  getPolicyCase() {
    return PolicyCase.forNumber(
        policyCase_);
  }

  public static final int ENABLED_FIELD_NUMBER = 1;
  private boolean enabled_;
  /**
   * <pre>
   * Whether this policy is enabled or not.
   * </pre>
   *
   * <code>bool enabled = 1;</code>
   */
  public boolean getEnabled() {
    return enabled_;
  }

  public static final int AGE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Age-based user targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
   */
  public boolean hasAge() {
    return policyCase_ == 2;
  }
  /**
   * <pre>
   * Age-based user targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
   */
  public io.bloombox.schema.marketing.AgeTargeting getAge() {
    if (policyCase_ == 2) {
       return (io.bloombox.schema.marketing.AgeTargeting) policy_;
    }
    return io.bloombox.schema.marketing.AgeTargeting.getDefaultInstance();
  }
  /**
   * <pre>
   * Age-based user targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
   */
  public io.bloombox.schema.marketing.AgeTargetingOrBuilder getAgeOrBuilder() {
    if (policyCase_ == 2) {
       return (io.bloombox.schema.marketing.AgeTargeting) policy_;
    }
    return io.bloombox.schema.marketing.AgeTargeting.getDefaultInstance();
  }

  public static final int GENDER_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Gender-based user targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
   */
  public boolean hasGender() {
    return policyCase_ == 3;
  }
  /**
   * <pre>
   * Gender-based user targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
   */
  public io.bloombox.schema.marketing.GenderTargeting getGender() {
    if (policyCase_ == 3) {
       return (io.bloombox.schema.marketing.GenderTargeting) policy_;
    }
    return io.bloombox.schema.marketing.GenderTargeting.getDefaultInstance();
  }
  /**
   * <pre>
   * Gender-based user targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
   */
  public io.bloombox.schema.marketing.GenderTargetingOrBuilder getGenderOrBuilder() {
    if (policyCase_ == 3) {
       return (io.bloombox.schema.marketing.GenderTargeting) policy_;
    }
    return io.bloombox.schema.marketing.GenderTargeting.getDefaultInstance();
  }

  public static final int PREFERENCES_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Menu-preference-based targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
   */
  public boolean hasPreferences() {
    return policyCase_ == 4;
  }
  /**
   * <pre>
   * Menu-preference-based targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
   */
  public io.bloombox.schema.marketing.PreferenceTargeting getPreferences() {
    if (policyCase_ == 4) {
       return (io.bloombox.schema.marketing.PreferenceTargeting) policy_;
    }
    return io.bloombox.schema.marketing.PreferenceTargeting.getDefaultInstance();
  }
  /**
   * <pre>
   * Menu-preference-based targeting.
   * </pre>
   *
   * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
   */
  public io.bloombox.schema.marketing.PreferenceTargetingOrBuilder getPreferencesOrBuilder() {
    if (policyCase_ == 4) {
       return (io.bloombox.schema.marketing.PreferenceTargeting) policy_;
    }
    return io.bloombox.schema.marketing.PreferenceTargeting.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (enabled_ != false) {
      output.writeBool(1, enabled_);
    }
    if (policyCase_ == 2) {
      output.writeMessage(2, (io.bloombox.schema.marketing.AgeTargeting) policy_);
    }
    if (policyCase_ == 3) {
      output.writeMessage(3, (io.bloombox.schema.marketing.GenderTargeting) policy_);
    }
    if (policyCase_ == 4) {
      output.writeMessage(4, (io.bloombox.schema.marketing.PreferenceTargeting) policy_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (enabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, enabled_);
    }
    if (policyCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (io.bloombox.schema.marketing.AgeTargeting) policy_);
    }
    if (policyCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (io.bloombox.schema.marketing.GenderTargeting) policy_);
    }
    if (policyCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (io.bloombox.schema.marketing.PreferenceTargeting) policy_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.marketing.TargetingPolicy)) {
      return super.equals(obj);
    }
    io.bloombox.schema.marketing.TargetingPolicy other = (io.bloombox.schema.marketing.TargetingPolicy) obj;

    boolean result = true;
    result = result && (getEnabled()
        == other.getEnabled());
    result = result && getPolicyCase().equals(
        other.getPolicyCase());
    if (!result) return false;
    switch (policyCase_) {
      case 2:
        result = result && getAge()
            .equals(other.getAge());
        break;
      case 3:
        result = result && getGender()
            .equals(other.getGender());
        break;
      case 4:
        result = result && getPreferences()
            .equals(other.getPreferences());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnabled());
    switch (policyCase_) {
      case 2:
        hash = (37 * hash) + AGE_FIELD_NUMBER;
        hash = (53 * hash) + getAge().hashCode();
        break;
      case 3:
        hash = (37 * hash) + GENDER_FIELD_NUMBER;
        hash = (53 * hash) + getGender().hashCode();
        break;
      case 4:
        hash = (37 * hash) + PREFERENCES_FIELD_NUMBER;
        hash = (53 * hash) + getPreferences().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.marketing.TargetingPolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.marketing.TargetingPolicy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Targeting policy block, that binds a targeting configuration to a campaign.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.marketing.TargetingPolicy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bloombox.schema.marketing.TargetingPolicy)
      io.bloombox.schema.marketing.TargetingPolicyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.marketing.Targeting.internal_static_bloombox_schema_marketing_TargetingPolicy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.marketing.Targeting.internal_static_bloombox_schema_marketing_TargetingPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.marketing.TargetingPolicy.class, io.bloombox.schema.marketing.TargetingPolicy.Builder.class);
    }

    // Construct using io.bloombox.schema.marketing.TargetingPolicy.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      enabled_ = false;

      policyCase_ = 0;
      policy_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.marketing.Targeting.internal_static_bloombox_schema_marketing_TargetingPolicy_descriptor;
    }

    public io.bloombox.schema.marketing.TargetingPolicy getDefaultInstanceForType() {
      return io.bloombox.schema.marketing.TargetingPolicy.getDefaultInstance();
    }

    public io.bloombox.schema.marketing.TargetingPolicy build() {
      io.bloombox.schema.marketing.TargetingPolicy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.marketing.TargetingPolicy buildPartial() {
      io.bloombox.schema.marketing.TargetingPolicy result = new io.bloombox.schema.marketing.TargetingPolicy(this);
      result.enabled_ = enabled_;
      if (policyCase_ == 2) {
        if (ageBuilder_ == null) {
          result.policy_ = policy_;
        } else {
          result.policy_ = ageBuilder_.build();
        }
      }
      if (policyCase_ == 3) {
        if (genderBuilder_ == null) {
          result.policy_ = policy_;
        } else {
          result.policy_ = genderBuilder_.build();
        }
      }
      if (policyCase_ == 4) {
        if (preferencesBuilder_ == null) {
          result.policy_ = policy_;
        } else {
          result.policy_ = preferencesBuilder_.build();
        }
      }
      result.policyCase_ = policyCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.marketing.TargetingPolicy) {
        return mergeFrom((io.bloombox.schema.marketing.TargetingPolicy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.marketing.TargetingPolicy other) {
      if (other == io.bloombox.schema.marketing.TargetingPolicy.getDefaultInstance()) return this;
      if (other.getEnabled() != false) {
        setEnabled(other.getEnabled());
      }
      switch (other.getPolicyCase()) {
        case AGE: {
          mergeAge(other.getAge());
          break;
        }
        case GENDER: {
          mergeGender(other.getGender());
          break;
        }
        case PREFERENCES: {
          mergePreferences(other.getPreferences());
          break;
        }
        case POLICY_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.marketing.TargetingPolicy parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.marketing.TargetingPolicy) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int policyCase_ = 0;
    private java.lang.Object policy_;
    public PolicyCase
        getPolicyCase() {
      return PolicyCase.forNumber(
          policyCase_);
    }

    public Builder clearPolicy() {
      policyCase_ = 0;
      policy_ = null;
      onChanged();
      return this;
    }


    private boolean enabled_ ;
    /**
     * <pre>
     * Whether this policy is enabled or not.
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     */
    public boolean getEnabled() {
      return enabled_;
    }
    /**
     * <pre>
     * Whether this policy is enabled or not.
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     */
    public Builder setEnabled(boolean value) {
      
      enabled_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether this policy is enabled or not.
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     */
    public Builder clearEnabled() {
      
      enabled_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.marketing.AgeTargeting, io.bloombox.schema.marketing.AgeTargeting.Builder, io.bloombox.schema.marketing.AgeTargetingOrBuilder> ageBuilder_;
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    public boolean hasAge() {
      return policyCase_ == 2;
    }
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    public io.bloombox.schema.marketing.AgeTargeting getAge() {
      if (ageBuilder_ == null) {
        if (policyCase_ == 2) {
          return (io.bloombox.schema.marketing.AgeTargeting) policy_;
        }
        return io.bloombox.schema.marketing.AgeTargeting.getDefaultInstance();
      } else {
        if (policyCase_ == 2) {
          return ageBuilder_.getMessage();
        }
        return io.bloombox.schema.marketing.AgeTargeting.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    public Builder setAge(io.bloombox.schema.marketing.AgeTargeting value) {
      if (ageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        policy_ = value;
        onChanged();
      } else {
        ageBuilder_.setMessage(value);
      }
      policyCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    public Builder setAge(
        io.bloombox.schema.marketing.AgeTargeting.Builder builderForValue) {
      if (ageBuilder_ == null) {
        policy_ = builderForValue.build();
        onChanged();
      } else {
        ageBuilder_.setMessage(builderForValue.build());
      }
      policyCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    public Builder mergeAge(io.bloombox.schema.marketing.AgeTargeting value) {
      if (ageBuilder_ == null) {
        if (policyCase_ == 2 &&
            policy_ != io.bloombox.schema.marketing.AgeTargeting.getDefaultInstance()) {
          policy_ = io.bloombox.schema.marketing.AgeTargeting.newBuilder((io.bloombox.schema.marketing.AgeTargeting) policy_)
              .mergeFrom(value).buildPartial();
        } else {
          policy_ = value;
        }
        onChanged();
      } else {
        if (policyCase_ == 2) {
          ageBuilder_.mergeFrom(value);
        }
        ageBuilder_.setMessage(value);
      }
      policyCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    public Builder clearAge() {
      if (ageBuilder_ == null) {
        if (policyCase_ == 2) {
          policyCase_ = 0;
          policy_ = null;
          onChanged();
        }
      } else {
        if (policyCase_ == 2) {
          policyCase_ = 0;
          policy_ = null;
        }
        ageBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    public io.bloombox.schema.marketing.AgeTargeting.Builder getAgeBuilder() {
      return getAgeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    public io.bloombox.schema.marketing.AgeTargetingOrBuilder getAgeOrBuilder() {
      if ((policyCase_ == 2) && (ageBuilder_ != null)) {
        return ageBuilder_.getMessageOrBuilder();
      } else {
        if (policyCase_ == 2) {
          return (io.bloombox.schema.marketing.AgeTargeting) policy_;
        }
        return io.bloombox.schema.marketing.AgeTargeting.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Age-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.AgeTargeting age = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.marketing.AgeTargeting, io.bloombox.schema.marketing.AgeTargeting.Builder, io.bloombox.schema.marketing.AgeTargetingOrBuilder> 
        getAgeFieldBuilder() {
      if (ageBuilder_ == null) {
        if (!(policyCase_ == 2)) {
          policy_ = io.bloombox.schema.marketing.AgeTargeting.getDefaultInstance();
        }
        ageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.marketing.AgeTargeting, io.bloombox.schema.marketing.AgeTargeting.Builder, io.bloombox.schema.marketing.AgeTargetingOrBuilder>(
                (io.bloombox.schema.marketing.AgeTargeting) policy_,
                getParentForChildren(),
                isClean());
        policy_ = null;
      }
      policyCase_ = 2;
      onChanged();;
      return ageBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.marketing.GenderTargeting, io.bloombox.schema.marketing.GenderTargeting.Builder, io.bloombox.schema.marketing.GenderTargetingOrBuilder> genderBuilder_;
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    public boolean hasGender() {
      return policyCase_ == 3;
    }
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    public io.bloombox.schema.marketing.GenderTargeting getGender() {
      if (genderBuilder_ == null) {
        if (policyCase_ == 3) {
          return (io.bloombox.schema.marketing.GenderTargeting) policy_;
        }
        return io.bloombox.schema.marketing.GenderTargeting.getDefaultInstance();
      } else {
        if (policyCase_ == 3) {
          return genderBuilder_.getMessage();
        }
        return io.bloombox.schema.marketing.GenderTargeting.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    public Builder setGender(io.bloombox.schema.marketing.GenderTargeting value) {
      if (genderBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        policy_ = value;
        onChanged();
      } else {
        genderBuilder_.setMessage(value);
      }
      policyCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    public Builder setGender(
        io.bloombox.schema.marketing.GenderTargeting.Builder builderForValue) {
      if (genderBuilder_ == null) {
        policy_ = builderForValue.build();
        onChanged();
      } else {
        genderBuilder_.setMessage(builderForValue.build());
      }
      policyCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    public Builder mergeGender(io.bloombox.schema.marketing.GenderTargeting value) {
      if (genderBuilder_ == null) {
        if (policyCase_ == 3 &&
            policy_ != io.bloombox.schema.marketing.GenderTargeting.getDefaultInstance()) {
          policy_ = io.bloombox.schema.marketing.GenderTargeting.newBuilder((io.bloombox.schema.marketing.GenderTargeting) policy_)
              .mergeFrom(value).buildPartial();
        } else {
          policy_ = value;
        }
        onChanged();
      } else {
        if (policyCase_ == 3) {
          genderBuilder_.mergeFrom(value);
        }
        genderBuilder_.setMessage(value);
      }
      policyCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    public Builder clearGender() {
      if (genderBuilder_ == null) {
        if (policyCase_ == 3) {
          policyCase_ = 0;
          policy_ = null;
          onChanged();
        }
      } else {
        if (policyCase_ == 3) {
          policyCase_ = 0;
          policy_ = null;
        }
        genderBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    public io.bloombox.schema.marketing.GenderTargeting.Builder getGenderBuilder() {
      return getGenderFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    public io.bloombox.schema.marketing.GenderTargetingOrBuilder getGenderOrBuilder() {
      if ((policyCase_ == 3) && (genderBuilder_ != null)) {
        return genderBuilder_.getMessageOrBuilder();
      } else {
        if (policyCase_ == 3) {
          return (io.bloombox.schema.marketing.GenderTargeting) policy_;
        }
        return io.bloombox.schema.marketing.GenderTargeting.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Gender-based user targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.GenderTargeting gender = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.marketing.GenderTargeting, io.bloombox.schema.marketing.GenderTargeting.Builder, io.bloombox.schema.marketing.GenderTargetingOrBuilder> 
        getGenderFieldBuilder() {
      if (genderBuilder_ == null) {
        if (!(policyCase_ == 3)) {
          policy_ = io.bloombox.schema.marketing.GenderTargeting.getDefaultInstance();
        }
        genderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.marketing.GenderTargeting, io.bloombox.schema.marketing.GenderTargeting.Builder, io.bloombox.schema.marketing.GenderTargetingOrBuilder>(
                (io.bloombox.schema.marketing.GenderTargeting) policy_,
                getParentForChildren(),
                isClean());
        policy_ = null;
      }
      policyCase_ = 3;
      onChanged();;
      return genderBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.marketing.PreferenceTargeting, io.bloombox.schema.marketing.PreferenceTargeting.Builder, io.bloombox.schema.marketing.PreferenceTargetingOrBuilder> preferencesBuilder_;
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    public boolean hasPreferences() {
      return policyCase_ == 4;
    }
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    public io.bloombox.schema.marketing.PreferenceTargeting getPreferences() {
      if (preferencesBuilder_ == null) {
        if (policyCase_ == 4) {
          return (io.bloombox.schema.marketing.PreferenceTargeting) policy_;
        }
        return io.bloombox.schema.marketing.PreferenceTargeting.getDefaultInstance();
      } else {
        if (policyCase_ == 4) {
          return preferencesBuilder_.getMessage();
        }
        return io.bloombox.schema.marketing.PreferenceTargeting.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    public Builder setPreferences(io.bloombox.schema.marketing.PreferenceTargeting value) {
      if (preferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        policy_ = value;
        onChanged();
      } else {
        preferencesBuilder_.setMessage(value);
      }
      policyCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    public Builder setPreferences(
        io.bloombox.schema.marketing.PreferenceTargeting.Builder builderForValue) {
      if (preferencesBuilder_ == null) {
        policy_ = builderForValue.build();
        onChanged();
      } else {
        preferencesBuilder_.setMessage(builderForValue.build());
      }
      policyCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    public Builder mergePreferences(io.bloombox.schema.marketing.PreferenceTargeting value) {
      if (preferencesBuilder_ == null) {
        if (policyCase_ == 4 &&
            policy_ != io.bloombox.schema.marketing.PreferenceTargeting.getDefaultInstance()) {
          policy_ = io.bloombox.schema.marketing.PreferenceTargeting.newBuilder((io.bloombox.schema.marketing.PreferenceTargeting) policy_)
              .mergeFrom(value).buildPartial();
        } else {
          policy_ = value;
        }
        onChanged();
      } else {
        if (policyCase_ == 4) {
          preferencesBuilder_.mergeFrom(value);
        }
        preferencesBuilder_.setMessage(value);
      }
      policyCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    public Builder clearPreferences() {
      if (preferencesBuilder_ == null) {
        if (policyCase_ == 4) {
          policyCase_ = 0;
          policy_ = null;
          onChanged();
        }
      } else {
        if (policyCase_ == 4) {
          policyCase_ = 0;
          policy_ = null;
        }
        preferencesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    public io.bloombox.schema.marketing.PreferenceTargeting.Builder getPreferencesBuilder() {
      return getPreferencesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    public io.bloombox.schema.marketing.PreferenceTargetingOrBuilder getPreferencesOrBuilder() {
      if ((policyCase_ == 4) && (preferencesBuilder_ != null)) {
        return preferencesBuilder_.getMessageOrBuilder();
      } else {
        if (policyCase_ == 4) {
          return (io.bloombox.schema.marketing.PreferenceTargeting) policy_;
        }
        return io.bloombox.schema.marketing.PreferenceTargeting.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Menu-preference-based targeting.
     * </pre>
     *
     * <code>.bloombox.schema.marketing.PreferenceTargeting preferences = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.marketing.PreferenceTargeting, io.bloombox.schema.marketing.PreferenceTargeting.Builder, io.bloombox.schema.marketing.PreferenceTargetingOrBuilder> 
        getPreferencesFieldBuilder() {
      if (preferencesBuilder_ == null) {
        if (!(policyCase_ == 4)) {
          policy_ = io.bloombox.schema.marketing.PreferenceTargeting.getDefaultInstance();
        }
        preferencesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.marketing.PreferenceTargeting, io.bloombox.schema.marketing.PreferenceTargeting.Builder, io.bloombox.schema.marketing.PreferenceTargetingOrBuilder>(
                (io.bloombox.schema.marketing.PreferenceTargeting) policy_,
                getParentForChildren(),
                isClean());
        policy_ = null;
      }
      policyCase_ = 4;
      onChanged();;
      return preferencesBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bloombox.schema.marketing.TargetingPolicy)
  }

  // @@protoc_insertion_point(class_scope:bloombox.schema.marketing.TargetingPolicy)
  private static final io.bloombox.schema.marketing.TargetingPolicy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.marketing.TargetingPolicy();
  }

  public static io.bloombox.schema.marketing.TargetingPolicy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TargetingPolicy>
      PARSER = new com.google.protobuf.AbstractParser<TargetingPolicy>() {
    public TargetingPolicy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TargetingPolicy(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TargetingPolicy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TargetingPolicy> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.marketing.TargetingPolicy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

