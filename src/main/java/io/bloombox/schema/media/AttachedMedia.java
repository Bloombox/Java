/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: media/MediaItem.proto

package io.bloombox.schema.media;

public final class AttachedMedia {
  private AttachedMedia() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_media_MediaItem_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_media_MediaItem_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025media/MediaItem.proto\022\005media\032\016bq_field" +
      ".proto\032\024media/MediaKey.proto\032\025media/Medi" +
      "aType.proto\"\372\001\n\tMediaItem\022J\n\003key\030\001 \001(\0132\017" +
      ".media.MediaKeyB,\212@)Key uniquely identif" +
      "ying this media item.\022D\n\004type\030\002 \001(\0132\020.me" +
      "dia.MediaTypeB$\212@!Type of media this is " +
      "describing.\022.\n\004name\030\003 \001(\tB \212@\035Friendly n" +
      "ame for this media.\022+\n\003uri\030\004 \001(\tB\036\212@\033Abs" +
      "olute URI to this media.B0\n\030io.bloombox." +
      "schema.mediaB\rAttachedMediaH\001P\001\370\001\001b\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gen_bq_schema.BqField.getDescriptor(),
          io.bloombox.schema.media.MediaItemKey.getDescriptor(),
          io.bloombox.schema.media.MediaItemType.getDescriptor(),
        }, assigner);
    internal_static_media_MediaItem_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_media_MediaItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_media_MediaItem_descriptor,
        new java.lang.String[] { "Key", "Type", "Name", "Uri", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    gen_bq_schema.BqField.getDescriptor();
    io.bloombox.schema.media.MediaItemKey.getDescriptor();
    io.bloombox.schema.media.MediaItemType.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
