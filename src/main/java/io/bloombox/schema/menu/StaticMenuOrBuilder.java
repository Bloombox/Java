/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: products/menu/Menu.proto

package io.bloombox.schema.menu;

public interface StaticMenuOrBuilder extends
    // @@protoc_insertion_point(interface_extends:products.menu.StaticMenu)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies APOTHECARY products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Apothecary&gt; apothecary = 1;</code>
   */
  int getApothecaryCount();
  /**
   * <pre>
   * Specifies APOTHECARY products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Apothecary&gt; apothecary = 1;</code>
   */
  boolean containsApothecary(
      java.lang.String key);
  /**
   * Use {@link #getApothecaryMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.product.ApothecaryProduct.Apothecary>
  getApothecary();
  /**
   * <pre>
   * Specifies APOTHECARY products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Apothecary&gt; apothecary = 1;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.product.ApothecaryProduct.Apothecary>
  getApothecaryMap();
  /**
   * <pre>
   * Specifies APOTHECARY products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Apothecary&gt; apothecary = 1;</code>
   */

  io.bloombox.schema.product.ApothecaryProduct.Apothecary getApothecaryOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.ApothecaryProduct.Apothecary defaultValue);
  /**
   * <pre>
   * Specifies APOTHECARY products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Apothecary&gt; apothecary = 1;</code>
   */

  io.bloombox.schema.product.ApothecaryProduct.Apothecary getApothecaryOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Specifies CARTRIDGE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Cartridge&gt; cartridges = 2;</code>
   */
  int getCartridgesCount();
  /**
   * <pre>
   * Specifies CARTRIDGE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Cartridge&gt; cartridges = 2;</code>
   */
  boolean containsCartridges(
      java.lang.String key);
  /**
   * Use {@link #getCartridgesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.product.CartridgeProduct.Cartridge>
  getCartridges();
  /**
   * <pre>
   * Specifies CARTRIDGE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Cartridge&gt; cartridges = 2;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.product.CartridgeProduct.Cartridge>
  getCartridgesMap();
  /**
   * <pre>
   * Specifies CARTRIDGE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Cartridge&gt; cartridges = 2;</code>
   */

  io.bloombox.schema.product.CartridgeProduct.Cartridge getCartridgesOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.CartridgeProduct.Cartridge defaultValue);
  /**
   * <pre>
   * Specifies CARTRIDGE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Cartridge&gt; cartridges = 2;</code>
   */

  io.bloombox.schema.product.CartridgeProduct.Cartridge getCartridgesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Specifies EDIBLE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Edible&gt; edibles = 3;</code>
   */
  int getEdiblesCount();
  /**
   * <pre>
   * Specifies EDIBLE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Edible&gt; edibles = 3;</code>
   */
  boolean containsEdibles(
      java.lang.String key);
  /**
   * Use {@link #getEdiblesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.product.EdibleProduct.Edible>
  getEdibles();
  /**
   * <pre>
   * Specifies EDIBLE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Edible&gt; edibles = 3;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.product.EdibleProduct.Edible>
  getEdiblesMap();
  /**
   * <pre>
   * Specifies EDIBLE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Edible&gt; edibles = 3;</code>
   */

  io.bloombox.schema.product.EdibleProduct.Edible getEdiblesOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.EdibleProduct.Edible defaultValue);
  /**
   * <pre>
   * Specifies EDIBLE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Edible&gt; edibles = 3;</code>
   */

  io.bloombox.schema.product.EdibleProduct.Edible getEdiblesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Specifies EXTRACT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Extract&gt; extracts = 4;</code>
   */
  int getExtractsCount();
  /**
   * <pre>
   * Specifies EXTRACT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Extract&gt; extracts = 4;</code>
   */
  boolean containsExtracts(
      java.lang.String key);
  /**
   * Use {@link #getExtractsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.product.ExtractProduct.Extract>
  getExtracts();
  /**
   * <pre>
   * Specifies EXTRACT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Extract&gt; extracts = 4;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.product.ExtractProduct.Extract>
  getExtractsMap();
  /**
   * <pre>
   * Specifies EXTRACT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Extract&gt; extracts = 4;</code>
   */

  io.bloombox.schema.product.ExtractProduct.Extract getExtractsOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.ExtractProduct.Extract defaultValue);
  /**
   * <pre>
   * Specifies EXTRACT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Extract&gt; extracts = 4;</code>
   */

  io.bloombox.schema.product.ExtractProduct.Extract getExtractsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Specifies FLOWER products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Flower&gt; flowers = 5;</code>
   */
  int getFlowersCount();
  /**
   * <pre>
   * Specifies FLOWER products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Flower&gt; flowers = 5;</code>
   */
  boolean containsFlowers(
      java.lang.String key);
  /**
   * Use {@link #getFlowersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.product.FlowerProduct.Flower>
  getFlowers();
  /**
   * <pre>
   * Specifies FLOWER products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Flower&gt; flowers = 5;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.product.FlowerProduct.Flower>
  getFlowersMap();
  /**
   * <pre>
   * Specifies FLOWER products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Flower&gt; flowers = 5;</code>
   */

  io.bloombox.schema.product.FlowerProduct.Flower getFlowersOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.FlowerProduct.Flower defaultValue);
  /**
   * <pre>
   * Specifies FLOWER products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Flower&gt; flowers = 5;</code>
   */

  io.bloombox.schema.product.FlowerProduct.Flower getFlowersOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Specifies MERCHANDISE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Merchandise&gt; merchandise = 6;</code>
   */
  int getMerchandiseCount();
  /**
   * <pre>
   * Specifies MERCHANDISE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Merchandise&gt; merchandise = 6;</code>
   */
  boolean containsMerchandise(
      java.lang.String key);
  /**
   * Use {@link #getMerchandiseMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.product.MerchandiseProduct.Merchandise>
  getMerchandise();
  /**
   * <pre>
   * Specifies MERCHANDISE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Merchandise&gt; merchandise = 6;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.product.MerchandiseProduct.Merchandise>
  getMerchandiseMap();
  /**
   * <pre>
   * Specifies MERCHANDISE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Merchandise&gt; merchandise = 6;</code>
   */

  io.bloombox.schema.product.MerchandiseProduct.Merchandise getMerchandiseOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.MerchandiseProduct.Merchandise defaultValue);
  /**
   * <pre>
   * Specifies MERCHANDISE products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Merchandise&gt; merchandise = 6;</code>
   */

  io.bloombox.schema.product.MerchandiseProduct.Merchandise getMerchandiseOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Specifies PLANT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Plant&gt; plants = 7;</code>
   */
  int getPlantsCount();
  /**
   * <pre>
   * Specifies PLANT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Plant&gt; plants = 7;</code>
   */
  boolean containsPlants(
      java.lang.String key);
  /**
   * Use {@link #getPlantsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.product.PlantProduct.Plant>
  getPlants();
  /**
   * <pre>
   * Specifies PLANT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Plant&gt; plants = 7;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.product.PlantProduct.Plant>
  getPlantsMap();
  /**
   * <pre>
   * Specifies PLANT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Plant&gt; plants = 7;</code>
   */

  io.bloombox.schema.product.PlantProduct.Plant getPlantsOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.PlantProduct.Plant defaultValue);
  /**
   * <pre>
   * Specifies PLANT products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Plant&gt; plants = 7;</code>
   */

  io.bloombox.schema.product.PlantProduct.Plant getPlantsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Specifies PREROLL products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Preroll&gt; prerolls = 8;</code>
   */
  int getPrerollsCount();
  /**
   * <pre>
   * Specifies PREROLL products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Preroll&gt; prerolls = 8;</code>
   */
  boolean containsPrerolls(
      java.lang.String key);
  /**
   * Use {@link #getPrerollsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.product.PrerollProduct.Preroll>
  getPrerolls();
  /**
   * <pre>
   * Specifies PREROLL products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Preroll&gt; prerolls = 8;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.product.PrerollProduct.Preroll>
  getPrerollsMap();
  /**
   * <pre>
   * Specifies PREROLL products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Preroll&gt; prerolls = 8;</code>
   */

  io.bloombox.schema.product.PrerollProduct.Preroll getPrerollsOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.PrerollProduct.Preroll defaultValue);
  /**
   * <pre>
   * Specifies PREROLL products attached to this menu.
   * </pre>
   *
   * <code>map&lt;string, .products.Preroll&gt; prerolls = 8;</code>
   */

  io.bloombox.schema.product.PrerollProduct.Preroll getPrerollsOrThrow(
      java.lang.String key);
}
