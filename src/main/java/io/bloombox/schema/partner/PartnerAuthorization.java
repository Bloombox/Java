/*
 * Copyright 2018, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner/PartnerScope.proto

package io.bloombox.schema.partner;

public final class PartnerAuthorization {
  private PartnerAuthorization() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Specifies authentication scopes at the partner level.
   * </pre>
   *
   * Protobuf enum {@code bloombox.partner.PartnerScope}
   */
  public enum PartnerScope
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Basic authentication as a member of a partner. This includes partner staff, managers, owners, and so on.
     * </pre>
     *
     * <code>AUTH = 0;</code>
     */
    AUTH(0),
    /**
     * <pre>
     * Authorizes the sharing of contact information related to a partner account.
     * </pre>
     *
     * <code>CONTACT = 1;</code>
     */
    CONTACT(1),
    /**
     * <pre>
     * Authorizes access to the Dashboard for a given partner account.
     * </pre>
     *
     * <code>DASHBOARD = 2;</code>
     */
    DASHBOARD(2),
    /**
     * <pre>
     * Authorizes access to read menu data for a given partner account.
     * </pre>
     *
     * <code>MENU_DATA_READ = 10;</code>
     */
    MENU_DATA_READ(10),
    /**
     * <pre>
     * Authorizes access to write menu data for a given partner account.
     * </pre>
     *
     * <code>MENU_DATA_WRITE = 20;</code>
     */
    MENU_DATA_WRITE(20),
    /**
     * <pre>
     * Authorizes access to read partner-level settings.
     * </pre>
     *
     * <code>SETTINGS_READ = 50;</code>
     */
    SETTINGS_READ(50),
    /**
     * <pre>
     * Authorizes access to write to partner-level settings.
     * </pre>
     *
     * <code>SETTINGS_WRITE = 51;</code>
     */
    SETTINGS_WRITE(51),
    /**
     * <pre>
     * Specifies complete and total admin access to a given partner account.
     * </pre>
     *
     * <code>ADMIN = 100;</code>
     */
    ADMIN(100),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Basic authentication as a member of a partner. This includes partner staff, managers, owners, and so on.
     * </pre>
     *
     * <code>AUTH = 0;</code>
     */
    public static final int AUTH_VALUE = 0;
    /**
     * <pre>
     * Authorizes the sharing of contact information related to a partner account.
     * </pre>
     *
     * <code>CONTACT = 1;</code>
     */
    public static final int CONTACT_VALUE = 1;
    /**
     * <pre>
     * Authorizes access to the Dashboard for a given partner account.
     * </pre>
     *
     * <code>DASHBOARD = 2;</code>
     */
    public static final int DASHBOARD_VALUE = 2;
    /**
     * <pre>
     * Authorizes access to read menu data for a given partner account.
     * </pre>
     *
     * <code>MENU_DATA_READ = 10;</code>
     */
    public static final int MENU_DATA_READ_VALUE = 10;
    /**
     * <pre>
     * Authorizes access to write menu data for a given partner account.
     * </pre>
     *
     * <code>MENU_DATA_WRITE = 20;</code>
     */
    public static final int MENU_DATA_WRITE_VALUE = 20;
    /**
     * <pre>
     * Authorizes access to read partner-level settings.
     * </pre>
     *
     * <code>SETTINGS_READ = 50;</code>
     */
    public static final int SETTINGS_READ_VALUE = 50;
    /**
     * <pre>
     * Authorizes access to write to partner-level settings.
     * </pre>
     *
     * <code>SETTINGS_WRITE = 51;</code>
     */
    public static final int SETTINGS_WRITE_VALUE = 51;
    /**
     * <pre>
     * Specifies complete and total admin access to a given partner account.
     * </pre>
     *
     * <code>ADMIN = 100;</code>
     */
    public static final int ADMIN_VALUE = 100;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PartnerScope valueOf(int value) {
      return forNumber(value);
    }

    public static PartnerScope forNumber(int value) {
      switch (value) {
        case 0: return AUTH;
        case 1: return CONTACT;
        case 2: return DASHBOARD;
        case 10: return MENU_DATA_READ;
        case 20: return MENU_DATA_WRITE;
        case 50: return SETTINGS_READ;
        case 51: return SETTINGS_WRITE;
        case 100: return ADMIN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PartnerScope>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PartnerScope> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PartnerScope>() {
            public PartnerScope findValueByNumber(int number) {
              return PartnerScope.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.bloombox.schema.partner.PartnerAuthorization.getDescriptor().getEnumTypes().get(0);
    }

    private static final PartnerScope[] VALUES = values();

    public static PartnerScope valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PartnerScope(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:bloombox.partner.PartnerScope)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032partner/PartnerScope.proto\022\020bloombox.p" +
      "artner*\217\001\n\014PartnerScope\022\010\n\004AUTH\020\000\022\013\n\007CON" +
      "TACT\020\001\022\r\n\tDASHBOARD\020\002\022\022\n\016MENU_DATA_READ\020" +
      "\n\022\023\n\017MENU_DATA_WRITE\020\024\022\021\n\rSETTINGS_READ\020" +
      "2\022\022\n\016SETTINGS_WRITE\0203\022\t\n\005ADMIN\020dB<\n\032io.b" +
      "loombox.schema.partnerB\024PartnerAuthoriza" +
      "tionH\001P\000\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
