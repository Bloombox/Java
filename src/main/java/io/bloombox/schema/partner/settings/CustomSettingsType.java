/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner/settings/PartnerLocationSettings.proto

package io.bloombox.schema.partner.settings;

/**
 * <pre>
 * Specifies the type of a custom settings specification payload.
 * </pre>
 *
 * Protobuf enum {@code bloombox.schema.partner.settings.CustomSettingsType}
 */
public enum CustomSettingsType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Specifies custom settings for a filtered menu section.
   * </pre>
   *
   * <code>FILTER = 0;</code>
   */
  FILTER(0),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Specifies custom settings for a filtered menu section.
   * </pre>
   *
   * <code>FILTER = 0;</code>
   */
  public static final int FILTER_VALUE = 0;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CustomSettingsType valueOf(int value) {
    return forNumber(value);
  }

  public static CustomSettingsType forNumber(int value) {
    switch (value) {
      case 0: return FILTER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CustomSettingsType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CustomSettingsType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CustomSettingsType>() {
          public CustomSettingsType findValueByNumber(int number) {
            return CustomSettingsType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.bloombox.schema.partner.settings.PartnerLocationSettingsOuterClass.getDescriptor().getEnumTypes().get(2);
  }

  private static final CustomSettingsType[] VALUES = values();

  public static CustomSettingsType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CustomSettingsType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:bloombox.schema.partner.settings.CustomSettingsType)
}

