/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner/Partner.proto

package io.bloombox.schema.partner;

public interface PartnerFlagsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:partner.PartnerFlags)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies that the subject partner organization is currently suspended, organization wide, and has had access
   * revoked to Bloombox systems.
   * </pre>
   *
   * <code>bool suspended = 1;</code>
   */
  boolean getSuspended();

  /**
   * <pre>
   * Specifies that the subject partner organiztaion is currently in a past-due state, where their organization and
   * related access has been heavily restricted.
   * </pre>
   *
   * <code>bool pastdue = 2;</code>
   */
  boolean getPastdue();

  /**
   * <pre>
   * Specifies that the subject partner organization has access to beta features, clusters, and systems.
   * </pre>
   *
   * <code>bool beta = 3;</code>
   */
  boolean getBeta();

  /**
   * <pre>
   * Specifies that the subject partner organization has internal sandbox access.
   * </pre>
   *
   * <code>bool sandbox = 4;</code>
   */
  boolean getSandbox();

  /**
   * <pre>
   * Specifies that the subject partner organization is a testing account held and managed internally by Bloombox, or
   * by selected partners.
   * </pre>
   *
   * <code>bool internal = 5;</code>
   */
  boolean getInternal();
}
