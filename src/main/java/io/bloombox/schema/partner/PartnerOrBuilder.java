/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner/Partner.proto

package io.bloombox.schema.partner;

public interface PartnerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:partner.Partner)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Short string that uniquely identifies this partner organization.
   * </pre>
   *
   * <code>string code = 1;</code>
   */
  java.lang.String getCode();
  /**
   * <pre>
   * Short string that uniquely identifies this partner organization.
   * </pre>
   *
   * <code>string code = 1;</code>
   */
  com.google.protobuf.ByteString
      getCodeBytes();

  /**
   * <pre>
   * Full human-readable label for this partner organization.
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * Full human-readable label for this partner organization.
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Flags for various things about this partner account.
   * </pre>
   *
   * <code>.partner.PartnerFlags flags = 3;</code>
   */
  boolean hasFlags();
  /**
   * <pre>
   * Flags for various things about this partner account.
   * </pre>
   *
   * <code>.partner.PartnerFlags flags = 3;</code>
   */
  io.bloombox.schema.partner.PartnerFlags getFlags();
  /**
   * <pre>
   * Flags for various things about this partner account.
   * </pre>
   *
   * <code>.partner.PartnerFlags flags = 3;</code>
   */
  io.bloombox.schema.partner.PartnerFlagsOrBuilder getFlagsOrBuilder();

  /**
   * <pre>
   * Legal name of the partner organization.
   * </pre>
   *
   * <code>string legal_name = 4;</code>
   */
  java.lang.String getLegalName();
  /**
   * <pre>
   * Legal name of the partner organization.
   * </pre>
   *
   * <code>string legal_name = 4;</code>
   */
  com.google.protobuf.ByteString
      getLegalNameBytes();

  /**
   * <pre>
   * Contact information for this organization.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 5;</code>
   */
  boolean hasContact();
  /**
   * <pre>
   * Contact information for this organization.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 5;</code>
   */
  io.bloombox.schema.contact.ContactInfo getContact();
  /**
   * <pre>
   * Contact information for this organization.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 5;</code>
   */
  io.bloombox.schema.contact.ContactInfoOrBuilder getContactOrBuilder();

  /**
   * <pre>
   * Branding information for this organization.
   * </pre>
   *
   * <code>.media.MediaItem branding = 6;</code>
   */
  boolean hasBranding();
  /**
   * <pre>
   * Branding information for this organization.
   * </pre>
   *
   * <code>.media.MediaItem branding = 6;</code>
   */
  io.bloombox.schema.media.MediaItem getBranding();
  /**
   * <pre>
   * Branding information for this organization.
   * </pre>
   *
   * <code>.media.MediaItem branding = 6;</code>
   */
  io.bloombox.schema.media.MediaItemOrBuilder getBrandingOrBuilder();

  /**
   * <pre>
   * Channel through which this partner organization interacts with Bloombox.
   * </pre>
   *
   * <code>.partner.PartnerChannel channel = 7;</code>
   */
  int getChannelValue();
  /**
   * <pre>
   * Channel through which this partner organization interacts with Bloombox.
   * </pre>
   *
   * <code>.partner.PartnerChannel channel = 7;</code>
   */
  io.bloombox.schema.partner.PartnerChannel getChannel();

  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.temporal.Instant created = 100;</code>
   */
  boolean hasCreated();
  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.temporal.Instant created = 100;</code>
   */
  io.bloombox.schema.temporal.Instant getCreated();
  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.temporal.Instant created = 100;</code>
   */
  io.bloombox.schema.temporal.InstantOrBuilder getCreatedOrBuilder();

  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.temporal.Instant modified = 101;</code>
   */
  boolean hasModified();
  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.temporal.Instant modified = 101;</code>
   */
  io.bloombox.schema.temporal.Instant getModified();
  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.temporal.Instant modified = 101;</code>
   */
  io.bloombox.schema.temporal.InstantOrBuilder getModifiedOrBuilder();
}
