/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner/PartnerLocation.proto

package io.bloombox.schema.partner;

public interface PartnerLocationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:partner.PartnerLocation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Short, unique string that identifies this location, scoped to the parent organization.
   * </pre>
   *
   * <code>string code = 1;</code>
   */
  java.lang.String getCode();
  /**
   * <pre>
   * Short, unique string that identifies this location, scoped to the parent organization.
   * </pre>
   *
   * <code>string code = 1;</code>
   */
  com.google.protobuf.ByteString
      getCodeBytes();

  /**
   * <pre>
   * Partner record that owns this location.
   * </pre>
   *
   * <code>.partner.Partner partner = 2;</code>
   */
  boolean hasPartner();
  /**
   * <pre>
   * Partner record that owns this location.
   * </pre>
   *
   * <code>.partner.Partner partner = 2;</code>
   */
  io.bloombox.schema.partner.Partner getPartner();
  /**
   * <pre>
   * Partner record that owns this location.
   * </pre>
   *
   * <code>.partner.Partner partner = 2;</code>
   */
  io.bloombox.schema.partner.PartnerOrBuilder getPartnerOrBuilder();

  /**
   * <pre>
   * Name of this location, in human-readable verbose form.
   * </pre>
   *
   * <code>string name = 3;</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of this location, in human-readable verbose form.
   * </pre>
   *
   * <code>string name = 3;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Label for this location in the administrative dashboard. If this is not specified, `name` is shown.
   * </pre>
   *
   * <code>string label = 4;</code>
   */
  java.lang.String getLabel();
  /**
   * <pre>
   * Label for this location in the administrative dashboard. If this is not specified, `name` is shown.
   * </pre>
   *
   * <code>string label = 4;</code>
   */
  com.google.protobuf.ByteString
      getLabelBytes();

  /**
   * <pre>
   * Flags that specify conditions applied to this partner location.
   * </pre>
   *
   * <code>.partner.PartnerFlags flags = 5;</code>
   */
  boolean hasFlags();
  /**
   * <pre>
   * Flags that specify conditions applied to this partner location.
   * </pre>
   *
   * <code>.partner.PartnerFlags flags = 5;</code>
   */
  io.bloombox.schema.partner.PartnerFlags getFlags();
  /**
   * <pre>
   * Flags that specify conditions applied to this partner location.
   * </pre>
   *
   * <code>.partner.PartnerFlags flags = 5;</code>
   */
  io.bloombox.schema.partner.PartnerFlagsOrBuilder getFlagsOrBuilder();

  /**
   * <pre>
   * Contact information for this location.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 7;</code>
   */
  boolean hasContact();
  /**
   * <pre>
   * Contact information for this location.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 7;</code>
   */
  io.bloombox.schema.contact.ContactInfo getContact();
  /**
   * <pre>
   * Contact information for this location.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 7;</code>
   */
  io.bloombox.schema.contact.ContactInfoOrBuilder getContactOrBuilder();

  /**
   * <pre>
   * Branding specific to this location. Partner-level branding is used if this is left unspecified.
   * </pre>
   *
   * <code>.media.MediaItem branding = 6;</code>
   */
  boolean hasBranding();
  /**
   * <pre>
   * Branding specific to this location. Partner-level branding is used if this is left unspecified.
   * </pre>
   *
   * <code>.media.MediaItem branding = 6;</code>
   */
  io.bloombox.schema.media.MediaItem getBranding();
  /**
   * <pre>
   * Branding specific to this location. Partner-level branding is used if this is left unspecified.
   * </pre>
   *
   * <code>.media.MediaItem branding = 6;</code>
   */
  io.bloombox.schema.media.MediaItemOrBuilder getBrandingOrBuilder();

  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.temporal.Instant created = 8;</code>
   */
  boolean hasCreated();
  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.temporal.Instant created = 8;</code>
   */
  io.bloombox.schema.temporal.Instant getCreated();
  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.temporal.Instant created = 8;</code>
   */
  io.bloombox.schema.temporal.InstantOrBuilder getCreatedOrBuilder();

  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.temporal.Instant modified = 9;</code>
   */
  boolean hasModified();
  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.temporal.Instant modified = 9;</code>
   */
  io.bloombox.schema.temporal.Instant getModified();
  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.temporal.Instant modified = 9;</code>
   */
  io.bloombox.schema.temporal.InstantOrBuilder getModifiedOrBuilder();
}
