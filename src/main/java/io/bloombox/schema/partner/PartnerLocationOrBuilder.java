/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner/PartnerLocation.proto

package io.bloombox.schema.partner;

public interface PartnerLocationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bloombox.schema.partner.PartnerLocation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Short, unique string that identifies this location, scoped to the parent organization.
   * </pre>
   *
   * <code>string code = 1 [(.gen_bq_schema.description) = "Short, unique string that identifies this location, scoped to the parent organization."];</code>
   */
  java.lang.String getCode();
  /**
   * <pre>
   * Short, unique string that identifies this location, scoped to the parent organization.
   * </pre>
   *
   * <code>string code = 1 [(.gen_bq_schema.description) = "Short, unique string that identifies this location, scoped to the parent organization."];</code>
   */
  com.google.protobuf.ByteString
      getCodeBytes();

  /**
   * <pre>
   * Partner record that owns this location.
   * </pre>
   *
   * <code>.bloombox.schema.partner.Partner partner = 2 [(.gen_bq_schema.ignore) = true];</code>
   */
  boolean hasPartner();
  /**
   * <pre>
   * Partner record that owns this location.
   * </pre>
   *
   * <code>.bloombox.schema.partner.Partner partner = 2 [(.gen_bq_schema.ignore) = true];</code>
   */
  io.bloombox.schema.partner.Partner getPartner();
  /**
   * <pre>
   * Partner record that owns this location.
   * </pre>
   *
   * <code>.bloombox.schema.partner.Partner partner = 2 [(.gen_bq_schema.ignore) = true];</code>
   */
  io.bloombox.schema.partner.PartnerOrBuilder getPartnerOrBuilder();

  /**
   * <pre>
   * Name of this location, in human-readable verbose form.
   * </pre>
   *
   * <code>string name = 3 [(.gen_bq_schema.description) = "Name of this location, in human-readable verbose form."];</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of this location, in human-readable verbose form.
   * </pre>
   *
   * <code>string name = 3 [(.gen_bq_schema.description) = "Name of this location, in human-readable verbose form."];</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Label for this location in the administrative dashboard. If this is not specified, `name` is shown.
   * </pre>
   *
   * <code>string label = 4 [(.gen_bq_schema.description) = "Label for this location in the administrative dashboard. If this is not specified, `name` is shown."];</code>
   */
  java.lang.String getLabel();
  /**
   * <pre>
   * Label for this location in the administrative dashboard. If this is not specified, `name` is shown.
   * </pre>
   *
   * <code>string label = 4 [(.gen_bq_schema.description) = "Label for this location in the administrative dashboard. If this is not specified, `name` is shown."];</code>
   */
  com.google.protobuf.ByteString
      getLabelBytes();

  /**
   * <pre>
   * Flags that specify conditions applied to this partner location.
   * </pre>
   *
   * <code>.bloombox.schema.partner.PartnerFlags flags = 5 [(.gen_bq_schema.description) = "Flags that specify conditions applied to this partner location."];</code>
   */
  boolean hasFlags();
  /**
   * <pre>
   * Flags that specify conditions applied to this partner location.
   * </pre>
   *
   * <code>.bloombox.schema.partner.PartnerFlags flags = 5 [(.gen_bq_schema.description) = "Flags that specify conditions applied to this partner location."];</code>
   */
  io.bloombox.schema.partner.PartnerFlags getFlags();
  /**
   * <pre>
   * Flags that specify conditions applied to this partner location.
   * </pre>
   *
   * <code>.bloombox.schema.partner.PartnerFlags flags = 5 [(.gen_bq_schema.description) = "Flags that specify conditions applied to this partner location."];</code>
   */
  io.bloombox.schema.partner.PartnerFlagsOrBuilder getFlagsOrBuilder();

  /**
   * <pre>
   * Contact information for this location.
   * </pre>
   *
   * <code>.opencannabis.contact.ContactInfo contact = 7 [(.gen_bq_schema.description) = "Contact information for this location."];</code>
   */
  boolean hasContact();
  /**
   * <pre>
   * Contact information for this location.
   * </pre>
   *
   * <code>.opencannabis.contact.ContactInfo contact = 7 [(.gen_bq_schema.description) = "Contact information for this location."];</code>
   */
  io.opencannabis.schema.contact.ContactInfo getContact();
  /**
   * <pre>
   * Contact information for this location.
   * </pre>
   *
   * <code>.opencannabis.contact.ContactInfo contact = 7 [(.gen_bq_schema.description) = "Contact information for this location."];</code>
   */
  io.opencannabis.schema.contact.ContactInfoOrBuilder getContactOrBuilder();

  /**
   * <pre>
   * Branding specific to this location. Partner-level branding is used if this is left unspecified.
   * </pre>
   *
   * <code>.opencannabis.media.MediaItem branding = 6 [(.gen_bq_schema.description) = "Branding specific to this location. Partner-level branding is used if this is left unspecified."];</code>
   */
  boolean hasBranding();
  /**
   * <pre>
   * Branding specific to this location. Partner-level branding is used if this is left unspecified.
   * </pre>
   *
   * <code>.opencannabis.media.MediaItem branding = 6 [(.gen_bq_schema.description) = "Branding specific to this location. Partner-level branding is used if this is left unspecified."];</code>
   */
  io.opencannabis.schema.media.MediaItem getBranding();
  /**
   * <pre>
   * Branding specific to this location. Partner-level branding is used if this is left unspecified.
   * </pre>
   *
   * <code>.opencannabis.media.MediaItem branding = 6 [(.gen_bq_schema.description) = "Branding specific to this location. Partner-level branding is used if this is left unspecified."];</code>
   */
  io.opencannabis.schema.media.MediaItemOrBuilder getBrandingOrBuilder();

  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant created = 8 [(.gen_bq_schema.description) = "Timestamp for when this record was created."];</code>
   */
  boolean hasCreated();
  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant created = 8 [(.gen_bq_schema.description) = "Timestamp for when this record was created."];</code>
   */
  io.opencannabis.schema.temporal.Instant getCreated();
  /**
   * <pre>
   * Timestamp for when this record was created.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant created = 8 [(.gen_bq_schema.description) = "Timestamp for when this record was created."];</code>
   */
  io.opencannabis.schema.temporal.InstantOrBuilder getCreatedOrBuilder();

  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant modified = 9 [(.gen_bq_schema.description) = "Timestamp for when this record was last modified."];</code>
   */
  boolean hasModified();
  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant modified = 9 [(.gen_bq_schema.description) = "Timestamp for when this record was last modified."];</code>
   */
  io.opencannabis.schema.temporal.Instant getModified();
  /**
   * <pre>
   * Timestamp for when this record was last modified.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant modified = 9 [(.gen_bq_schema.description) = "Timestamp for when this record was last modified."];</code>
   */
  io.opencannabis.schema.temporal.InstantOrBuilder getModifiedOrBuilder();
}
