/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner/integrations/IntegrationSettings.proto

package io.bloombox.schema.partner.integrations;

public interface GenericIntegrationSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bloombox.schema.partner.integrations.GenericIntegrationSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies the integration partner to which these settings apply for a given location.
   * </pre>
   *
   * <code>.bloombox.schema.partner.integrations.IntegrationPartner partner = 1;</code>
   */
  int getPartnerValue();
  /**
   * <pre>
   * Specifies the integration partner to which these settings apply for a given location.
   * </pre>
   *
   * <code>.bloombox.schema.partner.integrations.IntegrationPartner partner = 1;</code>
   */
  io.bloombox.schema.partner.integrations.IntegrationPartner getPartner();

  /**
   * <pre>
   * Whether this integration is currently enabled.
   * </pre>
   *
   * <code>bool enabled = 2;</code>
   */
  boolean getEnabled();

  /**
   * <pre>
   * Whether this integration has been fully setup.
   * </pre>
   *
   * <code>bool fully_setup = 3;</code>
   */
  boolean getFullySetup();

  /**
   * <pre>
   * Timestamp for when this integration was last tested.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant last_tested = 4;</code>
   */
  boolean hasLastTested();
  /**
   * <pre>
   * Timestamp for when this integration was last tested.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant last_tested = 4;</code>
   */
  io.opencannabis.schema.temporal.Instant getLastTested();
  /**
   * <pre>
   * Timestamp for when this integration was last tested.
   * </pre>
   *
   * <code>.opencannabis.temporal.Instant last_tested = 4;</code>
   */
  io.opencannabis.schema.temporal.InstantOrBuilder getLastTestedOrBuilder();
}
