/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner/integrations/MailchimpSettings.proto

package io.bloombox.schema.partner.integrations.mailchimp;

public final class MailchimpSettingsOuterClass {
  private MailchimpSettingsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MailchimpIntegrationFeaturesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Route user signups to MailChimp.
     * </pre>
     *
     * <code>bool signups = 1;</code>
     */
    boolean getSignups();

    /**
     * <pre>
     * Apply segments in MailChimp according to user preferences.
     * </pre>
     *
     * <code>bool segments = 2;</code>
     */
    boolean getSegments();

    /**
     * <pre>
     * Use MailChimp for ordering comms.
     * </pre>
     *
     * <code>bool ordering = 3;</code>
     */
    boolean getOrdering();
  }
  /**
   * <pre>
   * Specifies MailChimp integration features to enable or disable.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures}
   */
  public  static final class MailchimpIntegrationFeatures extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures)
      MailchimpIntegrationFeaturesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MailchimpIntegrationFeatures.newBuilder() to construct.
    private MailchimpIntegrationFeatures(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MailchimpIntegrationFeatures() {
      signups_ = false;
      segments_ = false;
      ordering_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MailchimpIntegrationFeatures(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              signups_ = input.readBool();
              break;
            }
            case 16: {

              segments_ = input.readBool();
              break;
            }
            case 24: {

              ordering_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.class, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.Builder.class);
    }

    public static final int SIGNUPS_FIELD_NUMBER = 1;
    private boolean signups_;
    /**
     * <pre>
     * Route user signups to MailChimp.
     * </pre>
     *
     * <code>bool signups = 1;</code>
     */
    public boolean getSignups() {
      return signups_;
    }

    public static final int SEGMENTS_FIELD_NUMBER = 2;
    private boolean segments_;
    /**
     * <pre>
     * Apply segments in MailChimp according to user preferences.
     * </pre>
     *
     * <code>bool segments = 2;</code>
     */
    public boolean getSegments() {
      return segments_;
    }

    public static final int ORDERING_FIELD_NUMBER = 3;
    private boolean ordering_;
    /**
     * <pre>
     * Use MailChimp for ordering comms.
     * </pre>
     *
     * <code>bool ordering = 3;</code>
     */
    public boolean getOrdering() {
      return ordering_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (signups_ != false) {
        output.writeBool(1, signups_);
      }
      if (segments_ != false) {
        output.writeBool(2, segments_);
      }
      if (ordering_ != false) {
        output.writeBool(3, ordering_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (signups_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, signups_);
      }
      if (segments_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, segments_);
      }
      if (ordering_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, ordering_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures)) {
        return super.equals(obj);
      }
      io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures other = (io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures) obj;

      boolean result = true;
      result = result && (getSignups()
          == other.getSignups());
      result = result && (getSegments()
          == other.getSegments());
      result = result && (getOrdering()
          == other.getOrdering());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIGNUPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSignups());
      hash = (37 * hash) + SEGMENTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSegments());
      hash = (37 * hash) + ORDERING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOrdering());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies MailChimp integration features to enable or disable.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures)
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeaturesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.class, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.Builder.class);
      }

      // Construct using io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        signups_ = false;

        segments_ = false;

        ordering_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_descriptor;
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures getDefaultInstanceForType() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.getDefaultInstance();
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures build() {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures buildPartial() {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures result = new io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures(this);
        result.signups_ = signups_;
        result.segments_ = segments_;
        result.ordering_ = ordering_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures) {
          return mergeFrom((io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures other) {
        if (other == io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.getDefaultInstance()) return this;
        if (other.getSignups() != false) {
          setSignups(other.getSignups());
        }
        if (other.getSegments() != false) {
          setSegments(other.getSegments());
        }
        if (other.getOrdering() != false) {
          setOrdering(other.getOrdering());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean signups_ ;
      /**
       * <pre>
       * Route user signups to MailChimp.
       * </pre>
       *
       * <code>bool signups = 1;</code>
       */
      public boolean getSignups() {
        return signups_;
      }
      /**
       * <pre>
       * Route user signups to MailChimp.
       * </pre>
       *
       * <code>bool signups = 1;</code>
       */
      public Builder setSignups(boolean value) {
        
        signups_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Route user signups to MailChimp.
       * </pre>
       *
       * <code>bool signups = 1;</code>
       */
      public Builder clearSignups() {
        
        signups_ = false;
        onChanged();
        return this;
      }

      private boolean segments_ ;
      /**
       * <pre>
       * Apply segments in MailChimp according to user preferences.
       * </pre>
       *
       * <code>bool segments = 2;</code>
       */
      public boolean getSegments() {
        return segments_;
      }
      /**
       * <pre>
       * Apply segments in MailChimp according to user preferences.
       * </pre>
       *
       * <code>bool segments = 2;</code>
       */
      public Builder setSegments(boolean value) {
        
        segments_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Apply segments in MailChimp according to user preferences.
       * </pre>
       *
       * <code>bool segments = 2;</code>
       */
      public Builder clearSegments() {
        
        segments_ = false;
        onChanged();
        return this;
      }

      private boolean ordering_ ;
      /**
       * <pre>
       * Use MailChimp for ordering comms.
       * </pre>
       *
       * <code>bool ordering = 3;</code>
       */
      public boolean getOrdering() {
        return ordering_;
      }
      /**
       * <pre>
       * Use MailChimp for ordering comms.
       * </pre>
       *
       * <code>bool ordering = 3;</code>
       */
      public Builder setOrdering(boolean value) {
        
        ordering_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Use MailChimp for ordering comms.
       * </pre>
       *
       * <code>bool ordering = 3;</code>
       */
      public Builder clearOrdering() {
        
        ordering_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures)
    private static final io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures();
    }

    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MailchimpIntegrationFeatures>
        PARSER = new com.google.protobuf.AbstractParser<MailchimpIntegrationFeatures>() {
      public MailchimpIntegrationFeatures parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MailchimpIntegrationFeatures(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MailchimpIntegrationFeatures> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MailchimpIntegrationFeatures> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MailchimpListsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.partner.integrations.mailchimp.MailchimpLists)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Main comms list to use for user notifications.
     * </pre>
     *
     * <code>string comms = 1;</code>
     */
    java.lang.String getComms();
    /**
     * <pre>
     * Main comms list to use for user notifications.
     * </pre>
     *
     * <code>string comms = 1;</code>
     */
    com.google.protobuf.ByteString
        getCommsBytes();

    /**
     * <pre>
     * List to use for opt-in, marketing-related comms.
     * </pre>
     *
     * <code>string marketing = 2;</code>
     */
    java.lang.String getMarketing();
    /**
     * <pre>
     * List to use for opt-in, marketing-related comms.
     * </pre>
     *
     * <code>string marketing = 2;</code>
     */
    com.google.protobuf.ByteString
        getMarketingBytes();
  }
  /**
   * <pre>
   * MailChimp list mappings to use for signup integration.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.partner.integrations.mailchimp.MailchimpLists}
   */
  public  static final class MailchimpLists extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.partner.integrations.mailchimp.MailchimpLists)
      MailchimpListsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MailchimpLists.newBuilder() to construct.
    private MailchimpLists(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MailchimpLists() {
      comms_ = "";
      marketing_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MailchimpLists(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              comms_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              marketing_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.class, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.Builder.class);
    }

    public static final int COMMS_FIELD_NUMBER = 1;
    private volatile java.lang.Object comms_;
    /**
     * <pre>
     * Main comms list to use for user notifications.
     * </pre>
     *
     * <code>string comms = 1;</code>
     */
    public java.lang.String getComms() {
      java.lang.Object ref = comms_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        comms_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Main comms list to use for user notifications.
     * </pre>
     *
     * <code>string comms = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCommsBytes() {
      java.lang.Object ref = comms_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        comms_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MARKETING_FIELD_NUMBER = 2;
    private volatile java.lang.Object marketing_;
    /**
     * <pre>
     * List to use for opt-in, marketing-related comms.
     * </pre>
     *
     * <code>string marketing = 2;</code>
     */
    public java.lang.String getMarketing() {
      java.lang.Object ref = marketing_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        marketing_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * List to use for opt-in, marketing-related comms.
     * </pre>
     *
     * <code>string marketing = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMarketingBytes() {
      java.lang.Object ref = marketing_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        marketing_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getCommsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, comms_);
      }
      if (!getMarketingBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, marketing_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCommsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, comms_);
      }
      if (!getMarketingBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, marketing_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists)) {
        return super.equals(obj);
      }
      io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists other = (io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists) obj;

      boolean result = true;
      result = result && getComms()
          .equals(other.getComms());
      result = result && getMarketing()
          .equals(other.getMarketing());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMMS_FIELD_NUMBER;
      hash = (53 * hash) + getComms().hashCode();
      hash = (37 * hash) + MARKETING_FIELD_NUMBER;
      hash = (53 * hash) + getMarketing().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MailChimp list mappings to use for signup integration.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.partner.integrations.mailchimp.MailchimpLists}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.partner.integrations.mailchimp.MailchimpLists)
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpListsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.class, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.Builder.class);
      }

      // Construct using io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        comms_ = "";

        marketing_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_descriptor;
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists getDefaultInstanceForType() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.getDefaultInstance();
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists build() {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists buildPartial() {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists result = new io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists(this);
        result.comms_ = comms_;
        result.marketing_ = marketing_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists) {
          return mergeFrom((io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists other) {
        if (other == io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.getDefaultInstance()) return this;
        if (!other.getComms().isEmpty()) {
          comms_ = other.comms_;
          onChanged();
        }
        if (!other.getMarketing().isEmpty()) {
          marketing_ = other.marketing_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object comms_ = "";
      /**
       * <pre>
       * Main comms list to use for user notifications.
       * </pre>
       *
       * <code>string comms = 1;</code>
       */
      public java.lang.String getComms() {
        java.lang.Object ref = comms_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          comms_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Main comms list to use for user notifications.
       * </pre>
       *
       * <code>string comms = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCommsBytes() {
        java.lang.Object ref = comms_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          comms_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Main comms list to use for user notifications.
       * </pre>
       *
       * <code>string comms = 1;</code>
       */
      public Builder setComms(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        comms_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Main comms list to use for user notifications.
       * </pre>
       *
       * <code>string comms = 1;</code>
       */
      public Builder clearComms() {
        
        comms_ = getDefaultInstance().getComms();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Main comms list to use for user notifications.
       * </pre>
       *
       * <code>string comms = 1;</code>
       */
      public Builder setCommsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        comms_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object marketing_ = "";
      /**
       * <pre>
       * List to use for opt-in, marketing-related comms.
       * </pre>
       *
       * <code>string marketing = 2;</code>
       */
      public java.lang.String getMarketing() {
        java.lang.Object ref = marketing_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          marketing_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * List to use for opt-in, marketing-related comms.
       * </pre>
       *
       * <code>string marketing = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMarketingBytes() {
        java.lang.Object ref = marketing_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          marketing_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * List to use for opt-in, marketing-related comms.
       * </pre>
       *
       * <code>string marketing = 2;</code>
       */
      public Builder setMarketing(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        marketing_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List to use for opt-in, marketing-related comms.
       * </pre>
       *
       * <code>string marketing = 2;</code>
       */
      public Builder clearMarketing() {
        
        marketing_ = getDefaultInstance().getMarketing();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List to use for opt-in, marketing-related comms.
       * </pre>
       *
       * <code>string marketing = 2;</code>
       */
      public Builder setMarketingBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        marketing_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.partner.integrations.mailchimp.MailchimpLists)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.partner.integrations.mailchimp.MailchimpLists)
    private static final io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists();
    }

    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MailchimpLists>
        PARSER = new com.google.protobuf.AbstractParser<MailchimpLists>() {
      public MailchimpLists parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MailchimpLists(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MailchimpLists> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MailchimpLists> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MailchimpSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.partner.integrations.mailchimp.MailchimpSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * API key for use with MailChimp.
     * </pre>
     *
     * <code>string api_key = 1;</code>
     */
    java.lang.String getApiKey();
    /**
     * <pre>
     * API key for use with MailChimp.
     * </pre>
     *
     * <code>string api_key = 1;</code>
     */
    com.google.protobuf.ByteString
        getApiKeyBytes();

    /**
     * <pre>
     * Flags indicating features that should be enabled or disabled.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
     */
    boolean hasFeatures();
    /**
     * <pre>
     * Flags indicating features that should be enabled or disabled.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
     */
    io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures getFeatures();
    /**
     * <pre>
     * Flags indicating features that should be enabled or disabled.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
     */
    io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeaturesOrBuilder getFeaturesOrBuilder();

    /**
     * <pre>
     * Lists to use for various bindings in MailChimp.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
     */
    boolean hasLists();
    /**
     * <pre>
     * Lists to use for various bindings in MailChimp.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
     */
    io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists getLists();
    /**
     * <pre>
     * Lists to use for various bindings in MailChimp.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
     */
    io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpListsOrBuilder getListsOrBuilder();
  }
  /**
   * <pre>
   * Specifies MailChimp integration settings.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.partner.integrations.mailchimp.MailchimpSettings}
   */
  public  static final class MailchimpSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.partner.integrations.mailchimp.MailchimpSettings)
      MailchimpSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MailchimpSettings.newBuilder() to construct.
    private MailchimpSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MailchimpSettings() {
      apiKey_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MailchimpSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              apiKey_ = s;
              break;
            }
            case 82: {
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.Builder subBuilder = null;
              if (features_ != null) {
                subBuilder = features_.toBuilder();
              }
              features_ = input.readMessage(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(features_);
                features_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.Builder subBuilder = null;
              if (lists_ != null) {
                subBuilder = lists_.toBuilder();
              }
              lists_ = input.readMessage(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lists_);
                lists_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings.class, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings.Builder.class);
    }

    public static final int API_KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object apiKey_;
    /**
     * <pre>
     * API key for use with MailChimp.
     * </pre>
     *
     * <code>string api_key = 1;</code>
     */
    public java.lang.String getApiKey() {
      java.lang.Object ref = apiKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apiKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * API key for use with MailChimp.
     * </pre>
     *
     * <code>string api_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getApiKeyBytes() {
      java.lang.Object ref = apiKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apiKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FEATURES_FIELD_NUMBER = 10;
    private io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures features_;
    /**
     * <pre>
     * Flags indicating features that should be enabled or disabled.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
     */
    public boolean hasFeatures() {
      return features_ != null;
    }
    /**
     * <pre>
     * Flags indicating features that should be enabled or disabled.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
     */
    public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures getFeatures() {
      return features_ == null ? io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.getDefaultInstance() : features_;
    }
    /**
     * <pre>
     * Flags indicating features that should be enabled or disabled.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
     */
    public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeaturesOrBuilder getFeaturesOrBuilder() {
      return getFeatures();
    }

    public static final int LISTS_FIELD_NUMBER = 11;
    private io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists lists_;
    /**
     * <pre>
     * Lists to use for various bindings in MailChimp.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
     */
    public boolean hasLists() {
      return lists_ != null;
    }
    /**
     * <pre>
     * Lists to use for various bindings in MailChimp.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
     */
    public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists getLists() {
      return lists_ == null ? io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.getDefaultInstance() : lists_;
    }
    /**
     * <pre>
     * Lists to use for various bindings in MailChimp.
     * </pre>
     *
     * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
     */
    public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpListsOrBuilder getListsOrBuilder() {
      return getLists();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getApiKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, apiKey_);
      }
      if (features_ != null) {
        output.writeMessage(10, getFeatures());
      }
      if (lists_ != null) {
        output.writeMessage(11, getLists());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getApiKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, apiKey_);
      }
      if (features_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getFeatures());
      }
      if (lists_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getLists());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings)) {
        return super.equals(obj);
      }
      io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings other = (io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings) obj;

      boolean result = true;
      result = result && getApiKey()
          .equals(other.getApiKey());
      result = result && (hasFeatures() == other.hasFeatures());
      if (hasFeatures()) {
        result = result && getFeatures()
            .equals(other.getFeatures());
      }
      result = result && (hasLists() == other.hasLists());
      if (hasLists()) {
        result = result && getLists()
            .equals(other.getLists());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + API_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getApiKey().hashCode();
      if (hasFeatures()) {
        hash = (37 * hash) + FEATURES_FIELD_NUMBER;
        hash = (53 * hash) + getFeatures().hashCode();
      }
      if (hasLists()) {
        hash = (37 * hash) + LISTS_FIELD_NUMBER;
        hash = (53 * hash) + getLists().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies MailChimp integration settings.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.partner.integrations.mailchimp.MailchimpSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.partner.integrations.mailchimp.MailchimpSettings)
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings.class, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings.Builder.class);
      }

      // Construct using io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        apiKey_ = "";

        if (featuresBuilder_ == null) {
          features_ = null;
        } else {
          features_ = null;
          featuresBuilder_ = null;
        }
        if (listsBuilder_ == null) {
          lists_ = null;
        } else {
          lists_ = null;
          listsBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_descriptor;
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings getDefaultInstanceForType() {
        return io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings.getDefaultInstance();
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings build() {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings buildPartial() {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings result = new io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings(this);
        result.apiKey_ = apiKey_;
        if (featuresBuilder_ == null) {
          result.features_ = features_;
        } else {
          result.features_ = featuresBuilder_.build();
        }
        if (listsBuilder_ == null) {
          result.lists_ = lists_;
        } else {
          result.lists_ = listsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings) {
          return mergeFrom((io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings other) {
        if (other == io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings.getDefaultInstance()) return this;
        if (!other.getApiKey().isEmpty()) {
          apiKey_ = other.apiKey_;
          onChanged();
        }
        if (other.hasFeatures()) {
          mergeFeatures(other.getFeatures());
        }
        if (other.hasLists()) {
          mergeLists(other.getLists());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object apiKey_ = "";
      /**
       * <pre>
       * API key for use with MailChimp.
       * </pre>
       *
       * <code>string api_key = 1;</code>
       */
      public java.lang.String getApiKey() {
        java.lang.Object ref = apiKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          apiKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * API key for use with MailChimp.
       * </pre>
       *
       * <code>string api_key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getApiKeyBytes() {
        java.lang.Object ref = apiKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          apiKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * API key for use with MailChimp.
       * </pre>
       *
       * <code>string api_key = 1;</code>
       */
      public Builder setApiKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        apiKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * API key for use with MailChimp.
       * </pre>
       *
       * <code>string api_key = 1;</code>
       */
      public Builder clearApiKey() {
        
        apiKey_ = getDefaultInstance().getApiKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * API key for use with MailChimp.
       * </pre>
       *
       * <code>string api_key = 1;</code>
       */
      public Builder setApiKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        apiKey_ = value;
        onChanged();
        return this;
      }

      private io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures features_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.Builder, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeaturesOrBuilder> featuresBuilder_;
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      public boolean hasFeatures() {
        return featuresBuilder_ != null || features_ != null;
      }
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures getFeatures() {
        if (featuresBuilder_ == null) {
          return features_ == null ? io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.getDefaultInstance() : features_;
        } else {
          return featuresBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      public Builder setFeatures(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures value) {
        if (featuresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          features_ = value;
          onChanged();
        } else {
          featuresBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      public Builder setFeatures(
          io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.Builder builderForValue) {
        if (featuresBuilder_ == null) {
          features_ = builderForValue.build();
          onChanged();
        } else {
          featuresBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      public Builder mergeFeatures(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures value) {
        if (featuresBuilder_ == null) {
          if (features_ != null) {
            features_ =
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.newBuilder(features_).mergeFrom(value).buildPartial();
          } else {
            features_ = value;
          }
          onChanged();
        } else {
          featuresBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      public Builder clearFeatures() {
        if (featuresBuilder_ == null) {
          features_ = null;
          onChanged();
        } else {
          features_ = null;
          featuresBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.Builder getFeaturesBuilder() {
        
        onChanged();
        return getFeaturesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeaturesOrBuilder getFeaturesOrBuilder() {
        if (featuresBuilder_ != null) {
          return featuresBuilder_.getMessageOrBuilder();
        } else {
          return features_ == null ?
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.getDefaultInstance() : features_;
        }
      }
      /**
       * <pre>
       * Flags indicating features that should be enabled or disabled.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpIntegrationFeatures features = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.Builder, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeaturesOrBuilder> 
          getFeaturesFieldBuilder() {
        if (featuresBuilder_ == null) {
          featuresBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeatures.Builder, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpIntegrationFeaturesOrBuilder>(
                  getFeatures(),
                  getParentForChildren(),
                  isClean());
          features_ = null;
        }
        return featuresBuilder_;
      }

      private io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists lists_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.Builder, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpListsOrBuilder> listsBuilder_;
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      public boolean hasLists() {
        return listsBuilder_ != null || lists_ != null;
      }
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists getLists() {
        if (listsBuilder_ == null) {
          return lists_ == null ? io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.getDefaultInstance() : lists_;
        } else {
          return listsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      public Builder setLists(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists value) {
        if (listsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lists_ = value;
          onChanged();
        } else {
          listsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      public Builder setLists(
          io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.Builder builderForValue) {
        if (listsBuilder_ == null) {
          lists_ = builderForValue.build();
          onChanged();
        } else {
          listsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      public Builder mergeLists(io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists value) {
        if (listsBuilder_ == null) {
          if (lists_ != null) {
            lists_ =
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.newBuilder(lists_).mergeFrom(value).buildPartial();
          } else {
            lists_ = value;
          }
          onChanged();
        } else {
          listsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      public Builder clearLists() {
        if (listsBuilder_ == null) {
          lists_ = null;
          onChanged();
        } else {
          lists_ = null;
          listsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.Builder getListsBuilder() {
        
        onChanged();
        return getListsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpListsOrBuilder getListsOrBuilder() {
        if (listsBuilder_ != null) {
          return listsBuilder_.getMessageOrBuilder();
        } else {
          return lists_ == null ?
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.getDefaultInstance() : lists_;
        }
      }
      /**
       * <pre>
       * Lists to use for various bindings in MailChimp.
       * </pre>
       *
       * <code>.bloombox.schema.partner.integrations.mailchimp.MailchimpLists lists = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.Builder, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpListsOrBuilder> 
          getListsFieldBuilder() {
        if (listsBuilder_ == null) {
          listsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpLists.Builder, io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpListsOrBuilder>(
                  getLists(),
                  getParentForChildren(),
                  isClean());
          lists_ = null;
        }
        return listsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.partner.integrations.mailchimp.MailchimpSettings)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.partner.integrations.mailchimp.MailchimpSettings)
    private static final io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings();
    }

    public static io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MailchimpSettings>
        PARSER = new com.google.protobuf.AbstractParser<MailchimpSettings>() {
      public MailchimpSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MailchimpSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MailchimpSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MailchimpSettings> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.partner.integrations.mailchimp.MailchimpSettingsOuterClass.MailchimpSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,partner/integrations/MailchimpSettings" +
      ".proto\022.bloombox.schema.partner.integrat" +
      "ions.mailchimp\"S\n\034MailchimpIntegrationFe" +
      "atures\022\017\n\007signups\030\001 \001(\010\022\020\n\010segments\030\002 \001(" +
      "\010\022\020\n\010ordering\030\003 \001(\010\"2\n\016MailchimpLists\022\r\n" +
      "\005comms\030\001 \001(\t\022\021\n\tmarketing\030\002 \001(\t\"\323\001\n\021Mail" +
      "chimpSettings\022\017\n\007api_key\030\001 \001(\t\022^\n\010featur" +
      "es\030\n \001(\0132L.bloombox.schema.partner.integ" +
      "rations.mailchimp.MailchimpIntegrationFe" +
      "atures\022M\n\005lists\030\013 \001(\0132>.bloombox.schema." +
      "partner.integrations.mailchimp.Mailchimp" +
      "ListsB=\n1io.bloombox.schema.partner.inte" +
      "grations.mailchimpH\001P\000\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpIntegrationFeatures_descriptor,
        new java.lang.String[] { "Signups", "Segments", "Ordering", });
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpLists_descriptor,
        new java.lang.String[] { "Comms", "Marketing", });
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_partner_integrations_mailchimp_MailchimpSettings_descriptor,
        new java.lang.String[] { "ApiKey", "Features", "Lists", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
