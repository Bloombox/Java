// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/pass/PassKey.proto

package io.bloombox.schema.pass;

public final class PassIDKey {
  private PassIDKey() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PassKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.identity.pass.PassKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies the entire encoded ID.
     * </pre>
     *
     * <code>string encoded = 1 [(.core.field) = { ... }</code>
     */
    java.lang.String getEncoded();
    /**
     * <pre>
     * Specifies the entire encoded ID.
     * </pre>
     *
     * <code>string encoded = 1 [(.core.field) = { ... }</code>
     */
    com.google.protobuf.ByteString
        getEncodedBytes();

    /**
     * <pre>
     * Specifies the serial number for a pass.
     * </pre>
     *
     * <code>string serial = 2;</code>
     */
    java.lang.String getSerial();
    /**
     * <pre>
     * Specifies the serial number for a pass.
     * </pre>
     *
     * <code>string serial = 2;</code>
     */
    com.google.protobuf.ByteString
        getSerialBytes();

    /**
     * <pre>
     * Specifies the user ID that owns the pass.
     * </pre>
     *
     * <code>string uid = 3;</code>
     */
    java.lang.String getUid();
    /**
     * <pre>
     * Specifies the user ID that owns the pass.
     * </pre>
     *
     * <code>string uid = 3;</code>
     */
    com.google.protobuf.ByteString
        getUidBytes();
  }
  /**
   * <pre>
   * Specifies the key for a digital pass record.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.identity.pass.PassKey}
   */
  public  static final class PassKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.identity.pass.PassKey)
      PassKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PassKey.newBuilder() to construct.
    private PassKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PassKey() {
      encoded_ = "";
      serial_ = "";
      uid_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PassKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              encoded_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              serial_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              uid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.pass.PassIDKey.internal_static_bloombox_schema_identity_pass_PassKey_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.pass.PassIDKey.internal_static_bloombox_schema_identity_pass_PassKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.pass.PassIDKey.PassKey.class, io.bloombox.schema.pass.PassIDKey.PassKey.Builder.class);
    }

    public static final int ENCODED_FIELD_NUMBER = 1;
    private volatile java.lang.Object encoded_;
    /**
     * <pre>
     * Specifies the entire encoded ID.
     * </pre>
     *
     * <code>string encoded = 1 [(.core.field) = { ... }</code>
     */
    public java.lang.String getEncoded() {
      java.lang.Object ref = encoded_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        encoded_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the entire encoded ID.
     * </pre>
     *
     * <code>string encoded = 1 [(.core.field) = { ... }</code>
     */
    public com.google.protobuf.ByteString
        getEncodedBytes() {
      java.lang.Object ref = encoded_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encoded_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERIAL_FIELD_NUMBER = 2;
    private volatile java.lang.Object serial_;
    /**
     * <pre>
     * Specifies the serial number for a pass.
     * </pre>
     *
     * <code>string serial = 2;</code>
     */
    public java.lang.String getSerial() {
      java.lang.Object ref = serial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serial_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the serial number for a pass.
     * </pre>
     *
     * <code>string serial = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSerialBytes() {
      java.lang.Object ref = serial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UID_FIELD_NUMBER = 3;
    private volatile java.lang.Object uid_;
    /**
     * <pre>
     * Specifies the user ID that owns the pass.
     * </pre>
     *
     * <code>string uid = 3;</code>
     */
    public java.lang.String getUid() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the user ID that owns the pass.
     * </pre>
     *
     * <code>string uid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUidBytes() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getEncodedBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, encoded_);
      }
      if (!getSerialBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serial_);
      }
      if (!getUidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getEncodedBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, encoded_);
      }
      if (!getSerialBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serial_);
      }
      if (!getUidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.pass.PassIDKey.PassKey)) {
        return super.equals(obj);
      }
      io.bloombox.schema.pass.PassIDKey.PassKey other = (io.bloombox.schema.pass.PassIDKey.PassKey) obj;

      boolean result = true;
      result = result && getEncoded()
          .equals(other.getEncoded());
      result = result && getSerial()
          .equals(other.getSerial());
      result = result && getUid()
          .equals(other.getUid());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENCODED_FIELD_NUMBER;
      hash = (53 * hash) + getEncoded().hashCode();
      hash = (37 * hash) + SERIAL_FIELD_NUMBER;
      hash = (53 * hash) + getSerial().hashCode();
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + getUid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.pass.PassIDKey.PassKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.pass.PassIDKey.PassKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies the key for a digital pass record.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.identity.pass.PassKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.identity.pass.PassKey)
        io.bloombox.schema.pass.PassIDKey.PassKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.pass.PassIDKey.internal_static_bloombox_schema_identity_pass_PassKey_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.pass.PassIDKey.internal_static_bloombox_schema_identity_pass_PassKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.pass.PassIDKey.PassKey.class, io.bloombox.schema.pass.PassIDKey.PassKey.Builder.class);
      }

      // Construct using io.bloombox.schema.pass.PassIDKey.PassKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        encoded_ = "";

        serial_ = "";

        uid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.pass.PassIDKey.internal_static_bloombox_schema_identity_pass_PassKey_descriptor;
      }

      public io.bloombox.schema.pass.PassIDKey.PassKey getDefaultInstanceForType() {
        return io.bloombox.schema.pass.PassIDKey.PassKey.getDefaultInstance();
      }

      public io.bloombox.schema.pass.PassIDKey.PassKey build() {
        io.bloombox.schema.pass.PassIDKey.PassKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.pass.PassIDKey.PassKey buildPartial() {
        io.bloombox.schema.pass.PassIDKey.PassKey result = new io.bloombox.schema.pass.PassIDKey.PassKey(this);
        result.encoded_ = encoded_;
        result.serial_ = serial_;
        result.uid_ = uid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.pass.PassIDKey.PassKey) {
          return mergeFrom((io.bloombox.schema.pass.PassIDKey.PassKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.pass.PassIDKey.PassKey other) {
        if (other == io.bloombox.schema.pass.PassIDKey.PassKey.getDefaultInstance()) return this;
        if (!other.getEncoded().isEmpty()) {
          encoded_ = other.encoded_;
          onChanged();
        }
        if (!other.getSerial().isEmpty()) {
          serial_ = other.serial_;
          onChanged();
        }
        if (!other.getUid().isEmpty()) {
          uid_ = other.uid_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.pass.PassIDKey.PassKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.pass.PassIDKey.PassKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object encoded_ = "";
      /**
       * <pre>
       * Specifies the entire encoded ID.
       * </pre>
       *
       * <code>string encoded = 1 [(.core.field) = { ... }</code>
       */
      public java.lang.String getEncoded() {
        java.lang.Object ref = encoded_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          encoded_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the entire encoded ID.
       * </pre>
       *
       * <code>string encoded = 1 [(.core.field) = { ... }</code>
       */
      public com.google.protobuf.ByteString
          getEncodedBytes() {
        java.lang.Object ref = encoded_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          encoded_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the entire encoded ID.
       * </pre>
       *
       * <code>string encoded = 1 [(.core.field) = { ... }</code>
       */
      public Builder setEncoded(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        encoded_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the entire encoded ID.
       * </pre>
       *
       * <code>string encoded = 1 [(.core.field) = { ... }</code>
       */
      public Builder clearEncoded() {
        
        encoded_ = getDefaultInstance().getEncoded();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the entire encoded ID.
       * </pre>
       *
       * <code>string encoded = 1 [(.core.field) = { ... }</code>
       */
      public Builder setEncodedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        encoded_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object serial_ = "";
      /**
       * <pre>
       * Specifies the serial number for a pass.
       * </pre>
       *
       * <code>string serial = 2;</code>
       */
      public java.lang.String getSerial() {
        java.lang.Object ref = serial_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the serial number for a pass.
       * </pre>
       *
       * <code>string serial = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSerialBytes() {
        java.lang.Object ref = serial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the serial number for a pass.
       * </pre>
       *
       * <code>string serial = 2;</code>
       */
      public Builder setSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the serial number for a pass.
       * </pre>
       *
       * <code>string serial = 2;</code>
       */
      public Builder clearSerial() {
        
        serial_ = getDefaultInstance().getSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the serial number for a pass.
       * </pre>
       *
       * <code>string serial = 2;</code>
       */
      public Builder setSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serial_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object uid_ = "";
      /**
       * <pre>
       * Specifies the user ID that owns the pass.
       * </pre>
       *
       * <code>string uid = 3;</code>
       */
      public java.lang.String getUid() {
        java.lang.Object ref = uid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the user ID that owns the pass.
       * </pre>
       *
       * <code>string uid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUidBytes() {
        java.lang.Object ref = uid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the user ID that owns the pass.
       * </pre>
       *
       * <code>string uid = 3;</code>
       */
      public Builder setUid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the user ID that owns the pass.
       * </pre>
       *
       * <code>string uid = 3;</code>
       */
      public Builder clearUid() {
        
        uid_ = getDefaultInstance().getUid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the user ID that owns the pass.
       * </pre>
       *
       * <code>string uid = 3;</code>
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.identity.pass.PassKey)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.identity.pass.PassKey)
    private static final io.bloombox.schema.pass.PassIDKey.PassKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.pass.PassIDKey.PassKey();
    }

    public static io.bloombox.schema.pass.PassIDKey.PassKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PassKey>
        PARSER = new com.google.protobuf.AbstractParser<PassKey>() {
      public PassKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PassKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PassKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PassKey> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.pass.PassIDKey.PassKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_identity_pass_PassKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_identity_pass_PassKey_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033identity/pass/PassKey.proto\022\035bloombox." +
      "schema.identity.pass\032\024core/Datamodel.pro" +
      "to\"?\n\007PassKey\022\027\n\007encoded\030\001 \001(\tB\006\302\265\003\002\010\002\022\016" +
      "\n\006serial\030\002 \001(\t\022\013\n\003uid\030\003 \001(\tB.\n\027io.bloomb" +
      "ox.schema.passB\tPassIDKeyH\001P\000\242\002\003BBSb\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          core.Datamodel.getDescriptor(),
        }, assigner);
    internal_static_bloombox_schema_identity_pass_PassKey_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_schema_identity_pass_PassKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_identity_pass_PassKey_descriptor,
        new java.lang.String[] { "Encoded", "Serial", "Uid", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(core.Datamodel.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    core.Datamodel.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
