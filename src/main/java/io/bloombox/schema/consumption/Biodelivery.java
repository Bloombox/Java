/*
 * Copyright 2019, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: analytics/consumption/Biodelivery.proto

package io.bloombox.schema.consumption;

public final class Biodelivery {
  private Biodelivery() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Enumerates methods that enable a consumer to use cannabis.
   * </pre>
   *
   * Protobuf enum {@code bloombox.consumption.BiodeliveryMethod}
   */
  public enum BiodeliveryMethod
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default value: unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED_CONSUMPTION_METHOD = 0;</code>
     */
    UNSPECIFIED_CONSUMPTION_METHOD(0),
    /**
     * <pre>
     * Smoked cannabis, in some manner.
     * </pre>
     *
     * <code>INHALED = 1;</code>
     */
    INHALED(1),
    /**
     * <pre>
     * Edible cannabis, in some manner.
     * </pre>
     *
     * <code>INGESTED = 2;</code>
     */
    INGESTED(2),
    /**
     * <pre>
     * Topicals applied to the skin.
     * </pre>
     *
     * <code>TOPICAL = 3;</code>
     */
    TOPICAL(3),
    /**
     * <pre>
     * Transdermal, applied via patch to the skin.
     * </pre>
     *
     * <code>TRANSDERMAL = 4;</code>
     */
    TRANSDERMAL(4),
    /**
     * <pre>
     * Suppositories. They do exist.
     * </pre>
     *
     * <code>SUPPOSITORY = 5;</code>
     */
    SUPPOSITORY(5),
    /**
     * <pre>
     * Sublingual products (placed under the tongue). Usually in the form of strips.
     * </pre>
     *
     * <code>SUBLINGUAL = 6;</code>
     */
    SUBLINGUAL(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Default value: unspecified.
     * </pre>
     *
     * <code>UNSPECIFIED_CONSUMPTION_METHOD = 0;</code>
     */
    public static final int UNSPECIFIED_CONSUMPTION_METHOD_VALUE = 0;
    /**
     * <pre>
     * Smoked cannabis, in some manner.
     * </pre>
     *
     * <code>INHALED = 1;</code>
     */
    public static final int INHALED_VALUE = 1;
    /**
     * <pre>
     * Edible cannabis, in some manner.
     * </pre>
     *
     * <code>INGESTED = 2;</code>
     */
    public static final int INGESTED_VALUE = 2;
    /**
     * <pre>
     * Topicals applied to the skin.
     * </pre>
     *
     * <code>TOPICAL = 3;</code>
     */
    public static final int TOPICAL_VALUE = 3;
    /**
     * <pre>
     * Transdermal, applied via patch to the skin.
     * </pre>
     *
     * <code>TRANSDERMAL = 4;</code>
     */
    public static final int TRANSDERMAL_VALUE = 4;
    /**
     * <pre>
     * Suppositories. They do exist.
     * </pre>
     *
     * <code>SUPPOSITORY = 5;</code>
     */
    public static final int SUPPOSITORY_VALUE = 5;
    /**
     * <pre>
     * Sublingual products (placed under the tongue). Usually in the form of strips.
     * </pre>
     *
     * <code>SUBLINGUAL = 6;</code>
     */
    public static final int SUBLINGUAL_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BiodeliveryMethod valueOf(int value) {
      return forNumber(value);
    }

    public static BiodeliveryMethod forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED_CONSUMPTION_METHOD;
        case 1: return INHALED;
        case 2: return INGESTED;
        case 3: return TOPICAL;
        case 4: return TRANSDERMAL;
        case 5: return SUPPOSITORY;
        case 6: return SUBLINGUAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BiodeliveryMethod>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BiodeliveryMethod> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BiodeliveryMethod>() {
            public BiodeliveryMethod findValueByNumber(int number) {
              return BiodeliveryMethod.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.bloombox.schema.consumption.Biodelivery.getDescriptor().getEnumTypes().get(0);
    }

    private static final BiodeliveryMethod[] VALUES = values();

    public static BiodeliveryMethod valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BiodeliveryMethod(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:bloombox.consumption.BiodeliveryMethod)
  }

  public interface BiodeliveryInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.consumption.BiodeliveryInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * General method of consumption.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
     */
    int getMethodValue();
    /**
     * <pre>
     * General method of consumption.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
     */
    io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod getMethod();

    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via inhalation.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
     */
    boolean hasInhaled();
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via inhalation.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
     */
    io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled getInhaled();
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via inhalation.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
     */
    io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.InhaledOrBuilder getInhaledOrBuilder();

    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via ingestion.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
     */
    boolean hasIngested();
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via ingestion.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
     */
    io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested getIngested();
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via ingestion.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
     */
    io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.IngestedOrBuilder getIngestedOrBuilder();

    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
     */
    boolean hasTopical();
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
     */
    io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical getTopical();
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
     */
    io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.TopicalOrBuilder getTopicalOrBuilder();

    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.DetailsCase getDetailsCase();
  }
  /**
   * <pre>
   * Specifies full information about a method of consumption. Adds detailed information to a `ConsumptionMethod` enum
   * mapping value.
   * </pre>
   *
   * Protobuf type {@code bloombox.consumption.BiodeliveryInfo}
   */
  public  static final class BiodeliveryInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.consumption.BiodeliveryInfo)
      BiodeliveryInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BiodeliveryInfo.newBuilder() to construct.
    private BiodeliveryInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BiodeliveryInfo() {
      method_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BiodeliveryInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              method_ = rawValue;
              break;
            }
            case 82: {
              io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.Builder subBuilder = null;
              if (detailsCase_ == 10) {
                subBuilder = ((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_).toBuilder();
              }
              details_ =
                  input.readMessage(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_);
                details_ = subBuilder.buildPartial();
              }
              detailsCase_ = 10;
              break;
            }
            case 90: {
              io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.Builder subBuilder = null;
              if (detailsCase_ == 11) {
                subBuilder = ((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_).toBuilder();
              }
              details_ =
                  input.readMessage(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_);
                details_ = subBuilder.buildPartial();
              }
              detailsCase_ = 11;
              break;
            }
            case 98: {
              io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.Builder subBuilder = null;
              if (detailsCase_ == 12) {
                subBuilder = ((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_).toBuilder();
              }
              details_ =
                  input.readMessage(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_);
                details_ = subBuilder.buildPartial();
              }
              detailsCase_ = 12;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.class, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Builder.class);
    }

    public interface InhaledOrBuilder extends
        // @@protoc_insertion_point(interface_extends:bloombox.consumption.BiodeliveryInfo.Inhaled)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Specifies the type of inhaled cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
       */
      int getTypeValue();
      /**
       * <pre>
       * Specifies the type of inhaled cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
       */
      io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType getType();

      /**
       * <pre>
       * Specifies the tool used to inhale cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
       */
      int getToolValue();
      /**
       * <pre>
       * Specifies the tool used to inhale cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
       */
      io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool getTool();
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via inhalation.
     * </pre>
     *
     * Protobuf type {@code bloombox.consumption.BiodeliveryInfo.Inhaled}
     */
    public  static final class Inhaled extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:bloombox.consumption.BiodeliveryInfo.Inhaled)
        InhaledOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Inhaled.newBuilder() to construct.
      private Inhaled(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Inhaled() {
        type_ = 0;
        tool_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Inhaled(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                tool_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.class, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.Builder.class);
      }

      /**
       * <pre>
       * Indicates inhalation type.
       * </pre>
       *
       * Protobuf enum {@code bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType}
       */
      public enum InhaledCannabisType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Cannabis smoke.
         * </pre>
         *
         * <code>SMOKE = 0;</code>
         */
        SMOKE(0),
        /**
         * <pre>
         * Cannabis vapor.
         * </pre>
         *
         * <code>VAPOR = 1;</code>
         */
        VAPOR(1),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Cannabis smoke.
         * </pre>
         *
         * <code>SMOKE = 0;</code>
         */
        public static final int SMOKE_VALUE = 0;
        /**
         * <pre>
         * Cannabis vapor.
         * </pre>
         *
         * <code>VAPOR = 1;</code>
         */
        public static final int VAPOR_VALUE = 1;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static InhaledCannabisType valueOf(int value) {
          return forNumber(value);
        }

        public static InhaledCannabisType forNumber(int value) {
          switch (value) {
            case 0: return SMOKE;
            case 1: return VAPOR;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<InhaledCannabisType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            InhaledCannabisType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<InhaledCannabisType>() {
                public InhaledCannabisType findValueByNumber(int number) {
                  return InhaledCannabisType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDescriptor().getEnumTypes().get(0);
        }

        private static final InhaledCannabisType[] VALUES = values();

        public static InhaledCannabisType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private InhaledCannabisType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType)
      }

      /**
       * <pre>
       * Specifies tools used to inhale cannabis.
       * </pre>
       *
       * Protobuf enum {@code bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool}
       */
      public enum InhaledCannabisTool
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Generic, or unspecified, inhalation-based cannabis consumption tool.
         * </pre>
         *
         * <code>GENERIC_INHALED_TOOL = 0;</code>
         */
        GENERIC_INHALED_TOOL(0),
        /**
         * <pre>
         * Dry pipes with no water filtering.
         * </pre>
         *
         * <code>DRY_PIPE = 1;</code>
         */
        DRY_PIPE(1),
        /**
         * <pre>
         * Water pipes and bubblers.
         * </pre>
         *
         * <code>WATER_PIPE = 2;</code>
         */
        WATER_PIPE(2),
        /**
         * <pre>
         * Full bongs.
         * </pre>
         *
         * <code>BONG = 3;</code>
         */
        BONG(3),
        /**
         * <pre>
         * Rolled joints.
         * </pre>
         *
         * <code>ROLLED_JOINT = 4;</code>
         */
        ROLLED_JOINT(4),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Generic, or unspecified, inhalation-based cannabis consumption tool.
         * </pre>
         *
         * <code>GENERIC_INHALED_TOOL = 0;</code>
         */
        public static final int GENERIC_INHALED_TOOL_VALUE = 0;
        /**
         * <pre>
         * Dry pipes with no water filtering.
         * </pre>
         *
         * <code>DRY_PIPE = 1;</code>
         */
        public static final int DRY_PIPE_VALUE = 1;
        /**
         * <pre>
         * Water pipes and bubblers.
         * </pre>
         *
         * <code>WATER_PIPE = 2;</code>
         */
        public static final int WATER_PIPE_VALUE = 2;
        /**
         * <pre>
         * Full bongs.
         * </pre>
         *
         * <code>BONG = 3;</code>
         */
        public static final int BONG_VALUE = 3;
        /**
         * <pre>
         * Rolled joints.
         * </pre>
         *
         * <code>ROLLED_JOINT = 4;</code>
         */
        public static final int ROLLED_JOINT_VALUE = 4;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static InhaledCannabisTool valueOf(int value) {
          return forNumber(value);
        }

        public static InhaledCannabisTool forNumber(int value) {
          switch (value) {
            case 0: return GENERIC_INHALED_TOOL;
            case 1: return DRY_PIPE;
            case 2: return WATER_PIPE;
            case 3: return BONG;
            case 4: return ROLLED_JOINT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<InhaledCannabisTool>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            InhaledCannabisTool> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<InhaledCannabisTool>() {
                public InhaledCannabisTool findValueByNumber(int number) {
                  return InhaledCannabisTool.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDescriptor().getEnumTypes().get(1);
        }

        private static final InhaledCannabisTool[] VALUES = values();

        public static InhaledCannabisTool valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private InhaledCannabisTool(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool)
      }

      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <pre>
       * Specifies the type of inhaled cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Specifies the type of inhaled cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType getType() {
        @SuppressWarnings("deprecation")
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType.valueOf(type_);
        return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType.UNRECOGNIZED : result;
      }

      public static final int TOOL_FIELD_NUMBER = 2;
      private int tool_;
      /**
       * <pre>
       * Specifies the tool used to inhale cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
       */
      public int getToolValue() {
        return tool_;
      }
      /**
       * <pre>
       * Specifies the tool used to inhale cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool getTool() {
        @SuppressWarnings("deprecation")
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool.valueOf(tool_);
        return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (type_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType.SMOKE.getNumber()) {
          output.writeEnum(1, type_);
        }
        if (tool_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool.GENERIC_INHALED_TOOL.getNumber()) {
          output.writeEnum(2, tool_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (type_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType.SMOKE.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        if (tool_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool.GENERIC_INHALED_TOOL.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, tool_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled)) {
          return super.equals(obj);
        }
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled other = (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) obj;

        if (type_ != other.type_) return false;
        if (tool_ != other.tool_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (37 * hash) + TOOL_FIELD_NUMBER;
        hash = (53 * hash) + tool_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * Protobuf type {@code bloombox.consumption.BiodeliveryInfo.Inhaled}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:bloombox.consumption.BiodeliveryInfo.Inhaled)
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.InhaledOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.class, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.Builder.class);
        }

        // Construct using io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          type_ = 0;

          tool_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_descriptor;
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled getDefaultInstanceForType() {
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance();
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled build() {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled buildPartial() {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled result = new io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled(this);
          result.type_ = type_;
          result.tool_ = tool_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) {
            return mergeFrom((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled other) {
          if (other == io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance()) return this;
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.tool_ != 0) {
            setToolValue(other.getToolValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int type_ = 0;
        /**
         * <pre>
         * Specifies the type of inhaled cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
         */
        public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Specifies the type of inhaled cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
         */
        public Builder setTypeValue(int value) {
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the type of inhaled cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
         */
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType getType() {
          @SuppressWarnings("deprecation")
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType.valueOf(type_);
          return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Specifies the type of inhaled cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
         */
        public Builder setType(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the type of inhaled cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisType type = 1;</code>
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private int tool_ = 0;
        /**
         * <pre>
         * Specifies the tool used to inhale cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
         */
        public int getToolValue() {
          return tool_;
        }
        /**
         * <pre>
         * Specifies the tool used to inhale cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
         */
        public Builder setToolValue(int value) {
          tool_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the tool used to inhale cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
         */
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool getTool() {
          @SuppressWarnings("deprecation")
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool.valueOf(tool_);
          return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Specifies the tool used to inhale cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
         */
        public Builder setTool(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.InhaledCannabisTool value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          tool_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the tool used to inhale cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled.InhaledCannabisTool tool = 2;</code>
         */
        public Builder clearTool() {
          
          tool_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:bloombox.consumption.BiodeliveryInfo.Inhaled)
      }

      // @@protoc_insertion_point(class_scope:bloombox.consumption.BiodeliveryInfo.Inhaled)
      private static final io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled();
      }

      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Inhaled>
          PARSER = new com.google.protobuf.AbstractParser<Inhaled>() {
        @java.lang.Override
        public Inhaled parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Inhaled(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Inhaled> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Inhaled> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface IngestedOrBuilder extends
        // @@protoc_insertion_point(interface_extends:bloombox.consumption.BiodeliveryInfo.Ingested)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Specifies the type of ingested cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
       */
      int getTypeValue();
      /**
       * <pre>
       * Specifies the type of ingested cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
       */
      io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType getType();
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via ingestion.
     * </pre>
     *
     * Protobuf type {@code bloombox.consumption.BiodeliveryInfo.Ingested}
     */
    public  static final class Ingested extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:bloombox.consumption.BiodeliveryInfo.Ingested)
        IngestedOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Ingested.newBuilder() to construct.
      private Ingested(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Ingested() {
        type_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Ingested(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.class, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.Builder.class);
      }

      /**
       * <pre>
       * Enumerates types of ingested cannabis.
       * </pre>
       *
       * Protobuf enum {@code bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType}
       */
      public enum IngestedCannabisType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Generic, or unspecified, ingestion-based cannabis consumption.
         * </pre>
         *
         * <code>GENERIC_INGESTED_CANNABIS = 0;</code>
         */
        GENERIC_INGESTED_CANNABIS(0),
        /**
         * <pre>
         * Cannabis ingestion in the form of food, or edibles.
         * </pre>
         *
         * <code>FOOD = 1;</code>
         */
        FOOD(1),
        /**
         * <pre>
         * Measured-dose, ingested capsules.
         * </pre>
         *
         * <code>CAPSULE = 2;</code>
         */
        CAPSULE(2),
        /**
         * <pre>
         * Raw ingested cannabis flower.
         * </pre>
         *
         * <code>FLOWER = 3;</code>
         */
        FLOWER(3),
        /**
         * <pre>
         * Concentrated liquids added to other foods or taken sub-lingually.
         * </pre>
         *
         * <code>TINCTURE = 4;</code>
         */
        TINCTURE(4),
        /**
         * <pre>
         * Concentrated strips usually placed under the tongue.
         * </pre>
         *
         * <code>SUBLINGUAL = 5;</code>
         */
        SUBLINGUAL(5),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Generic, or unspecified, ingestion-based cannabis consumption.
         * </pre>
         *
         * <code>GENERIC_INGESTED_CANNABIS = 0;</code>
         */
        public static final int GENERIC_INGESTED_CANNABIS_VALUE = 0;
        /**
         * <pre>
         * Cannabis ingestion in the form of food, or edibles.
         * </pre>
         *
         * <code>FOOD = 1;</code>
         */
        public static final int FOOD_VALUE = 1;
        /**
         * <pre>
         * Measured-dose, ingested capsules.
         * </pre>
         *
         * <code>CAPSULE = 2;</code>
         */
        public static final int CAPSULE_VALUE = 2;
        /**
         * <pre>
         * Raw ingested cannabis flower.
         * </pre>
         *
         * <code>FLOWER = 3;</code>
         */
        public static final int FLOWER_VALUE = 3;
        /**
         * <pre>
         * Concentrated liquids added to other foods or taken sub-lingually.
         * </pre>
         *
         * <code>TINCTURE = 4;</code>
         */
        public static final int TINCTURE_VALUE = 4;
        /**
         * <pre>
         * Concentrated strips usually placed under the tongue.
         * </pre>
         *
         * <code>SUBLINGUAL = 5;</code>
         */
        public static final int SUBLINGUAL_VALUE = 5;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static IngestedCannabisType valueOf(int value) {
          return forNumber(value);
        }

        public static IngestedCannabisType forNumber(int value) {
          switch (value) {
            case 0: return GENERIC_INGESTED_CANNABIS;
            case 1: return FOOD;
            case 2: return CAPSULE;
            case 3: return FLOWER;
            case 4: return TINCTURE;
            case 5: return SUBLINGUAL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<IngestedCannabisType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            IngestedCannabisType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<IngestedCannabisType>() {
                public IngestedCannabisType findValueByNumber(int number) {
                  return IngestedCannabisType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDescriptor().getEnumTypes().get(0);
        }

        private static final IngestedCannabisType[] VALUES = values();

        public static IngestedCannabisType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private IngestedCannabisType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType)
      }

      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <pre>
       * Specifies the type of ingested cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Specifies the type of ingested cannabis.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType getType() {
        @SuppressWarnings("deprecation")
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType.valueOf(type_);
        return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (type_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType.GENERIC_INGESTED_CANNABIS.getNumber()) {
          output.writeEnum(1, type_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (type_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType.GENERIC_INGESTED_CANNABIS.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested)) {
          return super.equals(obj);
        }
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested other = (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) obj;

        if (type_ != other.type_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * Protobuf type {@code bloombox.consumption.BiodeliveryInfo.Ingested}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:bloombox.consumption.BiodeliveryInfo.Ingested)
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.IngestedOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.class, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.Builder.class);
        }

        // Construct using io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          type_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_descriptor;
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested getDefaultInstanceForType() {
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance();
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested build() {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested buildPartial() {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested result = new io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested(this);
          result.type_ = type_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) {
            return mergeFrom((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested other) {
          if (other == io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance()) return this;
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int type_ = 0;
        /**
         * <pre>
         * Specifies the type of ingested cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
         */
        public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Specifies the type of ingested cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
         */
        public Builder setTypeValue(int value) {
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the type of ingested cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
         */
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType getType() {
          @SuppressWarnings("deprecation")
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType.valueOf(type_);
          return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Specifies the type of ingested cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
         */
        public Builder setType(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.IngestedCannabisType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Specifies the type of ingested cannabis.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Ingested.IngestedCannabisType type = 1;</code>
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:bloombox.consumption.BiodeliveryInfo.Ingested)
      }

      // @@protoc_insertion_point(class_scope:bloombox.consumption.BiodeliveryInfo.Ingested)
      private static final io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested();
      }

      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Ingested>
          PARSER = new com.google.protobuf.AbstractParser<Ingested>() {
        @java.lang.Override
        public Ingested parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ingested(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Ingested> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Ingested> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TopicalOrBuilder extends
        // @@protoc_insertion_point(interface_extends:bloombox.consumption.BiodeliveryInfo.Topical)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Type of topical cannabis ingested.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
       */
      int getTypeValue();
      /**
       * <pre>
       * Type of topical cannabis ingested.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
       */
      io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType getType();
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
     * </pre>
     *
     * Protobuf type {@code bloombox.consumption.BiodeliveryInfo.Topical}
     */
    public  static final class Topical extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:bloombox.consumption.BiodeliveryInfo.Topical)
        TopicalOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Topical.newBuilder() to construct.
      private Topical(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Topical() {
        type_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Topical(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Topical_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Topical_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.class, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.Builder.class);
      }

      /**
       * <pre>
       * Enumerates types of topical cannabis delivery.
       * </pre>
       *
       * Protobuf enum {@code bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType}
       */
      public enum TopicalCannabisType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Generic, or unspecified, topical-based cannabis consumption.
         * </pre>
         *
         * <code>GENERIC_TOPICAL_CANNABIS = 0;</code>
         */
        GENERIC_TOPICAL_CANNABIS(0),
        /**
         * <pre>
         * Ointments and creams containing cannabis.
         * </pre>
         *
         * <code>OINTMENT = 1;</code>
         */
        OINTMENT(1),
        /**
         * <pre>
         * Transdermal patches containing cannabis.
         * </pre>
         *
         * <code>TRANSDERMAL = 2;</code>
         */
        TRANSDERMAL(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Generic, or unspecified, topical-based cannabis consumption.
         * </pre>
         *
         * <code>GENERIC_TOPICAL_CANNABIS = 0;</code>
         */
        public static final int GENERIC_TOPICAL_CANNABIS_VALUE = 0;
        /**
         * <pre>
         * Ointments and creams containing cannabis.
         * </pre>
         *
         * <code>OINTMENT = 1;</code>
         */
        public static final int OINTMENT_VALUE = 1;
        /**
         * <pre>
         * Transdermal patches containing cannabis.
         * </pre>
         *
         * <code>TRANSDERMAL = 2;</code>
         */
        public static final int TRANSDERMAL_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TopicalCannabisType valueOf(int value) {
          return forNumber(value);
        }

        public static TopicalCannabisType forNumber(int value) {
          switch (value) {
            case 0: return GENERIC_TOPICAL_CANNABIS;
            case 1: return OINTMENT;
            case 2: return TRANSDERMAL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<TopicalCannabisType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            TopicalCannabisType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TopicalCannabisType>() {
                public TopicalCannabisType findValueByNumber(int number) {
                  return TopicalCannabisType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDescriptor().getEnumTypes().get(0);
        }

        private static final TopicalCannabisType[] VALUES = values();

        public static TopicalCannabisType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private TopicalCannabisType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType)
      }

      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <pre>
       * Type of topical cannabis ingested.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type of topical cannabis ingested.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType getType() {
        @SuppressWarnings("deprecation")
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType.valueOf(type_);
        return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (type_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType.GENERIC_TOPICAL_CANNABIS.getNumber()) {
          output.writeEnum(1, type_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (type_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType.GENERIC_TOPICAL_CANNABIS.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical)) {
          return super.equals(obj);
        }
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical other = (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) obj;

        if (type_ != other.type_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * Protobuf type {@code bloombox.consumption.BiodeliveryInfo.Topical}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:bloombox.consumption.BiodeliveryInfo.Topical)
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.TopicalOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Topical_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Topical_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.class, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.Builder.class);
        }

        // Construct using io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          type_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_Topical_descriptor;
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical getDefaultInstanceForType() {
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance();
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical build() {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical buildPartial() {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical result = new io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical(this);
          result.type_ = type_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) {
            return mergeFrom((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical other) {
          if (other == io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance()) return this;
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int type_ = 0;
        /**
         * <pre>
         * Type of topical cannabis ingested.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
         */
        public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Type of topical cannabis ingested.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
         */
        public Builder setTypeValue(int value) {
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type of topical cannabis ingested.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
         */
        public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType getType() {
          @SuppressWarnings("deprecation")
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType.valueOf(type_);
          return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Type of topical cannabis ingested.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
         */
        public Builder setType(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.TopicalCannabisType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type of topical cannabis ingested.
         * </pre>
         *
         * <code>.bloombox.consumption.BiodeliveryInfo.Topical.TopicalCannabisType type = 1;</code>
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:bloombox.consumption.BiodeliveryInfo.Topical)
      }

      // @@protoc_insertion_point(class_scope:bloombox.consumption.BiodeliveryInfo.Topical)
      private static final io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical();
      }

      public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Topical>
          PARSER = new com.google.protobuf.AbstractParser<Topical>() {
        @java.lang.Override
        public Topical parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Topical(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Topical> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Topical> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int detailsCase_ = 0;
    private java.lang.Object details_;
    public enum DetailsCase
        implements com.google.protobuf.Internal.EnumLite {
      INHALED(10),
      INGESTED(11),
      TOPICAL(12),
      DETAILS_NOT_SET(0);
      private final int value;
      private DetailsCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DetailsCase valueOf(int value) {
        return forNumber(value);
      }

      public static DetailsCase forNumber(int value) {
        switch (value) {
          case 10: return INHALED;
          case 11: return INGESTED;
          case 12: return TOPICAL;
          case 0: return DETAILS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DetailsCase
    getDetailsCase() {
      return DetailsCase.forNumber(
          detailsCase_);
    }

    public static final int METHOD_FIELD_NUMBER = 1;
    private int method_;
    /**
     * <pre>
     * General method of consumption.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
     */
    public int getMethodValue() {
      return method_;
    }
    /**
     * <pre>
     * General method of consumption.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
     */
    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod getMethod() {
      @SuppressWarnings("deprecation")
      io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod.valueOf(method_);
      return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod.UNRECOGNIZED : result;
    }

    public static final int INHALED_FIELD_NUMBER = 10;
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via inhalation.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
     */
    public boolean hasInhaled() {
      return detailsCase_ == 10;
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via inhalation.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
     */
    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled getInhaled() {
      if (detailsCase_ == 10) {
         return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_;
      }
      return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance();
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via inhalation.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
     */
    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.InhaledOrBuilder getInhaledOrBuilder() {
      if (detailsCase_ == 10) {
         return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_;
      }
      return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance();
    }

    public static final int INGESTED_FIELD_NUMBER = 11;
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via ingestion.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
     */
    public boolean hasIngested() {
      return detailsCase_ == 11;
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via ingestion.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
     */
    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested getIngested() {
      if (detailsCase_ == 11) {
         return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_;
      }
      return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance();
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via ingestion.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
     */
    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.IngestedOrBuilder getIngestedOrBuilder() {
      if (detailsCase_ == 11) {
         return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_;
      }
      return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance();
    }

    public static final int TOPICAL_FIELD_NUMBER = 12;
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
     */
    public boolean hasTopical() {
      return detailsCase_ == 12;
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
     */
    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical getTopical() {
      if (detailsCase_ == 12) {
         return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_;
      }
      return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance();
    }
    /**
     * <pre>
     * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
     * </pre>
     *
     * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
     */
    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.TopicalOrBuilder getTopicalOrBuilder() {
      if (detailsCase_ == 12) {
         return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_;
      }
      return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (method_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod.UNSPECIFIED_CONSUMPTION_METHOD.getNumber()) {
        output.writeEnum(1, method_);
      }
      if (detailsCase_ == 10) {
        output.writeMessage(10, (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_);
      }
      if (detailsCase_ == 11) {
        output.writeMessage(11, (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_);
      }
      if (detailsCase_ == 12) {
        output.writeMessage(12, (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (method_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod.UNSPECIFIED_CONSUMPTION_METHOD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, method_);
      }
      if (detailsCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_);
      }
      if (detailsCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_);
      }
      if (detailsCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo)) {
        return super.equals(obj);
      }
      io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo other = (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo) obj;

      if (method_ != other.method_) return false;
      if (!getDetailsCase().equals(other.getDetailsCase())) return false;
      switch (detailsCase_) {
        case 10:
          if (!getInhaled()
              .equals(other.getInhaled())) return false;
          break;
        case 11:
          if (!getIngested()
              .equals(other.getIngested())) return false;
          break;
        case 12:
          if (!getTopical()
              .equals(other.getTopical())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METHOD_FIELD_NUMBER;
      hash = (53 * hash) + method_;
      switch (detailsCase_) {
        case 10:
          hash = (37 * hash) + INHALED_FIELD_NUMBER;
          hash = (53 * hash) + getInhaled().hashCode();
          break;
        case 11:
          hash = (37 * hash) + INGESTED_FIELD_NUMBER;
          hash = (53 * hash) + getIngested().hashCode();
          break;
        case 12:
          hash = (37 * hash) + TOPICAL_FIELD_NUMBER;
          hash = (53 * hash) + getTopical().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies full information about a method of consumption. Adds detailed information to a `ConsumptionMethod` enum
     * mapping value.
     * </pre>
     *
     * Protobuf type {@code bloombox.consumption.BiodeliveryInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.consumption.BiodeliveryInfo)
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.class, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Builder.class);
      }

      // Construct using io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        method_ = 0;

        detailsCase_ = 0;
        details_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.consumption.Biodelivery.internal_static_bloombox_consumption_BiodeliveryInfo_descriptor;
      }

      @java.lang.Override
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo getDefaultInstanceForType() {
        return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.getDefaultInstance();
      }

      @java.lang.Override
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo build() {
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo buildPartial() {
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo result = new io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo(this);
        result.method_ = method_;
        if (detailsCase_ == 10) {
          if (inhaledBuilder_ == null) {
            result.details_ = details_;
          } else {
            result.details_ = inhaledBuilder_.build();
          }
        }
        if (detailsCase_ == 11) {
          if (ingestedBuilder_ == null) {
            result.details_ = details_;
          } else {
            result.details_ = ingestedBuilder_.build();
          }
        }
        if (detailsCase_ == 12) {
          if (topicalBuilder_ == null) {
            result.details_ = details_;
          } else {
            result.details_ = topicalBuilder_.build();
          }
        }
        result.detailsCase_ = detailsCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo) {
          return mergeFrom((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo other) {
        if (other == io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.getDefaultInstance()) return this;
        if (other.method_ != 0) {
          setMethodValue(other.getMethodValue());
        }
        switch (other.getDetailsCase()) {
          case INHALED: {
            mergeInhaled(other.getInhaled());
            break;
          }
          case INGESTED: {
            mergeIngested(other.getIngested());
            break;
          }
          case TOPICAL: {
            mergeTopical(other.getTopical());
            break;
          }
          case DETAILS_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int detailsCase_ = 0;
      private java.lang.Object details_;
      public DetailsCase
          getDetailsCase() {
        return DetailsCase.forNumber(
            detailsCase_);
      }

      public Builder clearDetails() {
        detailsCase_ = 0;
        details_ = null;
        onChanged();
        return this;
      }


      private int method_ = 0;
      /**
       * <pre>
       * General method of consumption.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
       */
      public int getMethodValue() {
        return method_;
      }
      /**
       * <pre>
       * General method of consumption.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
       */
      public Builder setMethodValue(int value) {
        method_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * General method of consumption.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod getMethod() {
        @SuppressWarnings("deprecation")
        io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod result = io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod.valueOf(method_);
        return result == null ? io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * General method of consumption.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
       */
      public Builder setMethod(io.bloombox.schema.consumption.Biodelivery.BiodeliveryMethod value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        method_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * General method of consumption.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryMethod method = 1;</code>
       */
      public Builder clearMethod() {
        
        method_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.InhaledOrBuilder> inhaledBuilder_;
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      public boolean hasInhaled() {
        return detailsCase_ == 10;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled getInhaled() {
        if (inhaledBuilder_ == null) {
          if (detailsCase_ == 10) {
            return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_;
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance();
        } else {
          if (detailsCase_ == 10) {
            return inhaledBuilder_.getMessage();
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      public Builder setInhaled(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled value) {
        if (inhaledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          details_ = value;
          onChanged();
        } else {
          inhaledBuilder_.setMessage(value);
        }
        detailsCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      public Builder setInhaled(
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.Builder builderForValue) {
        if (inhaledBuilder_ == null) {
          details_ = builderForValue.build();
          onChanged();
        } else {
          inhaledBuilder_.setMessage(builderForValue.build());
        }
        detailsCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      public Builder mergeInhaled(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled value) {
        if (inhaledBuilder_ == null) {
          if (detailsCase_ == 10 &&
              details_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance()) {
            details_ = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.newBuilder((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_)
                .mergeFrom(value).buildPartial();
          } else {
            details_ = value;
          }
          onChanged();
        } else {
          if (detailsCase_ == 10) {
            inhaledBuilder_.mergeFrom(value);
          }
          inhaledBuilder_.setMessage(value);
        }
        detailsCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      public Builder clearInhaled() {
        if (inhaledBuilder_ == null) {
          if (detailsCase_ == 10) {
            detailsCase_ = 0;
            details_ = null;
            onChanged();
          }
        } else {
          if (detailsCase_ == 10) {
            detailsCase_ = 0;
            details_ = null;
          }
          inhaledBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.Builder getInhaledBuilder() {
        return getInhaledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.InhaledOrBuilder getInhaledOrBuilder() {
        if ((detailsCase_ == 10) && (inhaledBuilder_ != null)) {
          return inhaledBuilder_.getMessageOrBuilder();
        } else {
          if (detailsCase_ == 10) {
            return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_;
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via inhalation.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Inhaled inhaled = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.InhaledOrBuilder> 
          getInhaledFieldBuilder() {
        if (inhaledBuilder_ == null) {
          if (!(detailsCase_ == 10)) {
            details_ = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.getDefaultInstance();
          }
          inhaledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.InhaledOrBuilder>(
                  (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Inhaled) details_,
                  getParentForChildren(),
                  isClean());
          details_ = null;
        }
        detailsCase_ = 10;
        onChanged();;
        return inhaledBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.IngestedOrBuilder> ingestedBuilder_;
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      public boolean hasIngested() {
        return detailsCase_ == 11;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested getIngested() {
        if (ingestedBuilder_ == null) {
          if (detailsCase_ == 11) {
            return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_;
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance();
        } else {
          if (detailsCase_ == 11) {
            return ingestedBuilder_.getMessage();
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      public Builder setIngested(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested value) {
        if (ingestedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          details_ = value;
          onChanged();
        } else {
          ingestedBuilder_.setMessage(value);
        }
        detailsCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      public Builder setIngested(
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.Builder builderForValue) {
        if (ingestedBuilder_ == null) {
          details_ = builderForValue.build();
          onChanged();
        } else {
          ingestedBuilder_.setMessage(builderForValue.build());
        }
        detailsCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      public Builder mergeIngested(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested value) {
        if (ingestedBuilder_ == null) {
          if (detailsCase_ == 11 &&
              details_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance()) {
            details_ = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.newBuilder((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_)
                .mergeFrom(value).buildPartial();
          } else {
            details_ = value;
          }
          onChanged();
        } else {
          if (detailsCase_ == 11) {
            ingestedBuilder_.mergeFrom(value);
          }
          ingestedBuilder_.setMessage(value);
        }
        detailsCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      public Builder clearIngested() {
        if (ingestedBuilder_ == null) {
          if (detailsCase_ == 11) {
            detailsCase_ = 0;
            details_ = null;
            onChanged();
          }
        } else {
          if (detailsCase_ == 11) {
            detailsCase_ = 0;
            details_ = null;
          }
          ingestedBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.Builder getIngestedBuilder() {
        return getIngestedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.IngestedOrBuilder getIngestedOrBuilder() {
        if ((detailsCase_ == 11) && (ingestedBuilder_ != null)) {
          return ingestedBuilder_.getMessageOrBuilder();
        } else {
          if (detailsCase_ == 11) {
            return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_;
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via ingestion.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Ingested ingested = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.IngestedOrBuilder> 
          getIngestedFieldBuilder() {
        if (ingestedBuilder_ == null) {
          if (!(detailsCase_ == 11)) {
            details_ = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.getDefaultInstance();
          }
          ingestedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.IngestedOrBuilder>(
                  (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Ingested) details_,
                  getParentForChildren(),
                  isClean());
          details_ = null;
        }
        detailsCase_ = 11;
        onChanged();;
        return ingestedBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.TopicalOrBuilder> topicalBuilder_;
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      public boolean hasTopical() {
        return detailsCase_ == 12;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical getTopical() {
        if (topicalBuilder_ == null) {
          if (detailsCase_ == 12) {
            return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_;
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance();
        } else {
          if (detailsCase_ == 12) {
            return topicalBuilder_.getMessage();
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      public Builder setTopical(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical value) {
        if (topicalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          details_ = value;
          onChanged();
        } else {
          topicalBuilder_.setMessage(value);
        }
        detailsCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      public Builder setTopical(
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.Builder builderForValue) {
        if (topicalBuilder_ == null) {
          details_ = builderForValue.build();
          onChanged();
        } else {
          topicalBuilder_.setMessage(builderForValue.build());
        }
        detailsCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      public Builder mergeTopical(io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical value) {
        if (topicalBuilder_ == null) {
          if (detailsCase_ == 12 &&
              details_ != io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance()) {
            details_ = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.newBuilder((io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_)
                .mergeFrom(value).buildPartial();
          } else {
            details_ = value;
          }
          onChanged();
        } else {
          if (detailsCase_ == 12) {
            topicalBuilder_.mergeFrom(value);
          }
          topicalBuilder_.setMessage(value);
        }
        detailsCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      public Builder clearTopical() {
        if (topicalBuilder_ == null) {
          if (detailsCase_ == 12) {
            detailsCase_ = 0;
            details_ = null;
            onChanged();
          }
        } else {
          if (detailsCase_ == 12) {
            detailsCase_ = 0;
            details_ = null;
          }
          topicalBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.Builder getTopicalBuilder() {
        return getTopicalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.TopicalOrBuilder getTopicalOrBuilder() {
        if ((detailsCase_ == 12) && (topicalBuilder_ != null)) {
          return topicalBuilder_.getMessageOrBuilder();
        } else {
          if (detailsCase_ == 12) {
            return (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_;
          }
          return io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Specifies detailed information about cannabis consumption via topical (cream-based) medicines.
       * </pre>
       *
       * <code>.bloombox.consumption.BiodeliveryInfo.Topical topical = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.TopicalOrBuilder> 
          getTopicalFieldBuilder() {
        if (topicalBuilder_ == null) {
          if (!(detailsCase_ == 12)) {
            details_ = io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.getDefaultInstance();
          }
          topicalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical.Builder, io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.TopicalOrBuilder>(
                  (io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo.Topical) details_,
                  getParentForChildren(),
                  isClean());
          details_ = null;
        }
        detailsCase_ = 12;
        onChanged();;
        return topicalBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.consumption.BiodeliveryInfo)
    }

    // @@protoc_insertion_point(class_scope:bloombox.consumption.BiodeliveryInfo)
    private static final io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo();
    }

    public static io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BiodeliveryInfo>
        PARSER = new com.google.protobuf.AbstractParser<BiodeliveryInfo>() {
      @java.lang.Override
      public BiodeliveryInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BiodeliveryInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BiodeliveryInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BiodeliveryInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.bloombox.schema.consumption.Biodelivery.BiodeliveryInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_consumption_BiodeliveryInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_consumption_BiodeliveryInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_consumption_BiodeliveryInfo_Topical_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_consumption_BiodeliveryInfo_Topical_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'analytics/consumption/Biodelivery.prot" +
      "o\022\024bloombox.consumption\"\354\007\n\017BiodeliveryI" +
      "nfo\0227\n\006method\030\001 \001(\0162\'.bloombox.consumpti" +
      "on.BiodeliveryMethod\022@\n\007inhaled\030\n \001(\0132-." +
      "bloombox.consumption.BiodeliveryInfo.Inh" +
      "aledH\000\022B\n\010ingested\030\013 \001(\0132..bloombox.cons" +
      "umption.BiodeliveryInfo.IngestedH\000\022@\n\007to" +
      "pical\030\014 \001(\0132-.bloombox.consumption.Biode" +
      "liveryInfo.TopicalH\000\032\303\002\n\007Inhaled\022O\n\004type" +
      "\030\001 \001(\0162A.bloombox.consumption.Biodeliver" +
      "yInfo.Inhaled.InhaledCannabisType\022O\n\004too" +
      "l\030\002 \001(\0162A.bloombox.consumption.Biodelive" +
      "ryInfo.Inhaled.InhaledCannabisTool\"+\n\023In" +
      "haledCannabisType\022\t\n\005SMOKE\020\000\022\t\n\005VAPOR\020\001\"" +
      "i\n\023InhaledCannabisTool\022\030\n\024GENERIC_INHALE" +
      "D_TOOL\020\000\022\014\n\010DRY_PIPE\020\001\022\016\n\nWATER_PIPE\020\002\022\010" +
      "\n\004BONG\020\003\022\020\n\014ROLLED_JOINT\020\004\032\325\001\n\010Ingested\022" +
      "Q\n\004type\030\001 \001(\0162C.bloombox.consumption.Bio" +
      "deliveryInfo.Ingested.IngestedCannabisTy" +
      "pe\"v\n\024IngestedCannabisType\022\035\n\031GENERIC_IN" +
      "GESTED_CANNABIS\020\000\022\010\n\004FOOD\020\001\022\013\n\007CAPSULE\020\002" +
      "\022\n\n\006FLOWER\020\003\022\014\n\010TINCTURE\020\004\022\016\n\nSUBLINGUAL" +
      "\020\005\032\256\001\n\007Topical\022O\n\004type\030\001 \001(\0162A.bloombox." +
      "consumption.BiodeliveryInfo.Topical.Topi" +
      "calCannabisType\"R\n\023TopicalCannabisType\022\034" +
      "\n\030GENERIC_TOPICAL_CANNABIS\020\000\022\014\n\010OINTMENT" +
      "\020\001\022\017\n\013TRANSDERMAL\020\002B\t\n\007details*\221\001\n\021Biode" +
      "liveryMethod\022\"\n\036UNSPECIFIED_CONSUMPTION_" +
      "METHOD\020\000\022\013\n\007INHALED\020\001\022\014\n\010INGESTED\020\002\022\013\n\007T" +
      "OPICAL\020\003\022\017\n\013TRANSDERMAL\020\004\022\017\n\013SUPPOSITORY" +
      "\020\005\022\016\n\nSUBLINGUAL\020\006B7\n\036io.bloombox.schema" +
      ".consumptionB\013BiodeliveryH\001P\000\242\002\003BBSb\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_bloombox_consumption_BiodeliveryInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_consumption_BiodeliveryInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_consumption_BiodeliveryInfo_descriptor,
        new java.lang.String[] { "Method", "Inhaled", "Ingested", "Topical", "Details", });
    internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_descriptor =
      internal_static_bloombox_consumption_BiodeliveryInfo_descriptor.getNestedTypes().get(0);
    internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_consumption_BiodeliveryInfo_Inhaled_descriptor,
        new java.lang.String[] { "Type", "Tool", });
    internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_descriptor =
      internal_static_bloombox_consumption_BiodeliveryInfo_descriptor.getNestedTypes().get(1);
    internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_consumption_BiodeliveryInfo_Ingested_descriptor,
        new java.lang.String[] { "Type", });
    internal_static_bloombox_consumption_BiodeliveryInfo_Topical_descriptor =
      internal_static_bloombox_consumption_BiodeliveryInfo_descriptor.getNestedTypes().get(2);
    internal_static_bloombox_consumption_BiodeliveryInfo_Topical_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_consumption_BiodeliveryInfo_Topical_descriptor,
        new java.lang.String[] { "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
