// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/ids/UserDoctorRec.proto

package io.bloombox.schema.identity.ids;

public final class UserDoctorRecOuterClass {
  private UserDoctorRecOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_identity_ids_UserDoctorRec_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_identity_ids_UserDoctorRec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n identity/ids/UserDoctorRec.proto\022\034bloo" +
      "mbox.schema.identity.ids\032\016bq_field.proto" +
      "\032\021geo/USState.proto\032\023person/Person.proto" +
      "\032\023temporal/Date.proto\"\331\003\n\rUserDoctorRec\022" +
      "%\n\002id\030\001 \001(\tB\031\212@\026ID number/unique code.\022`" +
      "\n\017expiration_date\030\002 \001(\0132\033.opencannabis.t" +
      "emporal.DateB*\212@\'Expiration date for the" +
      " recommendation.\022&\n\007barcode\030\003 \001(\tB\025\212@\022Ra" +
      "w barcode value.\022\\\n\005state\030\004 \001(\0162\035.openca" +
      "nnabis.geo.usa.USStateB.\212@+US state wher" +
      "e the recommendation is valid.\0223\n\007countr" +
      "y\030\005 \001(\tB\"\212@\037Country for the recommendati" +
      "on.\022)\n\tdoctor_id\030\006 \001(\tB\026\212@\023Doctor\'s uniq" +
      "ue ID.\022Y\n\006doctor\030\007 \001(\0132\033.opencannabis.pe" +
      "rson.PersonB,\212@)Personal information abo" +
      "ut the physician.B+\n\037io.bloombox.schema." +
      "identity.idsH\001P\001\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gen_bq_schema.BqField.getDescriptor(),
          io.opencannabis.schema.geo.usa.USStateOuterClass.getDescriptor(),
          io.opencannabis.schema.person.PersonOuterClass.getDescriptor(),
          io.opencannabis.schema.temporal.DateOuterClass.getDescriptor(),
        }, assigner);
    internal_static_bloombox_schema_identity_ids_UserDoctorRec_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_schema_identity_ids_UserDoctorRec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_identity_ids_UserDoctorRec_descriptor,
        new java.lang.String[] { "Id", "ExpirationDate", "Barcode", "State", "Country", "DoctorId", "Doctor", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    gen_bq_schema.BqField.getDescriptor();
    io.opencannabis.schema.geo.usa.USStateOuterClass.getDescriptor();
    io.opencannabis.schema.person.PersonOuterClass.getDescriptor();
    io.opencannabis.schema.temporal.DateOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
