/*
 * Copyright 2017, Bloombox, LLC. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual property
 * of Bloombox, a California Limited Liability Corporation. Use of this code in source form
 * requires permission in writing before use or the publishing of derivative works, for
 * commercial purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/ids/UserDoctorRec.proto

package io.bloombox.schema.identity.ids;

public interface UserDoctorRecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:identity.ids.UserDoctorRec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ID number/unique code.
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  java.lang.String getId();
  /**
   * <pre>
   * ID number/unique code.
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Expiration date for the recommendation.
   * </pre>
   *
   * <code>.temporal.Date expiration_date = 2;</code>
   */
  boolean hasExpirationDate();
  /**
   * <pre>
   * Expiration date for the recommendation.
   * </pre>
   *
   * <code>.temporal.Date expiration_date = 2;</code>
   */
  io.bloombox.schema.temporal.Date getExpirationDate();
  /**
   * <pre>
   * Expiration date for the recommendation.
   * </pre>
   *
   * <code>.temporal.Date expiration_date = 2;</code>
   */
  io.bloombox.schema.temporal.DateOrBuilder getExpirationDateOrBuilder();

  /**
   * <pre>
   * Raw barcode value.
   * </pre>
   *
   * <code>string barcode = 3;</code>
   */
  java.lang.String getBarcode();
  /**
   * <pre>
   * Raw barcode value.
   * </pre>
   *
   * <code>string barcode = 3;</code>
   */
  com.google.protobuf.ByteString
      getBarcodeBytes();

  /**
   * <pre>
   * US state where the recommendation is valid.
   * </pre>
   *
   * <code>.geo.usa.USState state = 4;</code>
   */
  int getStateValue();
  /**
   * <pre>
   * US state where the recommendation is valid.
   * </pre>
   *
   * <code>.geo.usa.USState state = 4;</code>
   */
  io.bloombox.schema.geo.usa.USState getState();

  /**
   * <pre>
   * Country for the recommendation.
   * </pre>
   *
   * <code>string country = 5;</code>
   */
  java.lang.String getCountry();
  /**
   * <pre>
   * Country for the recommendation.
   * </pre>
   *
   * <code>string country = 5;</code>
   */
  com.google.protobuf.ByteString
      getCountryBytes();

  /**
   * <pre>
   * Doctor's unique ID.
   * </pre>
   *
   * <code>string doctor_id = 6;</code>
   */
  java.lang.String getDoctorId();
  /**
   * <pre>
   * Doctor's unique ID.
   * </pre>
   *
   * <code>string doctor_id = 6;</code>
   */
  com.google.protobuf.ByteString
      getDoctorIdBytes();

  /**
   * <pre>
   * Person that backs the doctor.
   * </pre>
   *
   * <code>.person.Person doctor = 7;</code>
   */
  boolean hasDoctor();
  /**
   * <pre>
   * Person that backs the doctor.
   * </pre>
   *
   * <code>.person.Person doctor = 7;</code>
   */
  io.bloombox.schema.person.Person getDoctor();
  /**
   * <pre>
   * Person that backs the doctor.
   * </pre>
   *
   * <code>.person.Person doctor = 7;</code>
   */
  io.bloombox.schema.person.PersonOrBuilder getDoctorOrBuilder();
}
