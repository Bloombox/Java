/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/ids/USDL.proto

package io.bloombox.schema.identity.ids;

public final class DriversLicenseID {
  private DriversLicenseID() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Enumerates known fields on a US Driver's License, that may be expressed or extracted via data entry/scanning of the
   * document with OCR or reading the document's barcodes.
   * </pre>
   *
   * Protobuf enum {@code bloombox.schema.identity.ids.USDLField}
   */
  public enum USDLField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Raw barcode data for the back USDL barcode, which usually carries most of the data and is generally encoded using
     * PDF417 (for instance, this is the case for California and New York).
     * </pre>
     *
     * <code>BACK_BARCODE = 0;</code>
     */
    BACK_BARCODE(0),
    /**
     * <pre>
     * Person's family name, or last name.
     * </pre>
     *
     * <code>FAMILY_NAME = 1;</code>
     */
    FAMILY_NAME(1),
    /**
     * <pre>
     * Person's first anme, or given name.
     * </pre>
     *
     * <code>GIVEN_NAME = 2;</code>
     */
    GIVEN_NAME(2),
    /**
     * <pre>
     * Person's middle name.
     * </pre>
     *
     * <code>MIDDLE_NAME = 3;</code>
     */
    MIDDLE_NAME(3),
    /**
     * <pre>
     * Person's full name, expressed in a concatenated field.
     * </pre>
     *
     * <code>FULL_NAME = 4;</code>
     */
    FULL_NAME(4),
    /**
     * <pre>
     * Person's name prefix, like "Dr" or some other salutation.
     * </pre>
     *
     * <code>NAME_PREFIX = 5;</code>
     */
    NAME_PREFIX(5),
    /**
     * <pre>
     * Person's name suffix, like "III".
     * </pre>
     *
     * <code>NAME_SUFFIX = 6;</code>
     */
    NAME_SUFFIX(6),
    /**
     * <pre>
     * Date of birth for this person.
     * </pre>
     *
     * <code>DATE_OF_BIRTH = 10;</code>
     */
    DATE_OF_BIRTH(10),
    /**
     * <pre>
     * Gender specified for this person.
     * </pre>
     *
     * <code>SEX = 11;</code>
     */
    SEX(11),
    /**
     * <pre>
     * Physical height specified for this person.
     * </pre>
     *
     * <code>HEIGHT = 12;</code>
     */
    HEIGHT(12),
    /**
     * <pre>
     * Physical weight specified for this person.
     * </pre>
     *
     * <code>WEIGHT = 13;</code>
     */
    WEIGHT(13),
    /**
     * <pre>
     * Eye color specified for this person.
     * </pre>
     *
     * <code>EYE_COLOR = 14;</code>
     */
    EYE_COLOR(14),
    /**
     * <pre>
     * Hair color specified for this person.
     * </pre>
     *
     * <code>HAIR_COLOR = 15;</code>
     */
    HAIR_COLOR(15),
    /**
     * <pre>
     * Full, concatenated main user address string.
     * </pre>
     *
     * <code>FULL_ADDRESS = 20;</code>
     */
    FULL_ADDRESS(20),
    /**
     * <pre>
     * First line of the main address.
     * </pre>
     *
     * <code>ADDRESS_LINE = 21;</code>
     */
    ADDRESS_LINE(21),
    /**
     * <pre>
     * Second line of the main address.
     * </pre>
     *
     * <code>ADDRESS_LINE2 = 22;</code>
     */
    ADDRESS_LINE2(22),
    /**
     * <pre>
     * City name from the main address.
     * </pre>
     *
     * <code>ADDRESS_CITY = 23;</code>
     */
    ADDRESS_CITY(23),
    /**
     * <pre>
     * Postal or zip code from the main address.
     * </pre>
     *
     * <code>POSTAL_CODE = 24;</code>
     */
    POSTAL_CODE(24),
    /**
     * <pre>
     * Issuing state jurisdiction code for this document.
     * </pre>
     *
     * <code>STATE_JURISDICTION = 25;</code>
     */
    STATE_JURISDICTION(25),
    /**
     * <pre>
     * ID number for this license document.
     * </pre>
     *
     * <code>LICENSE_ID = 30;</code>
     */
    LICENSE_ID(30),
    /**
     * <pre>
     * Issuance date for this license document.
     * </pre>
     *
     * <code>LICENSE_ISSUE_DATE = 31;</code>
     */
    LICENSE_ISSUE_DATE(31),
    /**
     * <pre>
     * Expiration date for this license document.
     * </pre>
     *
     * <code>LICENSE_EXPIRY_DATE = 32;</code>
     */
    LICENSE_EXPIRY_DATE(32),
    /**
     * <pre>
     * Jurisdiction of issuance for this license document.
     * </pre>
     *
     * <code>ISSUER_JURISDICTION = 33;</code>
     */
    ISSUER_JURISDICTION(33),
    /**
     * <pre>
     * Jurisdiction-scoped format specifier for this document.
     * </pre>
     *
     * <code>ISSUER_JURISDICTION_FORMAT_VERSION = 34;</code>
     */
    ISSUER_JURISDICTION_FORMAT_VERSION(34),
    /**
     * <pre>
     * Unique document code for this specific instance of a license document.
     * </pre>
     *
     * <code>UNIQUE_DOCUMENT_CODE = 40;</code>
     */
    UNIQUE_DOCUMENT_CODE(40),
    /**
     * <pre>
     * Inventory unique control code, used for license document disambiguation if specified.
     * </pre>
     *
     * <code>INVENTORY_CONTROL_CODE = 41;</code>
     */
    INVENTORY_CONTROL_CODE(41),
    /**
     * <pre>
     * Date the user will turn 18 years old.
     * </pre>
     *
     * <code>UNDER_18_DATE = 50;</code>
     */
    UNDER_18_DATE(50),
    /**
     * <pre>
     * Date the user will turn 19 years old.
     * </pre>
     *
     * <code>UNDER_19_DATE = 51;</code>
     */
    UNDER_19_DATE(51),
    /**
     * <pre>
     * Date the user will turn 21 years old.
     * </pre>
     *
     * <code>UNDER_21_DATE = 52;</code>
     */
    UNDER_21_DATE(52),
    /**
     * <pre>
     * Flag to indicate the user was under 18 when this document was issued, and may still be.
     * </pre>
     *
     * <code>UNDER_18 = 60;</code>
     */
    UNDER_18(60),
    /**
     * <pre>
     * Flag to indicate the user was under 19 when this document was issued, and may still be.
     * </pre>
     *
     * <code>UNDER_19 = 61;</code>
     */
    UNDER_19(61),
    /**
     * <pre>
     * Flag to indicate the user was under 21 when this document was issued, and may still be.
     * </pre>
     *
     * <code>UNDER_21 = 62;</code>
     */
    UNDER_21(62),
    /**
     * <pre>
     * Flag to indicate this person opted to be an organ donor.
     * </pre>
     *
     * <code>ORGAN_DONOR = 63;</code>
     */
    ORGAN_DONOR(63),
    /**
     * <pre>
     * Flag to indicate that this person is a veteran.
     * </pre>
     *
     * <code>VETERAN = 64;</code>
     */
    VETERAN(64),
    /**
     * <pre>
     * Flag to indicate that this person is a nonresident.
     * </pre>
     *
     * <code>NONRESIDENT = 65;</code>
     */
    NONRESIDENT(65),
    /**
     * <pre>
     * Race or ethnicity information specified in this document.
     * </pre>
     *
     * <code>RACE_ETHNICITY = 70;</code>
     */
    RACE_ETHNICITY(70),
    /**
     * <pre>
     * Compliance-related data field for storage standards.
     * </pre>
     *
     * <code>COMPLIANCE_TYPE = 71;</code>
     */
    COMPLIANCE_TYPE(71),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Raw barcode data for the back USDL barcode, which usually carries most of the data and is generally encoded using
     * PDF417 (for instance, this is the case for California and New York).
     * </pre>
     *
     * <code>BACK_BARCODE = 0;</code>
     */
    public static final int BACK_BARCODE_VALUE = 0;
    /**
     * <pre>
     * Person's family name, or last name.
     * </pre>
     *
     * <code>FAMILY_NAME = 1;</code>
     */
    public static final int FAMILY_NAME_VALUE = 1;
    /**
     * <pre>
     * Person's first anme, or given name.
     * </pre>
     *
     * <code>GIVEN_NAME = 2;</code>
     */
    public static final int GIVEN_NAME_VALUE = 2;
    /**
     * <pre>
     * Person's middle name.
     * </pre>
     *
     * <code>MIDDLE_NAME = 3;</code>
     */
    public static final int MIDDLE_NAME_VALUE = 3;
    /**
     * <pre>
     * Person's full name, expressed in a concatenated field.
     * </pre>
     *
     * <code>FULL_NAME = 4;</code>
     */
    public static final int FULL_NAME_VALUE = 4;
    /**
     * <pre>
     * Person's name prefix, like "Dr" or some other salutation.
     * </pre>
     *
     * <code>NAME_PREFIX = 5;</code>
     */
    public static final int NAME_PREFIX_VALUE = 5;
    /**
     * <pre>
     * Person's name suffix, like "III".
     * </pre>
     *
     * <code>NAME_SUFFIX = 6;</code>
     */
    public static final int NAME_SUFFIX_VALUE = 6;
    /**
     * <pre>
     * Date of birth for this person.
     * </pre>
     *
     * <code>DATE_OF_BIRTH = 10;</code>
     */
    public static final int DATE_OF_BIRTH_VALUE = 10;
    /**
     * <pre>
     * Gender specified for this person.
     * </pre>
     *
     * <code>SEX = 11;</code>
     */
    public static final int SEX_VALUE = 11;
    /**
     * <pre>
     * Physical height specified for this person.
     * </pre>
     *
     * <code>HEIGHT = 12;</code>
     */
    public static final int HEIGHT_VALUE = 12;
    /**
     * <pre>
     * Physical weight specified for this person.
     * </pre>
     *
     * <code>WEIGHT = 13;</code>
     */
    public static final int WEIGHT_VALUE = 13;
    /**
     * <pre>
     * Eye color specified for this person.
     * </pre>
     *
     * <code>EYE_COLOR = 14;</code>
     */
    public static final int EYE_COLOR_VALUE = 14;
    /**
     * <pre>
     * Hair color specified for this person.
     * </pre>
     *
     * <code>HAIR_COLOR = 15;</code>
     */
    public static final int HAIR_COLOR_VALUE = 15;
    /**
     * <pre>
     * Full, concatenated main user address string.
     * </pre>
     *
     * <code>FULL_ADDRESS = 20;</code>
     */
    public static final int FULL_ADDRESS_VALUE = 20;
    /**
     * <pre>
     * First line of the main address.
     * </pre>
     *
     * <code>ADDRESS_LINE = 21;</code>
     */
    public static final int ADDRESS_LINE_VALUE = 21;
    /**
     * <pre>
     * Second line of the main address.
     * </pre>
     *
     * <code>ADDRESS_LINE2 = 22;</code>
     */
    public static final int ADDRESS_LINE2_VALUE = 22;
    /**
     * <pre>
     * City name from the main address.
     * </pre>
     *
     * <code>ADDRESS_CITY = 23;</code>
     */
    public static final int ADDRESS_CITY_VALUE = 23;
    /**
     * <pre>
     * Postal or zip code from the main address.
     * </pre>
     *
     * <code>POSTAL_CODE = 24;</code>
     */
    public static final int POSTAL_CODE_VALUE = 24;
    /**
     * <pre>
     * Issuing state jurisdiction code for this document.
     * </pre>
     *
     * <code>STATE_JURISDICTION = 25;</code>
     */
    public static final int STATE_JURISDICTION_VALUE = 25;
    /**
     * <pre>
     * ID number for this license document.
     * </pre>
     *
     * <code>LICENSE_ID = 30;</code>
     */
    public static final int LICENSE_ID_VALUE = 30;
    /**
     * <pre>
     * Issuance date for this license document.
     * </pre>
     *
     * <code>LICENSE_ISSUE_DATE = 31;</code>
     */
    public static final int LICENSE_ISSUE_DATE_VALUE = 31;
    /**
     * <pre>
     * Expiration date for this license document.
     * </pre>
     *
     * <code>LICENSE_EXPIRY_DATE = 32;</code>
     */
    public static final int LICENSE_EXPIRY_DATE_VALUE = 32;
    /**
     * <pre>
     * Jurisdiction of issuance for this license document.
     * </pre>
     *
     * <code>ISSUER_JURISDICTION = 33;</code>
     */
    public static final int ISSUER_JURISDICTION_VALUE = 33;
    /**
     * <pre>
     * Jurisdiction-scoped format specifier for this document.
     * </pre>
     *
     * <code>ISSUER_JURISDICTION_FORMAT_VERSION = 34;</code>
     */
    public static final int ISSUER_JURISDICTION_FORMAT_VERSION_VALUE = 34;
    /**
     * <pre>
     * Unique document code for this specific instance of a license document.
     * </pre>
     *
     * <code>UNIQUE_DOCUMENT_CODE = 40;</code>
     */
    public static final int UNIQUE_DOCUMENT_CODE_VALUE = 40;
    /**
     * <pre>
     * Inventory unique control code, used for license document disambiguation if specified.
     * </pre>
     *
     * <code>INVENTORY_CONTROL_CODE = 41;</code>
     */
    public static final int INVENTORY_CONTROL_CODE_VALUE = 41;
    /**
     * <pre>
     * Date the user will turn 18 years old.
     * </pre>
     *
     * <code>UNDER_18_DATE = 50;</code>
     */
    public static final int UNDER_18_DATE_VALUE = 50;
    /**
     * <pre>
     * Date the user will turn 19 years old.
     * </pre>
     *
     * <code>UNDER_19_DATE = 51;</code>
     */
    public static final int UNDER_19_DATE_VALUE = 51;
    /**
     * <pre>
     * Date the user will turn 21 years old.
     * </pre>
     *
     * <code>UNDER_21_DATE = 52;</code>
     */
    public static final int UNDER_21_DATE_VALUE = 52;
    /**
     * <pre>
     * Flag to indicate the user was under 18 when this document was issued, and may still be.
     * </pre>
     *
     * <code>UNDER_18 = 60;</code>
     */
    public static final int UNDER_18_VALUE = 60;
    /**
     * <pre>
     * Flag to indicate the user was under 19 when this document was issued, and may still be.
     * </pre>
     *
     * <code>UNDER_19 = 61;</code>
     */
    public static final int UNDER_19_VALUE = 61;
    /**
     * <pre>
     * Flag to indicate the user was under 21 when this document was issued, and may still be.
     * </pre>
     *
     * <code>UNDER_21 = 62;</code>
     */
    public static final int UNDER_21_VALUE = 62;
    /**
     * <pre>
     * Flag to indicate this person opted to be an organ donor.
     * </pre>
     *
     * <code>ORGAN_DONOR = 63;</code>
     */
    public static final int ORGAN_DONOR_VALUE = 63;
    /**
     * <pre>
     * Flag to indicate that this person is a veteran.
     * </pre>
     *
     * <code>VETERAN = 64;</code>
     */
    public static final int VETERAN_VALUE = 64;
    /**
     * <pre>
     * Flag to indicate that this person is a nonresident.
     * </pre>
     *
     * <code>NONRESIDENT = 65;</code>
     */
    public static final int NONRESIDENT_VALUE = 65;
    /**
     * <pre>
     * Race or ethnicity information specified in this document.
     * </pre>
     *
     * <code>RACE_ETHNICITY = 70;</code>
     */
    public static final int RACE_ETHNICITY_VALUE = 70;
    /**
     * <pre>
     * Compliance-related data field for storage standards.
     * </pre>
     *
     * <code>COMPLIANCE_TYPE = 71;</code>
     */
    public static final int COMPLIANCE_TYPE_VALUE = 71;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static USDLField valueOf(int value) {
      return forNumber(value);
    }

    public static USDLField forNumber(int value) {
      switch (value) {
        case 0: return BACK_BARCODE;
        case 1: return FAMILY_NAME;
        case 2: return GIVEN_NAME;
        case 3: return MIDDLE_NAME;
        case 4: return FULL_NAME;
        case 5: return NAME_PREFIX;
        case 6: return NAME_SUFFIX;
        case 10: return DATE_OF_BIRTH;
        case 11: return SEX;
        case 12: return HEIGHT;
        case 13: return WEIGHT;
        case 14: return EYE_COLOR;
        case 15: return HAIR_COLOR;
        case 20: return FULL_ADDRESS;
        case 21: return ADDRESS_LINE;
        case 22: return ADDRESS_LINE2;
        case 23: return ADDRESS_CITY;
        case 24: return POSTAL_CODE;
        case 25: return STATE_JURISDICTION;
        case 30: return LICENSE_ID;
        case 31: return LICENSE_ISSUE_DATE;
        case 32: return LICENSE_EXPIRY_DATE;
        case 33: return ISSUER_JURISDICTION;
        case 34: return ISSUER_JURISDICTION_FORMAT_VERSION;
        case 40: return UNIQUE_DOCUMENT_CODE;
        case 41: return INVENTORY_CONTROL_CODE;
        case 50: return UNDER_18_DATE;
        case 51: return UNDER_19_DATE;
        case 52: return UNDER_21_DATE;
        case 60: return UNDER_18;
        case 61: return UNDER_19;
        case 62: return UNDER_21;
        case 63: return ORGAN_DONOR;
        case 64: return VETERAN;
        case 65: return NONRESIDENT;
        case 70: return RACE_ETHNICITY;
        case 71: return COMPLIANCE_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<USDLField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        USDLField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<USDLField>() {
            public USDLField findValueByNumber(int number) {
              return USDLField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.bloombox.schema.identity.ids.DriversLicenseID.getDescriptor().getEnumTypes().get(0);
    }

    private static final USDLField[] VALUES = values();

    public static USDLField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private USDLField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:bloombox.schema.identity.ids.USDLField)
  }

  public interface USDLFieldValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.identity.ids.USDLFieldValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Field that we are storing data for.
     * </pre>
     *
     * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
     */
    int getFieldValue();
    /**
     * <pre>
     * Field that we are storing data for.
     * </pre>
     *
     * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
     */
    io.bloombox.schema.identity.ids.DriversLicenseID.USDLField getField();

    /**
     * <pre>
     * String data for this field.
     * </pre>
     *
     * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
     */
    java.lang.String getValue();
    /**
     * <pre>
     * String data for this field.
     * </pre>
     *
     * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <pre>
     * Byte data for this field.
     * </pre>
     *
     * <code>bytes raw_value = 3 [(.gen_bq_schema.ignore) = true];</code>
     */
    com.google.protobuf.ByteString getRawValue();

    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.DataCase getDataCase();
  }
  /**
   * <pre>
   * Specifies an individual raw field value read or scanned from a United States Driver's License.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.identity.ids.USDLFieldValue}
   */
  public  static final class USDLFieldValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.identity.ids.USDLFieldValue)
      USDLFieldValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use USDLFieldValue.newBuilder() to construct.
    private USDLFieldValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private USDLFieldValue() {
      field_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private USDLFieldValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              field_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              dataCase_ = 2;
              data_ = s;
              break;
            }
            case 26: {
              dataCase_ = 3;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLFieldValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLFieldValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.class, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder.class);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      VALUE(2),
      RAW_VALUE(3),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 2: return VALUE;
          case 3: return RAW_VALUE;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int FIELD_FIELD_NUMBER = 1;
    private int field_;
    /**
     * <pre>
     * Field that we are storing data for.
     * </pre>
     *
     * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
     */
    public int getFieldValue() {
      return field_;
    }
    /**
     * <pre>
     * Field that we are storing data for.
     * </pre>
     *
     * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
     */
    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLField getField() {
      io.bloombox.schema.identity.ids.DriversLicenseID.USDLField result = io.bloombox.schema.identity.ids.DriversLicenseID.USDLField.valueOf(field_);
      return result == null ? io.bloombox.schema.identity.ids.DriversLicenseID.USDLField.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * String data for this field.
     * </pre>
     *
     * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = "";
      if (dataCase_ == 2) {
        ref = data_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (dataCase_ == 2) {
          data_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * String data for this field.
     * </pre>
     *
     * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = "";
      if (dataCase_ == 2) {
        ref = data_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (dataCase_ == 2) {
          data_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RAW_VALUE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Byte data for this field.
     * </pre>
     *
     * <code>bytes raw_value = 3 [(.gen_bq_schema.ignore) = true];</code>
     */
    public com.google.protobuf.ByteString getRawValue() {
      if (dataCase_ == 3) {
        return (com.google.protobuf.ByteString) data_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (field_ != io.bloombox.schema.identity.ids.DriversLicenseID.USDLField.BACK_BARCODE.getNumber()) {
        output.writeEnum(1, field_);
      }
      if (dataCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, data_);
      }
      if (dataCase_ == 3) {
        output.writeBytes(
            3, (com.google.protobuf.ByteString) data_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (field_ != io.bloombox.schema.identity.ids.DriversLicenseID.USDLField.BACK_BARCODE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, field_);
      }
      if (dataCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, data_);
      }
      if (dataCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              3, (com.google.protobuf.ByteString) data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue)) {
        return super.equals(obj);
      }
      io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue other = (io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue) obj;

      boolean result = true;
      result = result && field_ == other.field_;
      result = result && getDataCase().equals(
          other.getDataCase());
      if (!result) return false;
      switch (dataCase_) {
        case 2:
          result = result && getValue()
              .equals(other.getValue());
          break;
        case 3:
          result = result && getRawValue()
              .equals(other.getRawValue());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FIELD_FIELD_NUMBER;
      hash = (53 * hash) + field_;
      switch (dataCase_) {
        case 2:
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValue().hashCode();
          break;
        case 3:
          hash = (37 * hash) + RAW_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getRawValue().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies an individual raw field value read or scanned from a United States Driver's License.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.identity.ids.USDLFieldValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.identity.ids.USDLFieldValue)
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLFieldValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLFieldValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.class, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder.class);
      }

      // Construct using io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        field_ = 0;

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLFieldValue_descriptor;
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue getDefaultInstanceForType() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.getDefaultInstance();
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue build() {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue buildPartial() {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue result = new io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue(this);
        result.field_ = field_;
        if (dataCase_ == 2) {
          result.data_ = data_;
        }
        if (dataCase_ == 3) {
          result.data_ = data_;
        }
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue) {
          return mergeFrom((io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue other) {
        if (other == io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.getDefaultInstance()) return this;
        if (other.field_ != 0) {
          setFieldValue(other.getFieldValue());
        }
        switch (other.getDataCase()) {
          case VALUE: {
            dataCase_ = 2;
            data_ = other.data_;
            onChanged();
            break;
          }
          case RAW_VALUE: {
            setRawValue(other.getRawValue());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private int field_ = 0;
      /**
       * <pre>
       * Field that we are storing data for.
       * </pre>
       *
       * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
       */
      public int getFieldValue() {
        return field_;
      }
      /**
       * <pre>
       * Field that we are storing data for.
       * </pre>
       *
       * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
       */
      public Builder setFieldValue(int value) {
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Field that we are storing data for.
       * </pre>
       *
       * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLField getField() {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLField result = io.bloombox.schema.identity.ids.DriversLicenseID.USDLField.valueOf(field_);
        return result == null ? io.bloombox.schema.identity.ids.DriversLicenseID.USDLField.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Field that we are storing data for.
       * </pre>
       *
       * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
       */
      public Builder setField(io.bloombox.schema.identity.ids.DriversLicenseID.USDLField value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        field_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Field that we are storing data for.
       * </pre>
       *
       * <code>.bloombox.schema.identity.ids.USDLField field = 1 [(.gen_bq_schema.description) = "Field that we are storing data for."];</code>
       */
      public Builder clearField() {
        
        field_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * String data for this field.
       * </pre>
       *
       * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = "";
        if (dataCase_ == 2) {
          ref = data_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (dataCase_ == 2) {
            data_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * String data for this field.
       * </pre>
       *
       * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = "";
        if (dataCase_ == 2) {
          ref = data_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (dataCase_ == 2) {
            data_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * String data for this field.
       * </pre>
       *
       * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  dataCase_ = 2;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String data for this field.
       * </pre>
       *
       * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
       */
      public Builder clearValue() {
        if (dataCase_ == 2) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * String data for this field.
       * </pre>
       *
       * <code>string value = 2 [(.gen_bq_schema.description) = "String data for this field."];</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        dataCase_ = 2;
        data_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Byte data for this field.
       * </pre>
       *
       * <code>bytes raw_value = 3 [(.gen_bq_schema.ignore) = true];</code>
       */
      public com.google.protobuf.ByteString getRawValue() {
        if (dataCase_ == 3) {
          return (com.google.protobuf.ByteString) data_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * Byte data for this field.
       * </pre>
       *
       * <code>bytes raw_value = 3 [(.gen_bq_schema.ignore) = true];</code>
       */
      public Builder setRawValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  dataCase_ = 3;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Byte data for this field.
       * </pre>
       *
       * <code>bytes raw_value = 3 [(.gen_bq_schema.ignore) = true];</code>
       */
      public Builder clearRawValue() {
        if (dataCase_ == 3) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.identity.ids.USDLFieldValue)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.identity.ids.USDLFieldValue)
    private static final io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue();
    }

    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<USDLFieldValue>
        PARSER = new com.google.protobuf.AbstractParser<USDLFieldValue>() {
      public USDLFieldValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new USDLFieldValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<USDLFieldValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<USDLFieldValue> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface USDLReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.identity.ids.USDLReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Driver's license number.
     * </pre>
     *
     * <code>string number = 1;</code>
     */
    java.lang.String getNumber();
    /**
     * <pre>
     * Driver's license number.
     * </pre>
     *
     * <code>string number = 1;</code>
     */
    com.google.protobuf.ByteString
        getNumberBytes();

    /**
     * <pre>
     * PDF417 back-side barcode.
     * </pre>
     *
     * <code>string barcode = 2;</code>
     */
    java.lang.String getBarcode();
    /**
     * <pre>
     * PDF417 back-side barcode.
     * </pre>
     *
     * <code>string barcode = 2;</code>
     */
    com.google.protobuf.ByteString
        getBarcodeBytes();

    /**
     * <pre>
     * Magnetic stripe data.
     * </pre>
     *
     * <code>string magstripe = 3;</code>
     */
    java.lang.String getMagstripe();
    /**
     * <pre>
     * Magnetic stripe data.
     * </pre>
     *
     * <code>string magstripe = 3;</code>
     */
    com.google.protobuf.ByteString
        getMagstripeBytes();

    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.DataCase getDataCase();
  }
  /**
   * <pre>
   * Reference to a US Driver's License.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.identity.ids.USDLReference}
   */
  public  static final class USDLReference extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.identity.ids.USDLReference)
      USDLReferenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use USDLReference.newBuilder() to construct.
    private USDLReference(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private USDLReference() {
      number_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private USDLReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              number_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              dataCase_ = 2;
              data_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              dataCase_ = 3;
              data_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLReference_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.class, io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.Builder.class);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      BARCODE(2),
      MAGSTRIPE(3),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 2: return BARCODE;
          case 3: return MAGSTRIPE;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object number_;
    /**
     * <pre>
     * Driver's license number.
     * </pre>
     *
     * <code>string number = 1;</code>
     */
    public java.lang.String getNumber() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        number_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Driver's license number.
     * </pre>
     *
     * <code>string number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNumberBytes() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        number_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BARCODE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * PDF417 back-side barcode.
     * </pre>
     *
     * <code>string barcode = 2;</code>
     */
    public java.lang.String getBarcode() {
      java.lang.Object ref = "";
      if (dataCase_ == 2) {
        ref = data_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (dataCase_ == 2) {
          data_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * PDF417 back-side barcode.
     * </pre>
     *
     * <code>string barcode = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBarcodeBytes() {
      java.lang.Object ref = "";
      if (dataCase_ == 2) {
        ref = data_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (dataCase_ == 2) {
          data_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAGSTRIPE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Magnetic stripe data.
     * </pre>
     *
     * <code>string magstripe = 3;</code>
     */
    public java.lang.String getMagstripe() {
      java.lang.Object ref = "";
      if (dataCase_ == 3) {
        ref = data_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (dataCase_ == 3) {
          data_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Magnetic stripe data.
     * </pre>
     *
     * <code>string magstripe = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMagstripeBytes() {
      java.lang.Object ref = "";
      if (dataCase_ == 3) {
        ref = data_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (dataCase_ == 3) {
          data_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNumberBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, number_);
      }
      if (dataCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, data_);
      }
      if (dataCase_ == 3) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, data_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNumberBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, number_);
      }
      if (dataCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, data_);
      }
      if (dataCase_ == 3) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference)) {
        return super.equals(obj);
      }
      io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference other = (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) obj;

      boolean result = true;
      result = result && getNumber()
          .equals(other.getNumber());
      result = result && getDataCase().equals(
          other.getDataCase());
      if (!result) return false;
      switch (dataCase_) {
        case 2:
          result = result && getBarcode()
              .equals(other.getBarcode());
          break;
        case 3:
          result = result && getMagstripe()
              .equals(other.getMagstripe());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getNumber().hashCode();
      switch (dataCase_) {
        case 2:
          hash = (37 * hash) + BARCODE_FIELD_NUMBER;
          hash = (53 * hash) + getBarcode().hashCode();
          break;
        case 3:
          hash = (37 * hash) + MAGSTRIPE_FIELD_NUMBER;
          hash = (53 * hash) + getMagstripe().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Reference to a US Driver's License.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.identity.ids.USDLReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.identity.ids.USDLReference)
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLReference_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.class, io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.Builder.class);
      }

      // Construct using io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        number_ = "";

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDLReference_descriptor;
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference getDefaultInstanceForType() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance();
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference build() {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference buildPartial() {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference result = new io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference(this);
        result.number_ = number_;
        if (dataCase_ == 2) {
          result.data_ = data_;
        }
        if (dataCase_ == 3) {
          result.data_ = data_;
        }
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) {
          return mergeFrom((io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference other) {
        if (other == io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance()) return this;
        if (!other.getNumber().isEmpty()) {
          number_ = other.number_;
          onChanged();
        }
        switch (other.getDataCase()) {
          case BARCODE: {
            dataCase_ = 2;
            data_ = other.data_;
            onChanged();
            break;
          }
          case MAGSTRIPE: {
            dataCase_ = 3;
            data_ = other.data_;
            onChanged();
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object number_ = "";
      /**
       * <pre>
       * Driver's license number.
       * </pre>
       *
       * <code>string number = 1;</code>
       */
      public java.lang.String getNumber() {
        java.lang.Object ref = number_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          number_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Driver's license number.
       * </pre>
       *
       * <code>string number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNumberBytes() {
        java.lang.Object ref = number_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          number_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Driver's license number.
       * </pre>
       *
       * <code>string number = 1;</code>
       */
      public Builder setNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        number_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Driver's license number.
       * </pre>
       *
       * <code>string number = 1;</code>
       */
      public Builder clearNumber() {
        
        number_ = getDefaultInstance().getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Driver's license number.
       * </pre>
       *
       * <code>string number = 1;</code>
       */
      public Builder setNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        number_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * PDF417 back-side barcode.
       * </pre>
       *
       * <code>string barcode = 2;</code>
       */
      public java.lang.String getBarcode() {
        java.lang.Object ref = "";
        if (dataCase_ == 2) {
          ref = data_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (dataCase_ == 2) {
            data_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PDF417 back-side barcode.
       * </pre>
       *
       * <code>string barcode = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBarcodeBytes() {
        java.lang.Object ref = "";
        if (dataCase_ == 2) {
          ref = data_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (dataCase_ == 2) {
            data_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PDF417 back-side barcode.
       * </pre>
       *
       * <code>string barcode = 2;</code>
       */
      public Builder setBarcode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  dataCase_ = 2;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PDF417 back-side barcode.
       * </pre>
       *
       * <code>string barcode = 2;</code>
       */
      public Builder clearBarcode() {
        if (dataCase_ == 2) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * PDF417 back-side barcode.
       * </pre>
       *
       * <code>string barcode = 2;</code>
       */
      public Builder setBarcodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        dataCase_ = 2;
        data_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Magnetic stripe data.
       * </pre>
       *
       * <code>string magstripe = 3;</code>
       */
      public java.lang.String getMagstripe() {
        java.lang.Object ref = "";
        if (dataCase_ == 3) {
          ref = data_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (dataCase_ == 3) {
            data_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Magnetic stripe data.
       * </pre>
       *
       * <code>string magstripe = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMagstripeBytes() {
        java.lang.Object ref = "";
        if (dataCase_ == 3) {
          ref = data_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (dataCase_ == 3) {
            data_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Magnetic stripe data.
       * </pre>
       *
       * <code>string magstripe = 3;</code>
       */
      public Builder setMagstripe(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  dataCase_ = 3;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Magnetic stripe data.
       * </pre>
       *
       * <code>string magstripe = 3;</code>
       */
      public Builder clearMagstripe() {
        if (dataCase_ == 3) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Magnetic stripe data.
       * </pre>
       *
       * <code>string magstripe = 3;</code>
       */
      public Builder setMagstripeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        dataCase_ = 3;
        data_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.identity.ids.USDLReference)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.identity.ids.USDLReference)
    private static final io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference();
    }

    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<USDLReference>
        PARSER = new com.google.protobuf.AbstractParser<USDLReference>() {
      public USDLReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new USDLReference(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<USDLReference> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<USDLReference> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface USDLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.identity.ids.USDL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Raw barcode data for this Driver's License.
     * </pre>
     *
     * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
     */
    java.lang.String getBarcode();
    /**
     * <pre>
     * Raw barcode data for this Driver's License.
     * </pre>
     *
     * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
     */
    com.google.protobuf.ByteString
        getBarcodeBytes();

    /**
     * <pre>
     * Raw barcode data for this Driver's License.
     * </pre>
     *
     * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
     */
    java.lang.String getMagstripe();
    /**
     * <pre>
     * Raw barcode data for this Driver's License.
     * </pre>
     *
     * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
     */
    com.google.protobuf.ByteString
        getMagstripeBytes();

    /**
     * <pre>
     * State that issued this Driver's License.
     * </pre>
     *
     * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
     */
    int getJurisdictionValue();
    /**
     * <pre>
     * State that issued this Driver's License.
     * </pre>
     *
     * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
     */
    io.opencannabis.schema.geo.usa.USState getJurisdiction();

    /**
     * <pre>
     * Flag that indicates this is an identification card, not a Driver's License.
     * </pre>
     *
     * <code>bool identification_card = 4 [(.gen_bq_schema.description) = "Flag that indicates this is an identification card, not a Driver&#92;'s License."];</code>
     */
    boolean getIdentificationCard();

    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    java.util.List<io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue> 
        getFieldsList();
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue getFields(int index);
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    int getFieldsCount();
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    java.util.List<? extends io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Specifies a United States Driver's License.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.identity.ids.USDL}
   */
  public  static final class USDL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.identity.ids.USDL)
      USDLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use USDL.newBuilder() to construct.
    private USDL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private USDL() {
      barcode_ = "";
      magstripe_ = "";
      jurisdiction_ = 0;
      identificationCard_ = false;
      fields_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private USDL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              barcode_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              magstripe_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              jurisdiction_ = rawValue;
              break;
            }
            case 32: {

              identificationCard_ = input.readBool();
              break;
            }
            case 802: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                fields_ = new java.util.ArrayList<io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue>();
                mutable_bitField0_ |= 0x00000010;
              }
              fields_.add(
                  input.readMessage(io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDL_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.identity.ids.DriversLicenseID.USDL.class, io.bloombox.schema.identity.ids.DriversLicenseID.USDL.Builder.class);
    }

    private int bitField0_;
    public static final int BARCODE_FIELD_NUMBER = 1;
    private volatile java.lang.Object barcode_;
    /**
     * <pre>
     * Raw barcode data for this Driver's License.
     * </pre>
     *
     * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
     */
    public java.lang.String getBarcode() {
      java.lang.Object ref = barcode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        barcode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Raw barcode data for this Driver's License.
     * </pre>
     *
     * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
     */
    public com.google.protobuf.ByteString
        getBarcodeBytes() {
      java.lang.Object ref = barcode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        barcode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAGSTRIPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object magstripe_;
    /**
     * <pre>
     * Raw barcode data for this Driver's License.
     * </pre>
     *
     * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
     */
    public java.lang.String getMagstripe() {
      java.lang.Object ref = magstripe_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        magstripe_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Raw barcode data for this Driver's License.
     * </pre>
     *
     * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
     */
    public com.google.protobuf.ByteString
        getMagstripeBytes() {
      java.lang.Object ref = magstripe_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        magstripe_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JURISDICTION_FIELD_NUMBER = 3;
    private int jurisdiction_;
    /**
     * <pre>
     * State that issued this Driver's License.
     * </pre>
     *
     * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
     */
    public int getJurisdictionValue() {
      return jurisdiction_;
    }
    /**
     * <pre>
     * State that issued this Driver's License.
     * </pre>
     *
     * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
     */
    public io.opencannabis.schema.geo.usa.USState getJurisdiction() {
      io.opencannabis.schema.geo.usa.USState result = io.opencannabis.schema.geo.usa.USState.valueOf(jurisdiction_);
      return result == null ? io.opencannabis.schema.geo.usa.USState.UNRECOGNIZED : result;
    }

    public static final int IDENTIFICATION_CARD_FIELD_NUMBER = 4;
    private boolean identificationCard_;
    /**
     * <pre>
     * Flag that indicates this is an identification card, not a Driver's License.
     * </pre>
     *
     * <code>bool identification_card = 4 [(.gen_bq_schema.description) = "Flag that indicates this is an identification card, not a Driver&#92;'s License."];</code>
     */
    public boolean getIdentificationCard() {
      return identificationCard_;
    }

    public static final int FIELDS_FIELD_NUMBER = 100;
    private java.util.List<io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue> fields_;
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    public java.util.List<io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue> getFieldsList() {
      return fields_;
    }
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    public java.util.List<? extends io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <pre>
     * Raw field data for this license.
     * </pre>
     *
     * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
     */
    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getBarcodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, barcode_);
      }
      if (!getMagstripeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, magstripe_);
      }
      if (jurisdiction_ != io.opencannabis.schema.geo.usa.USState.UNSPECIFIED.getNumber()) {
        output.writeEnum(3, jurisdiction_);
      }
      if (identificationCard_ != false) {
        output.writeBool(4, identificationCard_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(100, fields_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getBarcodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, barcode_);
      }
      if (!getMagstripeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, magstripe_);
      }
      if (jurisdiction_ != io.opencannabis.schema.geo.usa.USState.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, jurisdiction_);
      }
      if (identificationCard_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, identificationCard_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, fields_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.identity.ids.DriversLicenseID.USDL)) {
        return super.equals(obj);
      }
      io.bloombox.schema.identity.ids.DriversLicenseID.USDL other = (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) obj;

      boolean result = true;
      result = result && getBarcode()
          .equals(other.getBarcode());
      result = result && getMagstripe()
          .equals(other.getMagstripe());
      result = result && jurisdiction_ == other.jurisdiction_;
      result = result && (getIdentificationCard()
          == other.getIdentificationCard());
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BARCODE_FIELD_NUMBER;
      hash = (53 * hash) + getBarcode().hashCode();
      hash = (37 * hash) + MAGSTRIPE_FIELD_NUMBER;
      hash = (53 * hash) + getMagstripe().hashCode();
      hash = (37 * hash) + JURISDICTION_FIELD_NUMBER;
      hash = (53 * hash) + jurisdiction_;
      hash = (37 * hash) + IDENTIFICATION_CARD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIdentificationCard());
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.identity.ids.DriversLicenseID.USDL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a United States Driver's License.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.identity.ids.USDL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.identity.ids.USDL)
        io.bloombox.schema.identity.ids.DriversLicenseID.USDLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDL_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.identity.ids.DriversLicenseID.USDL.class, io.bloombox.schema.identity.ids.DriversLicenseID.USDL.Builder.class);
      }

      // Construct using io.bloombox.schema.identity.ids.DriversLicenseID.USDL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        barcode_ = "";

        magstripe_ = "";

        jurisdiction_ = 0;

        identificationCard_ = false;

        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.internal_static_bloombox_schema_identity_ids_USDL_descriptor;
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDL getDefaultInstanceForType() {
        return io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance();
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDL build() {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.identity.ids.DriversLicenseID.USDL buildPartial() {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDL result = new io.bloombox.schema.identity.ids.DriversLicenseID.USDL(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.barcode_ = barcode_;
        result.magstripe_ = magstripe_;
        result.jurisdiction_ = jurisdiction_;
        result.identificationCard_ = identificationCard_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.identity.ids.DriversLicenseID.USDL) {
          return mergeFrom((io.bloombox.schema.identity.ids.DriversLicenseID.USDL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.identity.ids.DriversLicenseID.USDL other) {
        if (other == io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance()) return this;
        if (!other.getBarcode().isEmpty()) {
          barcode_ = other.barcode_;
          onChanged();
        }
        if (!other.getMagstripe().isEmpty()) {
          magstripe_ = other.magstripe_;
          onChanged();
        }
        if (other.jurisdiction_ != 0) {
          setJurisdictionValue(other.getJurisdictionValue());
        }
        if (other.getIdentificationCard() != false) {
          setIdentificationCard(other.getIdentificationCard());
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000010);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.identity.ids.DriversLicenseID.USDL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object barcode_ = "";
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
       */
      public java.lang.String getBarcode() {
        java.lang.Object ref = barcode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          barcode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
       */
      public com.google.protobuf.ByteString
          getBarcodeBytes() {
        java.lang.Object ref = barcode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          barcode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
       */
      public Builder setBarcode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        barcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
       */
      public Builder clearBarcode() {
        
        barcode_ = getDefaultInstance().getBarcode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string barcode = 1 [(.gen_bq_schema.ignore) = true];</code>
       */
      public Builder setBarcodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        barcode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object magstripe_ = "";
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
       */
      public java.lang.String getMagstripe() {
        java.lang.Object ref = magstripe_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          magstripe_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
       */
      public com.google.protobuf.ByteString
          getMagstripeBytes() {
        java.lang.Object ref = magstripe_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          magstripe_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
       */
      public Builder setMagstripe(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        magstripe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
       */
      public Builder clearMagstripe() {
        
        magstripe_ = getDefaultInstance().getMagstripe();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Raw barcode data for this Driver's License.
       * </pre>
       *
       * <code>string magstripe = 2 [(.gen_bq_schema.ignore) = true];</code>
       */
      public Builder setMagstripeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        magstripe_ = value;
        onChanged();
        return this;
      }

      private int jurisdiction_ = 0;
      /**
       * <pre>
       * State that issued this Driver's License.
       * </pre>
       *
       * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
       */
      public int getJurisdictionValue() {
        return jurisdiction_;
      }
      /**
       * <pre>
       * State that issued this Driver's License.
       * </pre>
       *
       * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
       */
      public Builder setJurisdictionValue(int value) {
        jurisdiction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * State that issued this Driver's License.
       * </pre>
       *
       * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
       */
      public io.opencannabis.schema.geo.usa.USState getJurisdiction() {
        io.opencannabis.schema.geo.usa.USState result = io.opencannabis.schema.geo.usa.USState.valueOf(jurisdiction_);
        return result == null ? io.opencannabis.schema.geo.usa.USState.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * State that issued this Driver's License.
       * </pre>
       *
       * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
       */
      public Builder setJurisdiction(io.opencannabis.schema.geo.usa.USState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        jurisdiction_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * State that issued this Driver's License.
       * </pre>
       *
       * <code>.opencannabis.geo.usa.USState jurisdiction = 3 [(.gen_bq_schema.description) = "State that issued this Driver&#92;'s License."];</code>
       */
      public Builder clearJurisdiction() {
        
        jurisdiction_ = 0;
        onChanged();
        return this;
      }

      private boolean identificationCard_ ;
      /**
       * <pre>
       * Flag that indicates this is an identification card, not a Driver's License.
       * </pre>
       *
       * <code>bool identification_card = 4 [(.gen_bq_schema.description) = "Flag that indicates this is an identification card, not a Driver&#92;'s License."];</code>
       */
      public boolean getIdentificationCard() {
        return identificationCard_;
      }
      /**
       * <pre>
       * Flag that indicates this is an identification card, not a Driver's License.
       * </pre>
       *
       * <code>bool identification_card = 4 [(.gen_bq_schema.description) = "Flag that indicates this is an identification card, not a Driver&#92;'s License."];</code>
       */
      public Builder setIdentificationCard(boolean value) {
        
        identificationCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flag that indicates this is an identification card, not a Driver's License.
       * </pre>
       *
       * <code>bool identification_card = 4 [(.gen_bq_schema.description) = "Flag that indicates this is an identification card, not a Driver&#92;'s License."];</code>
       */
      public Builder clearIdentificationCard() {
        
        identificationCard_ = false;
        onChanged();
        return this;
      }

      private java.util.List<io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          fields_ = new java.util.ArrayList<io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue>(fields_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder> fieldsBuilder_;

      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public java.util.List<io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder setFields(
          int index, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder setFields(
          int index, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder addFields(io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder addFields(
          int index, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder addFields(
          io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder addFields(
          int index, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public java.util.List<? extends io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.getDefaultInstance());
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.getDefaultInstance());
      }
      /**
       * <pre>
       * Raw field data for this license.
       * </pre>
       *
       * <code>repeated .bloombox.schema.identity.ids.USDLFieldValue fields = 100 [(.gen_bq_schema.description) = "Raw field data for this license."];</code>
       */
      public java.util.List<io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValue.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLFieldValueOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.identity.ids.USDL)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.identity.ids.USDL)
    private static final io.bloombox.schema.identity.ids.DriversLicenseID.USDL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.identity.ids.DriversLicenseID.USDL();
    }

    public static io.bloombox.schema.identity.ids.DriversLicenseID.USDL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<USDL>
        PARSER = new com.google.protobuf.AbstractParser<USDL>() {
      public USDL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new USDL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<USDL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<USDL> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.identity.ids.DriversLicenseID.USDL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_identity_ids_USDLFieldValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_identity_ids_USDLFieldValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_identity_ids_USDLReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_identity_ids_USDLReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_identity_ids_USDL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_identity_ids_USDL_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027identity/ids/USDL.proto\022\034bloombox.sche" +
      "ma.identity.ids\032\016bq_field.proto\032\021geo/USS" +
      "tate.proto\"\303\001\n\016USDLFieldValue\022^\n\005field\030\001" +
      " \001(\0162\'.bloombox.schema.identity.ids.USDL" +
      "FieldB&\212@#Field that we are storing data" +
      " for.\022/\n\005value\030\002 \001(\tB\036\212@\033String data for" +
      " this field.H\000\022\030\n\traw_value\030\003 \001(\014B\003\200@\001H\000" +
      "B\006\n\004data\"O\n\rUSDLReference\022\016\n\006number\030\001 \001(" +
      "\t\022\021\n\007barcode\030\002 \001(\tH\000\022\023\n\tmagstripe\030\003 \001(\tH" +
      "\000B\006\n\004data\"\346\002\n\004USDL\022\024\n\007barcode\030\001 \001(\tB\003\200@\001" +
      "\022\026\n\tmagstripe\030\002 \001(\tB\003\200@\001\022`\n\014jurisdiction" +
      "\030\003 \001(\0162\035.opencannabis.geo.usa.USStateB+\212" +
      "@(State that issued this Driver\'s Licens" +
      "e.\022k\n\023identification_card\030\004 \001(\010BN\212@KFlag" +
      " that indicates this is an identificatio" +
      "n card, not a Driver\'s License.\022a\n\006field" +
      "s\030d \003(\0132,.bloombox.schema.identity.ids.U" +
      "SDLFieldValueB#\212@ Raw field data for thi" +
      "s license.*\270\005\n\tUSDLField\022\020\n\014BACK_BARCODE" +
      "\020\000\022\017\n\013FAMILY_NAME\020\001\022\016\n\nGIVEN_NAME\020\002\022\017\n\013M" +
      "IDDLE_NAME\020\003\022\r\n\tFULL_NAME\020\004\022\017\n\013NAME_PREF" +
      "IX\020\005\022\017\n\013NAME_SUFFIX\020\006\022\021\n\rDATE_OF_BIRTH\020\n" +
      "\022\007\n\003SEX\020\013\022\n\n\006HEIGHT\020\014\022\n\n\006WEIGHT\020\r\022\r\n\tEYE" +
      "_COLOR\020\016\022\016\n\nHAIR_COLOR\020\017\022\020\n\014FULL_ADDRESS" +
      "\020\024\022\020\n\014ADDRESS_LINE\020\025\022\021\n\rADDRESS_LINE2\020\026\022" +
      "\020\n\014ADDRESS_CITY\020\027\022\017\n\013POSTAL_CODE\020\030\022\026\n\022ST" +
      "ATE_JURISDICTION\020\031\022\016\n\nLICENSE_ID\020\036\022\026\n\022LI" +
      "CENSE_ISSUE_DATE\020\037\022\027\n\023LICENSE_EXPIRY_DAT" +
      "E\020 \022\027\n\023ISSUER_JURISDICTION\020!\022&\n\"ISSUER_J" +
      "URISDICTION_FORMAT_VERSION\020\"\022\030\n\024UNIQUE_D" +
      "OCUMENT_CODE\020(\022\032\n\026INVENTORY_CONTROL_CODE" +
      "\020)\022\021\n\rUNDER_18_DATE\0202\022\021\n\rUNDER_19_DATE\0203" +
      "\022\021\n\rUNDER_21_DATE\0204\022\014\n\010UNDER_18\020<\022\014\n\010UND" +
      "ER_19\020=\022\014\n\010UNDER_21\020>\022\017\n\013ORGAN_DONOR\020?\022\013" +
      "\n\007VETERAN\020@\022\017\n\013NONRESIDENT\020A\022\022\n\016RACE_ETH" +
      "NICITY\020F\022\023\n\017COMPLIANCE_TYPE\020GB=\n\037io.bloo" +
      "mbox.schema.identity.idsB\020DriversLicense" +
      "IDH\001P\000\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gen_bq_schema.BqField.getDescriptor(),
          io.opencannabis.schema.geo.usa.USStateOuterClass.getDescriptor(),
        }, assigner);
    internal_static_bloombox_schema_identity_ids_USDLFieldValue_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_schema_identity_ids_USDLFieldValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_identity_ids_USDLFieldValue_descriptor,
        new java.lang.String[] { "Field", "Value", "RawValue", "Data", });
    internal_static_bloombox_schema_identity_ids_USDLReference_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_bloombox_schema_identity_ids_USDLReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_identity_ids_USDLReference_descriptor,
        new java.lang.String[] { "Number", "Barcode", "Magstripe", "Data", });
    internal_static_bloombox_schema_identity_ids_USDL_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_bloombox_schema_identity_ids_USDL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_identity_ids_USDL_descriptor,
        new java.lang.String[] { "Barcode", "Magstripe", "Jurisdiction", "IdentificationCard", "Fields", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    registry.add(gen_bq_schema.BqField.ignore);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    gen_bq_schema.BqField.getDescriptor();
    io.opencannabis.schema.geo.usa.USStateOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
