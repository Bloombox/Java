// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/ids/Passport.proto

package io.bloombox.schema.identity.ids;

/**
 * <pre>
 * Specifies a model for a nation-state-issued passport.
 * </pre>
 *
 * Protobuf type {@code identity.ids.Passport}
 */
public  final class Passport extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:identity.ids.Passport)
    PassportOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Passport.newBuilder() to construct.
  private Passport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Passport() {
    barcode_ = com.google.protobuf.ByteString.EMPTY;
    id_ = "";
    nation_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Passport(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {

            barcode_ = input.readBytes();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            nation_ = s;
            break;
          }
          case 34: {
            io.bloombox.schema.temporal.Date.Builder subBuilder = null;
            if (expireDate_ != null) {
              subBuilder = expireDate_.toBuilder();
            }
            expireDate_ = input.readMessage(io.bloombox.schema.temporal.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(expireDate_);
              expireDate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            io.bloombox.schema.temporal.Date.Builder subBuilder = null;
            if (birthDate_ != null) {
              subBuilder = birthDate_.toBuilder();
            }
            birthDate_ = input.readMessage(io.bloombox.schema.temporal.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(birthDate_);
              birthDate_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.identity.ids.PassportOuterClass.internal_static_identity_ids_Passport_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.identity.ids.PassportOuterClass.internal_static_identity_ids_Passport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.identity.ids.Passport.class, io.bloombox.schema.identity.ids.Passport.Builder.class);
  }

  public static final int BARCODE_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString barcode_;
  /**
   * <pre>
   * Barcode from the passport, if any.
   * </pre>
   *
   * <code>bytes barcode = 1;</code>
   */
  public com.google.protobuf.ByteString getBarcode() {
    return barcode_;
  }

  public static final int ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * Unique document ID for this passport.
   * </pre>
   *
   * <code>string id = 2;</code>
   */
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Unique document ID for this passport.
   * </pre>
   *
   * <code>string id = 2;</code>
   */
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NATION_FIELD_NUMBER = 3;
  private volatile java.lang.Object nation_;
  /**
   * <pre>
   * Nation that issued this passport, as an abbreviated string code, like "US" or "UK".
   * </pre>
   *
   * <code>string nation = 3;</code>
   */
  public java.lang.String getNation() {
    java.lang.Object ref = nation_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nation_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Nation that issued this passport, as an abbreviated string code, like "US" or "UK".
   * </pre>
   *
   * <code>string nation = 3;</code>
   */
  public com.google.protobuf.ByteString
      getNationBytes() {
    java.lang.Object ref = nation_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nation_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXPIRE_DATE_FIELD_NUMBER = 4;
  private io.bloombox.schema.temporal.Date expireDate_;
  /**
   * <pre>
   * Expiration date for this document.
   * </pre>
   *
   * <code>.temporal.Date expire_date = 4;</code>
   */
  public boolean hasExpireDate() {
    return expireDate_ != null;
  }
  /**
   * <pre>
   * Expiration date for this document.
   * </pre>
   *
   * <code>.temporal.Date expire_date = 4;</code>
   */
  public io.bloombox.schema.temporal.Date getExpireDate() {
    return expireDate_ == null ? io.bloombox.schema.temporal.Date.getDefaultInstance() : expireDate_;
  }
  /**
   * <pre>
   * Expiration date for this document.
   * </pre>
   *
   * <code>.temporal.Date expire_date = 4;</code>
   */
  public io.bloombox.schema.temporal.DateOrBuilder getExpireDateOrBuilder() {
    return getExpireDate();
  }

  public static final int BIRTH_DATE_FIELD_NUMBER = 5;
  private io.bloombox.schema.temporal.Date birthDate_;
  /**
   * <pre>
   * Birth date listed on this document.
   * </pre>
   *
   * <code>.temporal.Date birth_date = 5;</code>
   */
  public boolean hasBirthDate() {
    return birthDate_ != null;
  }
  /**
   * <pre>
   * Birth date listed on this document.
   * </pre>
   *
   * <code>.temporal.Date birth_date = 5;</code>
   */
  public io.bloombox.schema.temporal.Date getBirthDate() {
    return birthDate_ == null ? io.bloombox.schema.temporal.Date.getDefaultInstance() : birthDate_;
  }
  /**
   * <pre>
   * Birth date listed on this document.
   * </pre>
   *
   * <code>.temporal.Date birth_date = 5;</code>
   */
  public io.bloombox.schema.temporal.DateOrBuilder getBirthDateOrBuilder() {
    return getBirthDate();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!barcode_.isEmpty()) {
      output.writeBytes(1, barcode_);
    }
    if (!getIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
    }
    if (!getNationBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nation_);
    }
    if (expireDate_ != null) {
      output.writeMessage(4, getExpireDate());
    }
    if (birthDate_ != null) {
      output.writeMessage(5, getBirthDate());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!barcode_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, barcode_);
    }
    if (!getIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
    }
    if (!getNationBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nation_);
    }
    if (expireDate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getExpireDate());
    }
    if (birthDate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getBirthDate());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.identity.ids.Passport)) {
      return super.equals(obj);
    }
    io.bloombox.schema.identity.ids.Passport other = (io.bloombox.schema.identity.ids.Passport) obj;

    boolean result = true;
    result = result && getBarcode()
        .equals(other.getBarcode());
    result = result && getId()
        .equals(other.getId());
    result = result && getNation()
        .equals(other.getNation());
    result = result && (hasExpireDate() == other.hasExpireDate());
    if (hasExpireDate()) {
      result = result && getExpireDate()
          .equals(other.getExpireDate());
    }
    result = result && (hasBirthDate() == other.hasBirthDate());
    if (hasBirthDate()) {
      result = result && getBirthDate()
          .equals(other.getBirthDate());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BARCODE_FIELD_NUMBER;
    hash = (53 * hash) + getBarcode().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NATION_FIELD_NUMBER;
    hash = (53 * hash) + getNation().hashCode();
    if (hasExpireDate()) {
      hash = (37 * hash) + EXPIRE_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getExpireDate().hashCode();
    }
    if (hasBirthDate()) {
      hash = (37 * hash) + BIRTH_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getBirthDate().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.identity.ids.Passport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.identity.ids.Passport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.identity.ids.Passport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.identity.ids.Passport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.identity.ids.Passport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies a model for a nation-state-issued passport.
   * </pre>
   *
   * Protobuf type {@code identity.ids.Passport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:identity.ids.Passport)
      io.bloombox.schema.identity.ids.PassportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.identity.ids.PassportOuterClass.internal_static_identity_ids_Passport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.identity.ids.PassportOuterClass.internal_static_identity_ids_Passport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.identity.ids.Passport.class, io.bloombox.schema.identity.ids.Passport.Builder.class);
    }

    // Construct using io.bloombox.schema.identity.ids.Passport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      barcode_ = com.google.protobuf.ByteString.EMPTY;

      id_ = "";

      nation_ = "";

      if (expireDateBuilder_ == null) {
        expireDate_ = null;
      } else {
        expireDate_ = null;
        expireDateBuilder_ = null;
      }
      if (birthDateBuilder_ == null) {
        birthDate_ = null;
      } else {
        birthDate_ = null;
        birthDateBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.identity.ids.PassportOuterClass.internal_static_identity_ids_Passport_descriptor;
    }

    public io.bloombox.schema.identity.ids.Passport getDefaultInstanceForType() {
      return io.bloombox.schema.identity.ids.Passport.getDefaultInstance();
    }

    public io.bloombox.schema.identity.ids.Passport build() {
      io.bloombox.schema.identity.ids.Passport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.identity.ids.Passport buildPartial() {
      io.bloombox.schema.identity.ids.Passport result = new io.bloombox.schema.identity.ids.Passport(this);
      result.barcode_ = barcode_;
      result.id_ = id_;
      result.nation_ = nation_;
      if (expireDateBuilder_ == null) {
        result.expireDate_ = expireDate_;
      } else {
        result.expireDate_ = expireDateBuilder_.build();
      }
      if (birthDateBuilder_ == null) {
        result.birthDate_ = birthDate_;
      } else {
        result.birthDate_ = birthDateBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.identity.ids.Passport) {
        return mergeFrom((io.bloombox.schema.identity.ids.Passport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.identity.ids.Passport other) {
      if (other == io.bloombox.schema.identity.ids.Passport.getDefaultInstance()) return this;
      if (other.getBarcode() != com.google.protobuf.ByteString.EMPTY) {
        setBarcode(other.getBarcode());
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getNation().isEmpty()) {
        nation_ = other.nation_;
        onChanged();
      }
      if (other.hasExpireDate()) {
        mergeExpireDate(other.getExpireDate());
      }
      if (other.hasBirthDate()) {
        mergeBirthDate(other.getBirthDate());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.identity.ids.Passport parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.identity.ids.Passport) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.ByteString barcode_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Barcode from the passport, if any.
     * </pre>
     *
     * <code>bytes barcode = 1;</code>
     */
    public com.google.protobuf.ByteString getBarcode() {
      return barcode_;
    }
    /**
     * <pre>
     * Barcode from the passport, if any.
     * </pre>
     *
     * <code>bytes barcode = 1;</code>
     */
    public Builder setBarcode(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      barcode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Barcode from the passport, if any.
     * </pre>
     *
     * <code>bytes barcode = 1;</code>
     */
    public Builder clearBarcode() {
      
      barcode_ = getDefaultInstance().getBarcode();
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * Unique document ID for this passport.
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Unique document ID for this passport.
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Unique document ID for this passport.
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique document ID for this passport.
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique document ID for this passport.
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object nation_ = "";
    /**
     * <pre>
     * Nation that issued this passport, as an abbreviated string code, like "US" or "UK".
     * </pre>
     *
     * <code>string nation = 3;</code>
     */
    public java.lang.String getNation() {
      java.lang.Object ref = nation_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nation_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Nation that issued this passport, as an abbreviated string code, like "US" or "UK".
     * </pre>
     *
     * <code>string nation = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNationBytes() {
      java.lang.Object ref = nation_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Nation that issued this passport, as an abbreviated string code, like "US" or "UK".
     * </pre>
     *
     * <code>string nation = 3;</code>
     */
    public Builder setNation(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nation_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Nation that issued this passport, as an abbreviated string code, like "US" or "UK".
     * </pre>
     *
     * <code>string nation = 3;</code>
     */
    public Builder clearNation() {
      
      nation_ = getDefaultInstance().getNation();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Nation that issued this passport, as an abbreviated string code, like "US" or "UK".
     * </pre>
     *
     * <code>string nation = 3;</code>
     */
    public Builder setNationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nation_ = value;
      onChanged();
      return this;
    }

    private io.bloombox.schema.temporal.Date expireDate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder> expireDateBuilder_;
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    public boolean hasExpireDate() {
      return expireDateBuilder_ != null || expireDate_ != null;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    public io.bloombox.schema.temporal.Date getExpireDate() {
      if (expireDateBuilder_ == null) {
        return expireDate_ == null ? io.bloombox.schema.temporal.Date.getDefaultInstance() : expireDate_;
      } else {
        return expireDateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    public Builder setExpireDate(io.bloombox.schema.temporal.Date value) {
      if (expireDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expireDate_ = value;
        onChanged();
      } else {
        expireDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    public Builder setExpireDate(
        io.bloombox.schema.temporal.Date.Builder builderForValue) {
      if (expireDateBuilder_ == null) {
        expireDate_ = builderForValue.build();
        onChanged();
      } else {
        expireDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    public Builder mergeExpireDate(io.bloombox.schema.temporal.Date value) {
      if (expireDateBuilder_ == null) {
        if (expireDate_ != null) {
          expireDate_ =
            io.bloombox.schema.temporal.Date.newBuilder(expireDate_).mergeFrom(value).buildPartial();
        } else {
          expireDate_ = value;
        }
        onChanged();
      } else {
        expireDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    public Builder clearExpireDate() {
      if (expireDateBuilder_ == null) {
        expireDate_ = null;
        onChanged();
      } else {
        expireDate_ = null;
        expireDateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    public io.bloombox.schema.temporal.Date.Builder getExpireDateBuilder() {
      
      onChanged();
      return getExpireDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    public io.bloombox.schema.temporal.DateOrBuilder getExpireDateOrBuilder() {
      if (expireDateBuilder_ != null) {
        return expireDateBuilder_.getMessageOrBuilder();
      } else {
        return expireDate_ == null ?
            io.bloombox.schema.temporal.Date.getDefaultInstance() : expireDate_;
      }
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.temporal.Date expire_date = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder> 
        getExpireDateFieldBuilder() {
      if (expireDateBuilder_ == null) {
        expireDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder>(
                getExpireDate(),
                getParentForChildren(),
                isClean());
        expireDate_ = null;
      }
      return expireDateBuilder_;
    }

    private io.bloombox.schema.temporal.Date birthDate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder> birthDateBuilder_;
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    public boolean hasBirthDate() {
      return birthDateBuilder_ != null || birthDate_ != null;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    public io.bloombox.schema.temporal.Date getBirthDate() {
      if (birthDateBuilder_ == null) {
        return birthDate_ == null ? io.bloombox.schema.temporal.Date.getDefaultInstance() : birthDate_;
      } else {
        return birthDateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    public Builder setBirthDate(io.bloombox.schema.temporal.Date value) {
      if (birthDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        birthDate_ = value;
        onChanged();
      } else {
        birthDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    public Builder setBirthDate(
        io.bloombox.schema.temporal.Date.Builder builderForValue) {
      if (birthDateBuilder_ == null) {
        birthDate_ = builderForValue.build();
        onChanged();
      } else {
        birthDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    public Builder mergeBirthDate(io.bloombox.schema.temporal.Date value) {
      if (birthDateBuilder_ == null) {
        if (birthDate_ != null) {
          birthDate_ =
            io.bloombox.schema.temporal.Date.newBuilder(birthDate_).mergeFrom(value).buildPartial();
        } else {
          birthDate_ = value;
        }
        onChanged();
      } else {
        birthDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    public Builder clearBirthDate() {
      if (birthDateBuilder_ == null) {
        birthDate_ = null;
        onChanged();
      } else {
        birthDate_ = null;
        birthDateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    public io.bloombox.schema.temporal.Date.Builder getBirthDateBuilder() {
      
      onChanged();
      return getBirthDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    public io.bloombox.schema.temporal.DateOrBuilder getBirthDateOrBuilder() {
      if (birthDateBuilder_ != null) {
        return birthDateBuilder_.getMessageOrBuilder();
      } else {
        return birthDate_ == null ?
            io.bloombox.schema.temporal.Date.getDefaultInstance() : birthDate_;
      }
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.temporal.Date birth_date = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder> 
        getBirthDateFieldBuilder() {
      if (birthDateBuilder_ == null) {
        birthDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder>(
                getBirthDate(),
                getParentForChildren(),
                isClean());
        birthDate_ = null;
      }
      return birthDateBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:identity.ids.Passport)
  }

  // @@protoc_insertion_point(class_scope:identity.ids.Passport)
  private static final io.bloombox.schema.identity.ids.Passport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.identity.ids.Passport();
  }

  public static io.bloombox.schema.identity.ids.Passport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Passport>
      PARSER = new com.google.protobuf.AbstractParser<Passport>() {
    public Passport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Passport(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Passport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Passport> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.identity.ids.Passport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

