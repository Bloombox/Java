/*
 * Copyright 2019, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/StaffUser.proto

package io.bloombox.schema.identity;

public final class AppStaff {
  private AppStaff() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StaffUserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.identity.StaffUser)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Display name for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.person.Name name = 2;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * Display name for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.person.Name name = 2;</code>
     */
    io.opencannabis.schema.person.Name getName();
    /**
     * <pre>
     * Display name for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.person.Name name = 2;</code>
     */
    io.opencannabis.schema.person.NameOrBuilder getNameOrBuilder();

    /**
     * <pre>
     * Avatar/portrait for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.media.MediaKey portrait = 3;</code>
     */
    boolean hasPortrait();
    /**
     * <pre>
     * Avatar/portrait for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.media.MediaKey portrait = 3;</code>
     */
    io.opencannabis.schema.media.MediaItemKey.MediaKey getPortrait();
    /**
     * <pre>
     * Avatar/portrait for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.media.MediaKey portrait = 3;</code>
     */
    io.opencannabis.schema.media.MediaItemKey.MediaKeyOrBuilder getPortraitOrBuilder();

    /**
     * <pre>
     * Identity account used to authorize access to the point-of-sale.
     * </pre>
     *
     * <code>.bloombox.identity.UserIdentity identity = 4;</code>
     */
    boolean hasIdentity();
    /**
     * <pre>
     * Identity account used to authorize access to the point-of-sale.
     * </pre>
     *
     * <code>.bloombox.identity.UserIdentity identity = 4;</code>
     */
    io.bloombox.schema.identity.AppUser.UserIdentity getIdentity();
    /**
     * <pre>
     * Identity account used to authorize access to the point-of-sale.
     * </pre>
     *
     * <code>.bloombox.identity.UserIdentity identity = 4;</code>
     */
    io.bloombox.schema.identity.AppUser.UserIdentityOrBuilder getIdentityOrBuilder();

    /**
     * <pre>
     * Flag to indicate whether the user needs to setup their POS profile.
     * </pre>
     *
     * <code>bool setup = 5;</code>
     */
    boolean getSetup();
  }
  /**
   * <pre>
   * Specifies a staff user, logged in via POS authorization.
   * </pre>
   *
   * Protobuf type {@code bloombox.identity.StaffUser}
   */
  public  static final class StaffUser extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.identity.StaffUser)
      StaffUserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StaffUser.newBuilder() to construct.
    private StaffUser(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StaffUser() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StaffUser(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              io.opencannabis.schema.person.Name.Builder subBuilder = null;
              if (name_ != null) {
                subBuilder = name_.toBuilder();
              }
              name_ = input.readMessage(io.opencannabis.schema.person.Name.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(name_);
                name_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.opencannabis.schema.media.MediaItemKey.MediaKey.Builder subBuilder = null;
              if (portrait_ != null) {
                subBuilder = portrait_.toBuilder();
              }
              portrait_ = input.readMessage(io.opencannabis.schema.media.MediaItemKey.MediaKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(portrait_);
                portrait_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.bloombox.schema.identity.AppUser.UserIdentity.Builder subBuilder = null;
              if (identity_ != null) {
                subBuilder = identity_.toBuilder();
              }
              identity_ = input.readMessage(io.bloombox.schema.identity.AppUser.UserIdentity.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identity_);
                identity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              setup_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.identity.AppStaff.internal_static_bloombox_identity_StaffUser_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.identity.AppStaff.internal_static_bloombox_identity_StaffUser_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.identity.AppStaff.StaffUser.class, io.bloombox.schema.identity.AppStaff.StaffUser.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private io.opencannabis.schema.person.Name name_;
    /**
     * <pre>
     * Display name for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.person.Name name = 2;</code>
     */
    public boolean hasName() {
      return name_ != null;
    }
    /**
     * <pre>
     * Display name for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.person.Name name = 2;</code>
     */
    public io.opencannabis.schema.person.Name getName() {
      return name_ == null ? io.opencannabis.schema.person.Name.getDefaultInstance() : name_;
    }
    /**
     * <pre>
     * Display name for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.person.Name name = 2;</code>
     */
    public io.opencannabis.schema.person.NameOrBuilder getNameOrBuilder() {
      return getName();
    }

    public static final int PORTRAIT_FIELD_NUMBER = 3;
    private io.opencannabis.schema.media.MediaItemKey.MediaKey portrait_;
    /**
     * <pre>
     * Avatar/portrait for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.media.MediaKey portrait = 3;</code>
     */
    public boolean hasPortrait() {
      return portrait_ != null;
    }
    /**
     * <pre>
     * Avatar/portrait for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.media.MediaKey portrait = 3;</code>
     */
    public io.opencannabis.schema.media.MediaItemKey.MediaKey getPortrait() {
      return portrait_ == null ? io.opencannabis.schema.media.MediaItemKey.MediaKey.getDefaultInstance() : portrait_;
    }
    /**
     * <pre>
     * Avatar/portrait for the logged-in user.
     * </pre>
     *
     * <code>.opencannabis.media.MediaKey portrait = 3;</code>
     */
    public io.opencannabis.schema.media.MediaItemKey.MediaKeyOrBuilder getPortraitOrBuilder() {
      return getPortrait();
    }

    public static final int IDENTITY_FIELD_NUMBER = 4;
    private io.bloombox.schema.identity.AppUser.UserIdentity identity_;
    /**
     * <pre>
     * Identity account used to authorize access to the point-of-sale.
     * </pre>
     *
     * <code>.bloombox.identity.UserIdentity identity = 4;</code>
     */
    public boolean hasIdentity() {
      return identity_ != null;
    }
    /**
     * <pre>
     * Identity account used to authorize access to the point-of-sale.
     * </pre>
     *
     * <code>.bloombox.identity.UserIdentity identity = 4;</code>
     */
    public io.bloombox.schema.identity.AppUser.UserIdentity getIdentity() {
      return identity_ == null ? io.bloombox.schema.identity.AppUser.UserIdentity.getDefaultInstance() : identity_;
    }
    /**
     * <pre>
     * Identity account used to authorize access to the point-of-sale.
     * </pre>
     *
     * <code>.bloombox.identity.UserIdentity identity = 4;</code>
     */
    public io.bloombox.schema.identity.AppUser.UserIdentityOrBuilder getIdentityOrBuilder() {
      return getIdentity();
    }

    public static final int SETUP_FIELD_NUMBER = 5;
    private boolean setup_;
    /**
     * <pre>
     * Flag to indicate whether the user needs to setup their POS profile.
     * </pre>
     *
     * <code>bool setup = 5;</code>
     */
    public boolean getSetup() {
      return setup_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (name_ != null) {
        output.writeMessage(2, getName());
      }
      if (portrait_ != null) {
        output.writeMessage(3, getPortrait());
      }
      if (identity_ != null) {
        output.writeMessage(4, getIdentity());
      }
      if (setup_ != false) {
        output.writeBool(5, setup_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (name_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getName());
      }
      if (portrait_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPortrait());
      }
      if (identity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getIdentity());
      }
      if (setup_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, setup_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.identity.AppStaff.StaffUser)) {
        return super.equals(obj);
      }
      io.bloombox.schema.identity.AppStaff.StaffUser other = (io.bloombox.schema.identity.AppStaff.StaffUser) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasPortrait() != other.hasPortrait()) return false;
      if (hasPortrait()) {
        if (!getPortrait()
            .equals(other.getPortrait())) return false;
      }
      if (hasIdentity() != other.hasIdentity()) return false;
      if (hasIdentity()) {
        if (!getIdentity()
            .equals(other.getIdentity())) return false;
      }
      if (getSetup()
          != other.getSetup()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasPortrait()) {
        hash = (37 * hash) + PORTRAIT_FIELD_NUMBER;
        hash = (53 * hash) + getPortrait().hashCode();
      }
      if (hasIdentity()) {
        hash = (37 * hash) + IDENTITY_FIELD_NUMBER;
        hash = (53 * hash) + getIdentity().hashCode();
      }
      hash = (37 * hash) + SETUP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSetup());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.AppStaff.StaffUser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.identity.AppStaff.StaffUser prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a staff user, logged in via POS authorization.
     * </pre>
     *
     * Protobuf type {@code bloombox.identity.StaffUser}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.identity.StaffUser)
        io.bloombox.schema.identity.AppStaff.StaffUserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.identity.AppStaff.internal_static_bloombox_identity_StaffUser_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.identity.AppStaff.internal_static_bloombox_identity_StaffUser_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.identity.AppStaff.StaffUser.class, io.bloombox.schema.identity.AppStaff.StaffUser.Builder.class);
      }

      // Construct using io.bloombox.schema.identity.AppStaff.StaffUser.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (nameBuilder_ == null) {
          name_ = null;
        } else {
          name_ = null;
          nameBuilder_ = null;
        }
        if (portraitBuilder_ == null) {
          portrait_ = null;
        } else {
          portrait_ = null;
          portraitBuilder_ = null;
        }
        if (identityBuilder_ == null) {
          identity_ = null;
        } else {
          identity_ = null;
          identityBuilder_ = null;
        }
        setup_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.identity.AppStaff.internal_static_bloombox_identity_StaffUser_descriptor;
      }

      @java.lang.Override
      public io.bloombox.schema.identity.AppStaff.StaffUser getDefaultInstanceForType() {
        return io.bloombox.schema.identity.AppStaff.StaffUser.getDefaultInstance();
      }

      @java.lang.Override
      public io.bloombox.schema.identity.AppStaff.StaffUser build() {
        io.bloombox.schema.identity.AppStaff.StaffUser result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.bloombox.schema.identity.AppStaff.StaffUser buildPartial() {
        io.bloombox.schema.identity.AppStaff.StaffUser result = new io.bloombox.schema.identity.AppStaff.StaffUser(this);
        if (nameBuilder_ == null) {
          result.name_ = name_;
        } else {
          result.name_ = nameBuilder_.build();
        }
        if (portraitBuilder_ == null) {
          result.portrait_ = portrait_;
        } else {
          result.portrait_ = portraitBuilder_.build();
        }
        if (identityBuilder_ == null) {
          result.identity_ = identity_;
        } else {
          result.identity_ = identityBuilder_.build();
        }
        result.setup_ = setup_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.identity.AppStaff.StaffUser) {
          return mergeFrom((io.bloombox.schema.identity.AppStaff.StaffUser)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.identity.AppStaff.StaffUser other) {
        if (other == io.bloombox.schema.identity.AppStaff.StaffUser.getDefaultInstance()) return this;
        if (other.hasName()) {
          mergeName(other.getName());
        }
        if (other.hasPortrait()) {
          mergePortrait(other.getPortrait());
        }
        if (other.hasIdentity()) {
          mergeIdentity(other.getIdentity());
        }
        if (other.getSetup() != false) {
          setSetup(other.getSetup());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.identity.AppStaff.StaffUser parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.identity.AppStaff.StaffUser) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.opencannabis.schema.person.Name name_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.person.Name, io.opencannabis.schema.person.Name.Builder, io.opencannabis.schema.person.NameOrBuilder> nameBuilder_;
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      public boolean hasName() {
        return nameBuilder_ != null || name_ != null;
      }
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      public io.opencannabis.schema.person.Name getName() {
        if (nameBuilder_ == null) {
          return name_ == null ? io.opencannabis.schema.person.Name.getDefaultInstance() : name_;
        } else {
          return nameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      public Builder setName(io.opencannabis.schema.person.Name value) {
        if (nameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          name_ = value;
          onChanged();
        } else {
          nameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      public Builder setName(
          io.opencannabis.schema.person.Name.Builder builderForValue) {
        if (nameBuilder_ == null) {
          name_ = builderForValue.build();
          onChanged();
        } else {
          nameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      public Builder mergeName(io.opencannabis.schema.person.Name value) {
        if (nameBuilder_ == null) {
          if (name_ != null) {
            name_ =
              io.opencannabis.schema.person.Name.newBuilder(name_).mergeFrom(value).buildPartial();
          } else {
            name_ = value;
          }
          onChanged();
        } else {
          nameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      public Builder clearName() {
        if (nameBuilder_ == null) {
          name_ = null;
          onChanged();
        } else {
          name_ = null;
          nameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      public io.opencannabis.schema.person.Name.Builder getNameBuilder() {
        
        onChanged();
        return getNameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      public io.opencannabis.schema.person.NameOrBuilder getNameOrBuilder() {
        if (nameBuilder_ != null) {
          return nameBuilder_.getMessageOrBuilder();
        } else {
          return name_ == null ?
              io.opencannabis.schema.person.Name.getDefaultInstance() : name_;
        }
      }
      /**
       * <pre>
       * Display name for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.person.Name name = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.person.Name, io.opencannabis.schema.person.Name.Builder, io.opencannabis.schema.person.NameOrBuilder> 
          getNameFieldBuilder() {
        if (nameBuilder_ == null) {
          nameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.person.Name, io.opencannabis.schema.person.Name.Builder, io.opencannabis.schema.person.NameOrBuilder>(
                  getName(),
                  getParentForChildren(),
                  isClean());
          name_ = null;
        }
        return nameBuilder_;
      }

      private io.opencannabis.schema.media.MediaItemKey.MediaKey portrait_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.media.MediaItemKey.MediaKey, io.opencannabis.schema.media.MediaItemKey.MediaKey.Builder, io.opencannabis.schema.media.MediaItemKey.MediaKeyOrBuilder> portraitBuilder_;
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      public boolean hasPortrait() {
        return portraitBuilder_ != null || portrait_ != null;
      }
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      public io.opencannabis.schema.media.MediaItemKey.MediaKey getPortrait() {
        if (portraitBuilder_ == null) {
          return portrait_ == null ? io.opencannabis.schema.media.MediaItemKey.MediaKey.getDefaultInstance() : portrait_;
        } else {
          return portraitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      public Builder setPortrait(io.opencannabis.schema.media.MediaItemKey.MediaKey value) {
        if (portraitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          portrait_ = value;
          onChanged();
        } else {
          portraitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      public Builder setPortrait(
          io.opencannabis.schema.media.MediaItemKey.MediaKey.Builder builderForValue) {
        if (portraitBuilder_ == null) {
          portrait_ = builderForValue.build();
          onChanged();
        } else {
          portraitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      public Builder mergePortrait(io.opencannabis.schema.media.MediaItemKey.MediaKey value) {
        if (portraitBuilder_ == null) {
          if (portrait_ != null) {
            portrait_ =
              io.opencannabis.schema.media.MediaItemKey.MediaKey.newBuilder(portrait_).mergeFrom(value).buildPartial();
          } else {
            portrait_ = value;
          }
          onChanged();
        } else {
          portraitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      public Builder clearPortrait() {
        if (portraitBuilder_ == null) {
          portrait_ = null;
          onChanged();
        } else {
          portrait_ = null;
          portraitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      public io.opencannabis.schema.media.MediaItemKey.MediaKey.Builder getPortraitBuilder() {
        
        onChanged();
        return getPortraitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      public io.opencannabis.schema.media.MediaItemKey.MediaKeyOrBuilder getPortraitOrBuilder() {
        if (portraitBuilder_ != null) {
          return portraitBuilder_.getMessageOrBuilder();
        } else {
          return portrait_ == null ?
              io.opencannabis.schema.media.MediaItemKey.MediaKey.getDefaultInstance() : portrait_;
        }
      }
      /**
       * <pre>
       * Avatar/portrait for the logged-in user.
       * </pre>
       *
       * <code>.opencannabis.media.MediaKey portrait = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.media.MediaItemKey.MediaKey, io.opencannabis.schema.media.MediaItemKey.MediaKey.Builder, io.opencannabis.schema.media.MediaItemKey.MediaKeyOrBuilder> 
          getPortraitFieldBuilder() {
        if (portraitBuilder_ == null) {
          portraitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.media.MediaItemKey.MediaKey, io.opencannabis.schema.media.MediaItemKey.MediaKey.Builder, io.opencannabis.schema.media.MediaItemKey.MediaKeyOrBuilder>(
                  getPortrait(),
                  getParentForChildren(),
                  isClean());
          portrait_ = null;
        }
        return portraitBuilder_;
      }

      private io.bloombox.schema.identity.AppUser.UserIdentity identity_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.AppUser.UserIdentity, io.bloombox.schema.identity.AppUser.UserIdentity.Builder, io.bloombox.schema.identity.AppUser.UserIdentityOrBuilder> identityBuilder_;
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      public boolean hasIdentity() {
        return identityBuilder_ != null || identity_ != null;
      }
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      public io.bloombox.schema.identity.AppUser.UserIdentity getIdentity() {
        if (identityBuilder_ == null) {
          return identity_ == null ? io.bloombox.schema.identity.AppUser.UserIdentity.getDefaultInstance() : identity_;
        } else {
          return identityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      public Builder setIdentity(io.bloombox.schema.identity.AppUser.UserIdentity value) {
        if (identityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identity_ = value;
          onChanged();
        } else {
          identityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      public Builder setIdentity(
          io.bloombox.schema.identity.AppUser.UserIdentity.Builder builderForValue) {
        if (identityBuilder_ == null) {
          identity_ = builderForValue.build();
          onChanged();
        } else {
          identityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      public Builder mergeIdentity(io.bloombox.schema.identity.AppUser.UserIdentity value) {
        if (identityBuilder_ == null) {
          if (identity_ != null) {
            identity_ =
              io.bloombox.schema.identity.AppUser.UserIdentity.newBuilder(identity_).mergeFrom(value).buildPartial();
          } else {
            identity_ = value;
          }
          onChanged();
        } else {
          identityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      public Builder clearIdentity() {
        if (identityBuilder_ == null) {
          identity_ = null;
          onChanged();
        } else {
          identity_ = null;
          identityBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      public io.bloombox.schema.identity.AppUser.UserIdentity.Builder getIdentityBuilder() {
        
        onChanged();
        return getIdentityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      public io.bloombox.schema.identity.AppUser.UserIdentityOrBuilder getIdentityOrBuilder() {
        if (identityBuilder_ != null) {
          return identityBuilder_.getMessageOrBuilder();
        } else {
          return identity_ == null ?
              io.bloombox.schema.identity.AppUser.UserIdentity.getDefaultInstance() : identity_;
        }
      }
      /**
       * <pre>
       * Identity account used to authorize access to the point-of-sale.
       * </pre>
       *
       * <code>.bloombox.identity.UserIdentity identity = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.AppUser.UserIdentity, io.bloombox.schema.identity.AppUser.UserIdentity.Builder, io.bloombox.schema.identity.AppUser.UserIdentityOrBuilder> 
          getIdentityFieldBuilder() {
        if (identityBuilder_ == null) {
          identityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.identity.AppUser.UserIdentity, io.bloombox.schema.identity.AppUser.UserIdentity.Builder, io.bloombox.schema.identity.AppUser.UserIdentityOrBuilder>(
                  getIdentity(),
                  getParentForChildren(),
                  isClean());
          identity_ = null;
        }
        return identityBuilder_;
      }

      private boolean setup_ ;
      /**
       * <pre>
       * Flag to indicate whether the user needs to setup their POS profile.
       * </pre>
       *
       * <code>bool setup = 5;</code>
       */
      public boolean getSetup() {
        return setup_;
      }
      /**
       * <pre>
       * Flag to indicate whether the user needs to setup their POS profile.
       * </pre>
       *
       * <code>bool setup = 5;</code>
       */
      public Builder setSetup(boolean value) {
        
        setup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flag to indicate whether the user needs to setup their POS profile.
       * </pre>
       *
       * <code>bool setup = 5;</code>
       */
      public Builder clearSetup() {
        
        setup_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.identity.StaffUser)
    }

    // @@protoc_insertion_point(class_scope:bloombox.identity.StaffUser)
    private static final io.bloombox.schema.identity.AppStaff.StaffUser DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.identity.AppStaff.StaffUser();
    }

    public static io.bloombox.schema.identity.AppStaff.StaffUser getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StaffUser>
        PARSER = new com.google.protobuf.AbstractParser<StaffUser>() {
      @java.lang.Override
      public StaffUser parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StaffUser(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StaffUser> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StaffUser> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.bloombox.schema.identity.AppStaff.StaffUser getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_identity_StaffUser_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_identity_StaffUser_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030identity/StaffUser.proto\022\021bloombox.ide" +
      "ntity\032\024core/Datamodel.proto\032\023identity/Us" +
      "er.proto\032\024media/MediaKey.proto\032\027person/P" +
      "ersonName.proto\"\246\001\n\tStaffUser\022\'\n\004name\030\002 " +
      "\001(\0132\031.opencannabis.person.Name\022.\n\010portra" +
      "it\030\003 \001(\0132\034.opencannabis.media.MediaKey\0221" +
      "\n\010identity\030\004 \001(\0132\037.bloombox.identity.Use" +
      "rIdentity\022\r\n\005setup\030\005 \001(\010B1\n\033io.bloombox." +
      "schema.identityB\010AppStaffH\001P\000\242\002\003BBSb\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          core.Datamodel.getDescriptor(),
          io.bloombox.schema.identity.AppUser.getDescriptor(),
          io.opencannabis.schema.media.MediaItemKey.getDescriptor(),
          io.opencannabis.schema.person.PersonName.getDescriptor(),
        }, assigner);
    internal_static_bloombox_identity_StaffUser_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_identity_StaffUser_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_identity_StaffUser_descriptor,
        new java.lang.String[] { "Name", "Portrait", "Identity", "Setup", });
    core.Datamodel.getDescriptor();
    io.bloombox.schema.identity.AppUser.getDescriptor();
    io.opencannabis.schema.media.MediaItemKey.getDescriptor();
    io.opencannabis.schema.person.PersonName.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
