/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/ID.proto

package io.bloombox.schema.identity;

public final class IDOuterClass {
  private IDOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_identity_ID_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_identity_ID_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021identity/ID.proto\022\030bloombox.schema.ide" +
      "ntity\032\016bq_field.proto\032\023temporal/Date.pro" +
      "to\032\027identity/ids/USDL.proto\032\033identity/id" +
      "s/Passport.proto\"\211\004\n\002ID\022O\n\004type\030\001 \001(\0162 ." +
      "bloombox.schema.identity.IDTypeB\037\212@\034Type" +
      " of ID we\'re specifying.\022F\n\002id\030\002 \001(\tB:\212@" +
      "7ID number or string identifying this id" +
      "entity document.\022W\n\013expire_date\030\003 \001(\0132\033." +
      "opencannabis.temporal.DateB%\212@\"Expiratio" +
      "n date for this document.\022W\n\nbirth_date\030" +
      "\004 \001(\0132\033.opencannabis.temporal.DateB&\212@#B" +
      "irth date listed on this document.\022Y\n\007li" +
      "cense\030\024 \001(\0132\".bloombox.schema.identity.i" +
      "ds.USDLB\"\212@\037United States Driver\'s Licen" +
      "se.H\000\022Q\n\010passport\030\025 \001(\0132&.bloombox.schem" +
      "a.identity.ids.PassportB\025\212@\022National pas" +
      "sport.H\000B\n\n\010document* \n\006IDType\022\010\n\004USDL\020\000" +
      "\022\014\n\010PASSPORT\020\001B\'\n\033io.bloombox.schema.ide" +
      "ntityH\001P\001\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gen_bq_schema.BqField.getDescriptor(),
          io.opencannabis.schema.temporal.DateOuterClass.getDescriptor(),
          io.bloombox.schema.identity.ids.USDLOuterClass.getDescriptor(),
          io.bloombox.schema.identity.ids.PassportOuterClass.getDescriptor(),
        }, assigner);
    internal_static_bloombox_schema_identity_ID_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_schema_identity_ID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_identity_ID_descriptor,
        new java.lang.String[] { "Type", "Id", "ExpireDate", "BirthDate", "License", "Passport", "Document", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    gen_bq_schema.BqField.getDescriptor();
    io.opencannabis.schema.temporal.DateOuterClass.getDescriptor();
    io.bloombox.schema.identity.ids.USDLOuterClass.getDescriptor();
    io.bloombox.schema.identity.ids.PassportOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
