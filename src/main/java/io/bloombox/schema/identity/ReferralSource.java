/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/User.proto

package io.bloombox.schema.identity;

/**
 * <pre>
 * Enumerates sources for user referrals
 * </pre>
 *
 * Protobuf enum {@code bloombox.schema.identity.ReferralSource}
 */
public enum ReferralSource
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Unknown or unspecified enrollment source.
   * </pre>
   *
   * <code>UNKNOWN = 0;</code>
   */
  UNKNOWN(0),
  /**
   * <pre>
   * Outdoor, real-world advertising.
   * </pre>
   *
   * <code>OUTDOOR = 1;</code>
   */
  OUTDOOR(1),
  /**
   * <pre>
   * Digital advertising.
   * </pre>
   *
   * <code>DIGITAL = 2;</code>
   */
  DIGITAL(2),
  /**
   * <pre>
   * Social Media referral.
   * </pre>
   *
   * <code>SOCIAL_MEDIA = 3;</code>
   */
  SOCIAL_MEDIA(3),
  /**
   * <pre>
   * Friend or Colleague.
   * </pre>
   *
   * <code>FRIEND = 4;</code>
   */
  FRIEND(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Unknown or unspecified enrollment source.
   * </pre>
   *
   * <code>UNKNOWN = 0;</code>
   */
  public static final int UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * Outdoor, real-world advertising.
   * </pre>
   *
   * <code>OUTDOOR = 1;</code>
   */
  public static final int OUTDOOR_VALUE = 1;
  /**
   * <pre>
   * Digital advertising.
   * </pre>
   *
   * <code>DIGITAL = 2;</code>
   */
  public static final int DIGITAL_VALUE = 2;
  /**
   * <pre>
   * Social Media referral.
   * </pre>
   *
   * <code>SOCIAL_MEDIA = 3;</code>
   */
  public static final int SOCIAL_MEDIA_VALUE = 3;
  /**
   * <pre>
   * Friend or Colleague.
   * </pre>
   *
   * <code>FRIEND = 4;</code>
   */
  public static final int FRIEND_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ReferralSource valueOf(int value) {
    return forNumber(value);
  }

  public static ReferralSource forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN;
      case 1: return OUTDOOR;
      case 2: return DIGITAL;
      case 3: return SOCIAL_MEDIA;
      case 4: return FRIEND;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ReferralSource>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ReferralSource> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ReferralSource>() {
          public ReferralSource findValueByNumber(int number) {
            return ReferralSource.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.bloombox.schema.identity.UserOuterClass.getDescriptor().getEnumTypes().get(3);
  }

  private static final ReferralSource[] VALUES = values();

  public static ReferralSource valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ReferralSource(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:bloombox.schema.identity.ReferralSource)
}

