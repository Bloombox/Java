/*
 * Copyright 2017, Bloombox, LLC. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual property
 * of Bloombox, a California Limited Liability Corporation. Use of this code in source form
 * requires permission in writing before use or the publishing of derivative works, for
 * commercial purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/User.proto

package io.bloombox.schema.identity;

public interface IndustryProfileOrBuilder extends
    // @@protoc_insertion_point(interface_extends:identity.IndustryProfile)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Profile inactive/active status.
   * </pre>
   *
   * <code>bool active = 1;</code>
   */
  boolean getActive();

  /**
   * <pre>
   * Map of partner accesses levels to partner codes.
   * </pre>
   *
   * <code>map&lt;string, .security.access.PartnerAccess&gt; partners = 2;</code>
   */
  int getPartnersCount();
  /**
   * <pre>
   * Map of partner accesses levels to partner codes.
   * </pre>
   *
   * <code>map&lt;string, .security.access.PartnerAccess&gt; partners = 2;</code>
   */
  boolean containsPartners(
      java.lang.String key);
  /**
   * Use {@link #getPartnersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.bloombox.schema.security.access.PartnerAccess>
  getPartners();
  /**
   * <pre>
   * Map of partner accesses levels to partner codes.
   * </pre>
   *
   * <code>map&lt;string, .security.access.PartnerAccess&gt; partners = 2;</code>
   */
  java.util.Map<java.lang.String, io.bloombox.schema.security.access.PartnerAccess>
  getPartnersMap();
  /**
   * <pre>
   * Map of partner accesses levels to partner codes.
   * </pre>
   *
   * <code>map&lt;string, .security.access.PartnerAccess&gt; partners = 2;</code>
   */

  io.bloombox.schema.security.access.PartnerAccess getPartnersOrDefault(
      java.lang.String key,
      io.bloombox.schema.security.access.PartnerAccess defaultValue);
  /**
   * <pre>
   * Map of partner accesses levels to partner codes.
   * </pre>
   *
   * <code>map&lt;string, .security.access.PartnerAccess&gt; partners = 2;</code>
   */

  io.bloombox.schema.security.access.PartnerAccess getPartnersOrThrow(
      java.lang.String key);
}
