/*
 * Copyright 2019, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/ID.proto

package io.bloombox.schema.identity;

public final class IdentityID {
  private IdentityID() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Enumerates supported types of user-provided, government-issued ID.
   * </pre>
   *
   * Protobuf enum {@code bloombox.identity.IDType}
   */
  public enum IDType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * United States Driver's License, issued by a U.S. state government.
     * </pre>
     *
     * <code>USDL = 0;</code>
     */
    USDL(0),
    /**
     * <pre>
     * National passport, issued by a nation-state.
     * </pre>
     *
     * <code>PASSPORT = 1;</code>
     */
    PASSPORT(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * United States Driver's License, issued by a U.S. state government.
     * </pre>
     *
     * <code>USDL = 0;</code>
     */
    public static final int USDL_VALUE = 0;
    /**
     * <pre>
     * National passport, issued by a nation-state.
     * </pre>
     *
     * <code>PASSPORT = 1;</code>
     */
    public static final int PASSPORT_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IDType valueOf(int value) {
      return forNumber(value);
    }

    public static IDType forNumber(int value) {
      switch (value) {
        case 0: return USDL;
        case 1: return PASSPORT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IDType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IDType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IDType>() {
            public IDType findValueByNumber(int number) {
              return IDType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.bloombox.schema.identity.IdentityID.getDescriptor().getEnumTypes().get(0);
    }

    private static final IDType[] VALUES = values();

    public static IDType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IDType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:bloombox.identity.IDType)
  }

  public interface IDReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.identity.IDReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of ID we're specifying.
     * </pre>
     *
     * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Type of ID we're specifying.
     * </pre>
     *
     * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
     */
    io.bloombox.schema.identity.IdentityID.IDType getType();

    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    boolean hasExpireDate();
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    io.opencannabis.schema.temporal.TemporalDate.Date getExpireDate();
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getExpireDateOrBuilder();

    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    boolean hasBirthDate();
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    io.opencannabis.schema.temporal.TemporalDate.Date getBirthDate();
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getBirthDateOrBuilder();

    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    boolean hasLicense();
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference getLicense();
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    io.bloombox.schema.identity.ids.DriversLicenseID.USDLReferenceOrBuilder getLicenseOrBuilder();

    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    boolean hasPassport();
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    io.bloombox.schema.identity.ids.PassportID.PassportReference getPassport();
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    io.bloombox.schema.identity.ids.PassportID.PassportReferenceOrBuilder getPassportOrBuilder();

    public io.bloombox.schema.identity.IdentityID.IDReference.DocumentCase getDocumentCase();
  }
  /**
   * <pre>
   * Reference to a government-issued ID.
   * </pre>
   *
   * Protobuf type {@code bloombox.identity.IDReference}
   */
  public  static final class IDReference extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.identity.IDReference)
      IDReferenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IDReference.newBuilder() to construct.
    private IDReference(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IDReference() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IDReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              io.opencannabis.schema.temporal.TemporalDate.Date.Builder subBuilder = null;
              if (expireDate_ != null) {
                subBuilder = expireDate_.toBuilder();
              }
              expireDate_ = input.readMessage(io.opencannabis.schema.temporal.TemporalDate.Date.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expireDate_);
                expireDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.opencannabis.schema.temporal.TemporalDate.Date.Builder subBuilder = null;
              if (birthDate_ != null) {
                subBuilder = birthDate_.toBuilder();
              }
              birthDate_ = input.readMessage(io.opencannabis.schema.temporal.TemporalDate.Date.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(birthDate_);
                birthDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 162: {
              io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.Builder subBuilder = null;
              if (documentCase_ == 20) {
                subBuilder = ((io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_).toBuilder();
              }
              document_ =
                  input.readMessage(io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_);
                document_ = subBuilder.buildPartial();
              }
              documentCase_ = 20;
              break;
            }
            case 170: {
              io.bloombox.schema.identity.ids.PassportID.PassportReference.Builder subBuilder = null;
              if (documentCase_ == 21) {
                subBuilder = ((io.bloombox.schema.identity.ids.PassportID.PassportReference) document_).toBuilder();
              }
              document_ =
                  input.readMessage(io.bloombox.schema.identity.ids.PassportID.PassportReference.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.identity.ids.PassportID.PassportReference) document_);
                document_ = subBuilder.buildPartial();
              }
              documentCase_ = 21;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_IDReference_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_IDReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.identity.IdentityID.IDReference.class, io.bloombox.schema.identity.IdentityID.IDReference.Builder.class);
    }

    private int documentCase_ = 0;
    private java.lang.Object document_;
    public enum DocumentCase
        implements com.google.protobuf.Internal.EnumLite {
      LICENSE(20),
      PASSPORT(21),
      DOCUMENT_NOT_SET(0);
      private final int value;
      private DocumentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DocumentCase valueOf(int value) {
        return forNumber(value);
      }

      public static DocumentCase forNumber(int value) {
        switch (value) {
          case 20: return LICENSE;
          case 21: return PASSPORT;
          case 0: return DOCUMENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DocumentCase
    getDocumentCase() {
      return DocumentCase.forNumber(
          documentCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type of ID we're specifying.
     * </pre>
     *
     * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type of ID we're specifying.
     * </pre>
     *
     * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
     */
    public io.bloombox.schema.identity.IdentityID.IDType getType() {
      @SuppressWarnings("deprecation")
      io.bloombox.schema.identity.IdentityID.IDType result = io.bloombox.schema.identity.IdentityID.IDType.valueOf(type_);
      return result == null ? io.bloombox.schema.identity.IdentityID.IDType.UNRECOGNIZED : result;
    }

    public static final int EXPIRE_DATE_FIELD_NUMBER = 2;
    private io.opencannabis.schema.temporal.TemporalDate.Date expireDate_;
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    public boolean hasExpireDate() {
      return expireDate_ != null;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalDate.Date getExpireDate() {
      return expireDate_ == null ? io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : expireDate_;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getExpireDateOrBuilder() {
      return getExpireDate();
    }

    public static final int BIRTH_DATE_FIELD_NUMBER = 3;
    private io.opencannabis.schema.temporal.TemporalDate.Date birthDate_;
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    public boolean hasBirthDate() {
      return birthDate_ != null;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalDate.Date getBirthDate() {
      return birthDate_ == null ? io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : birthDate_;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getBirthDateOrBuilder() {
      return getBirthDate();
    }

    public static final int LICENSE_FIELD_NUMBER = 20;
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    public boolean hasLicense() {
      return documentCase_ == 20;
    }
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference getLicense() {
      if (documentCase_ == 20) {
         return (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_;
      }
      return io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance();
    }
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReferenceOrBuilder getLicenseOrBuilder() {
      if (documentCase_ == 20) {
         return (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_;
      }
      return io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance();
    }

    public static final int PASSPORT_FIELD_NUMBER = 21;
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    public boolean hasPassport() {
      return documentCase_ == 21;
    }
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    public io.bloombox.schema.identity.ids.PassportID.PassportReference getPassport() {
      if (documentCase_ == 21) {
         return (io.bloombox.schema.identity.ids.PassportID.PassportReference) document_;
      }
      return io.bloombox.schema.identity.ids.PassportID.PassportReference.getDefaultInstance();
    }
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    public io.bloombox.schema.identity.ids.PassportID.PassportReferenceOrBuilder getPassportOrBuilder() {
      if (documentCase_ == 21) {
         return (io.bloombox.schema.identity.ids.PassportID.PassportReference) document_;
      }
      return io.bloombox.schema.identity.ids.PassportID.PassportReference.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != io.bloombox.schema.identity.IdentityID.IDType.USDL.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (expireDate_ != null) {
        output.writeMessage(2, getExpireDate());
      }
      if (birthDate_ != null) {
        output.writeMessage(3, getBirthDate());
      }
      if (documentCase_ == 20) {
        output.writeMessage(20, (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_);
      }
      if (documentCase_ == 21) {
        output.writeMessage(21, (io.bloombox.schema.identity.ids.PassportID.PassportReference) document_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != io.bloombox.schema.identity.IdentityID.IDType.USDL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (expireDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getExpireDate());
      }
      if (birthDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBirthDate());
      }
      if (documentCase_ == 20) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_);
      }
      if (documentCase_ == 21) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, (io.bloombox.schema.identity.ids.PassportID.PassportReference) document_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.identity.IdentityID.IDReference)) {
        return super.equals(obj);
      }
      io.bloombox.schema.identity.IdentityID.IDReference other = (io.bloombox.schema.identity.IdentityID.IDReference) obj;

      if (type_ != other.type_) return false;
      if (hasExpireDate() != other.hasExpireDate()) return false;
      if (hasExpireDate()) {
        if (!getExpireDate()
            .equals(other.getExpireDate())) return false;
      }
      if (hasBirthDate() != other.hasBirthDate()) return false;
      if (hasBirthDate()) {
        if (!getBirthDate()
            .equals(other.getBirthDate())) return false;
      }
      if (!getDocumentCase().equals(other.getDocumentCase())) return false;
      switch (documentCase_) {
        case 20:
          if (!getLicense()
              .equals(other.getLicense())) return false;
          break;
        case 21:
          if (!getPassport()
              .equals(other.getPassport())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasExpireDate()) {
        hash = (37 * hash) + EXPIRE_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getExpireDate().hashCode();
      }
      if (hasBirthDate()) {
        hash = (37 * hash) + BIRTH_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getBirthDate().hashCode();
      }
      switch (documentCase_) {
        case 20:
          hash = (37 * hash) + LICENSE_FIELD_NUMBER;
          hash = (53 * hash) + getLicense().hashCode();
          break;
        case 21:
          hash = (37 * hash) + PASSPORT_FIELD_NUMBER;
          hash = (53 * hash) + getPassport().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.IdentityID.IDReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.identity.IdentityID.IDReference prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Reference to a government-issued ID.
     * </pre>
     *
     * Protobuf type {@code bloombox.identity.IDReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.identity.IDReference)
        io.bloombox.schema.identity.IdentityID.IDReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_IDReference_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_IDReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.identity.IdentityID.IDReference.class, io.bloombox.schema.identity.IdentityID.IDReference.Builder.class);
      }

      // Construct using io.bloombox.schema.identity.IdentityID.IDReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (expireDateBuilder_ == null) {
          expireDate_ = null;
        } else {
          expireDate_ = null;
          expireDateBuilder_ = null;
        }
        if (birthDateBuilder_ == null) {
          birthDate_ = null;
        } else {
          birthDate_ = null;
          birthDateBuilder_ = null;
        }
        documentCase_ = 0;
        document_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_IDReference_descriptor;
      }

      @java.lang.Override
      public io.bloombox.schema.identity.IdentityID.IDReference getDefaultInstanceForType() {
        return io.bloombox.schema.identity.IdentityID.IDReference.getDefaultInstance();
      }

      @java.lang.Override
      public io.bloombox.schema.identity.IdentityID.IDReference build() {
        io.bloombox.schema.identity.IdentityID.IDReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.bloombox.schema.identity.IdentityID.IDReference buildPartial() {
        io.bloombox.schema.identity.IdentityID.IDReference result = new io.bloombox.schema.identity.IdentityID.IDReference(this);
        result.type_ = type_;
        if (expireDateBuilder_ == null) {
          result.expireDate_ = expireDate_;
        } else {
          result.expireDate_ = expireDateBuilder_.build();
        }
        if (birthDateBuilder_ == null) {
          result.birthDate_ = birthDate_;
        } else {
          result.birthDate_ = birthDateBuilder_.build();
        }
        if (documentCase_ == 20) {
          if (licenseBuilder_ == null) {
            result.document_ = document_;
          } else {
            result.document_ = licenseBuilder_.build();
          }
        }
        if (documentCase_ == 21) {
          if (passportBuilder_ == null) {
            result.document_ = document_;
          } else {
            result.document_ = passportBuilder_.build();
          }
        }
        result.documentCase_ = documentCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.identity.IdentityID.IDReference) {
          return mergeFrom((io.bloombox.schema.identity.IdentityID.IDReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.identity.IdentityID.IDReference other) {
        if (other == io.bloombox.schema.identity.IdentityID.IDReference.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasExpireDate()) {
          mergeExpireDate(other.getExpireDate());
        }
        if (other.hasBirthDate()) {
          mergeBirthDate(other.getBirthDate());
        }
        switch (other.getDocumentCase()) {
          case LICENSE: {
            mergeLicense(other.getLicense());
            break;
          }
          case PASSPORT: {
            mergePassport(other.getPassport());
            break;
          }
          case DOCUMENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.identity.IdentityID.IDReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.identity.IdentityID.IDReference) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int documentCase_ = 0;
      private java.lang.Object document_;
      public DocumentCase
          getDocumentCase() {
        return DocumentCase.forNumber(
            documentCase_);
      }

      public Builder clearDocument() {
        documentCase_ = 0;
        document_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public io.bloombox.schema.identity.IdentityID.IDType getType() {
        @SuppressWarnings("deprecation")
        io.bloombox.schema.identity.IdentityID.IDType result = io.bloombox.schema.identity.IdentityID.IDType.valueOf(type_);
        return result == null ? io.bloombox.schema.identity.IdentityID.IDType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public Builder setType(io.bloombox.schema.identity.IdentityID.IDType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private io.opencannabis.schema.temporal.TemporalDate.Date expireDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder> expireDateBuilder_;
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public boolean hasExpireDate() {
        return expireDateBuilder_ != null || expireDate_ != null;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.Date getExpireDate() {
        if (expireDateBuilder_ == null) {
          return expireDate_ == null ? io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : expireDate_;
        } else {
          return expireDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public Builder setExpireDate(io.opencannabis.schema.temporal.TemporalDate.Date value) {
        if (expireDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expireDate_ = value;
          onChanged();
        } else {
          expireDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public Builder setExpireDate(
          io.opencannabis.schema.temporal.TemporalDate.Date.Builder builderForValue) {
        if (expireDateBuilder_ == null) {
          expireDate_ = builderForValue.build();
          onChanged();
        } else {
          expireDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public Builder mergeExpireDate(io.opencannabis.schema.temporal.TemporalDate.Date value) {
        if (expireDateBuilder_ == null) {
          if (expireDate_ != null) {
            expireDate_ =
              io.opencannabis.schema.temporal.TemporalDate.Date.newBuilder(expireDate_).mergeFrom(value).buildPartial();
          } else {
            expireDate_ = value;
          }
          onChanged();
        } else {
          expireDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public Builder clearExpireDate() {
        if (expireDateBuilder_ == null) {
          expireDate_ = null;
          onChanged();
        } else {
          expireDate_ = null;
          expireDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.Date.Builder getExpireDateBuilder() {
        
        onChanged();
        return getExpireDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getExpireDateOrBuilder() {
        if (expireDateBuilder_ != null) {
          return expireDateBuilder_.getMessageOrBuilder();
        } else {
          return expireDate_ == null ?
              io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : expireDate_;
        }
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 2 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder> 
          getExpireDateFieldBuilder() {
        if (expireDateBuilder_ == null) {
          expireDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder>(
                  getExpireDate(),
                  getParentForChildren(),
                  isClean());
          expireDate_ = null;
        }
        return expireDateBuilder_;
      }

      private io.opencannabis.schema.temporal.TemporalDate.Date birthDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder> birthDateBuilder_;
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public boolean hasBirthDate() {
        return birthDateBuilder_ != null || birthDate_ != null;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.Date getBirthDate() {
        if (birthDateBuilder_ == null) {
          return birthDate_ == null ? io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : birthDate_;
        } else {
          return birthDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public Builder setBirthDate(io.opencannabis.schema.temporal.TemporalDate.Date value) {
        if (birthDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          birthDate_ = value;
          onChanged();
        } else {
          birthDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public Builder setBirthDate(
          io.opencannabis.schema.temporal.TemporalDate.Date.Builder builderForValue) {
        if (birthDateBuilder_ == null) {
          birthDate_ = builderForValue.build();
          onChanged();
        } else {
          birthDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public Builder mergeBirthDate(io.opencannabis.schema.temporal.TemporalDate.Date value) {
        if (birthDateBuilder_ == null) {
          if (birthDate_ != null) {
            birthDate_ =
              io.opencannabis.schema.temporal.TemporalDate.Date.newBuilder(birthDate_).mergeFrom(value).buildPartial();
          } else {
            birthDate_ = value;
          }
          onChanged();
        } else {
          birthDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public Builder clearBirthDate() {
        if (birthDateBuilder_ == null) {
          birthDate_ = null;
          onChanged();
        } else {
          birthDate_ = null;
          birthDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.Date.Builder getBirthDateBuilder() {
        
        onChanged();
        return getBirthDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getBirthDateOrBuilder() {
        if (birthDateBuilder_ != null) {
          return birthDateBuilder_.getMessageOrBuilder();
        } else {
          return birthDate_ == null ?
              io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : birthDate_;
        }
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 3 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder> 
          getBirthDateFieldBuilder() {
        if (birthDateBuilder_ == null) {
          birthDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder>(
                  getBirthDate(),
                  getParentForChildren(),
                  isClean());
          birthDate_ = null;
        }
        return birthDateBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference, io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLReferenceOrBuilder> licenseBuilder_;
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public boolean hasLicense() {
        return documentCase_ == 20;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference getLicense() {
        if (licenseBuilder_ == null) {
          if (documentCase_ == 20) {
            return (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_;
          }
          return io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance();
        } else {
          if (documentCase_ == 20) {
            return licenseBuilder_.getMessage();
          }
          return io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public Builder setLicense(io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference value) {
        if (licenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          document_ = value;
          onChanged();
        } else {
          licenseBuilder_.setMessage(value);
        }
        documentCase_ = 20;
        return this;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public Builder setLicense(
          io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.Builder builderForValue) {
        if (licenseBuilder_ == null) {
          document_ = builderForValue.build();
          onChanged();
        } else {
          licenseBuilder_.setMessage(builderForValue.build());
        }
        documentCase_ = 20;
        return this;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public Builder mergeLicense(io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference value) {
        if (licenseBuilder_ == null) {
          if (documentCase_ == 20 &&
              document_ != io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance()) {
            document_ = io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.newBuilder((io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_)
                .mergeFrom(value).buildPartial();
          } else {
            document_ = value;
          }
          onChanged();
        } else {
          if (documentCase_ == 20) {
            licenseBuilder_.mergeFrom(value);
          }
          licenseBuilder_.setMessage(value);
        }
        documentCase_ = 20;
        return this;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public Builder clearLicense() {
        if (licenseBuilder_ == null) {
          if (documentCase_ == 20) {
            documentCase_ = 0;
            document_ = null;
            onChanged();
          }
        } else {
          if (documentCase_ == 20) {
            documentCase_ = 0;
            document_ = null;
          }
          licenseBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.Builder getLicenseBuilder() {
        return getLicenseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLReferenceOrBuilder getLicenseOrBuilder() {
        if ((documentCase_ == 20) && (licenseBuilder_ != null)) {
          return licenseBuilder_.getMessageOrBuilder();
        } else {
          if (documentCase_ == 20) {
            return (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_;
          }
          return io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDLReference license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference, io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLReferenceOrBuilder> 
          getLicenseFieldBuilder() {
        if (licenseBuilder_ == null) {
          if (!(documentCase_ == 20)) {
            document_ = io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.getDefaultInstance();
          }
          licenseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference, io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLReferenceOrBuilder>(
                  (io.bloombox.schema.identity.ids.DriversLicenseID.USDLReference) document_,
                  getParentForChildren(),
                  isClean());
          document_ = null;
        }
        documentCase_ = 20;
        onChanged();;
        return licenseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.ids.PassportID.PassportReference, io.bloombox.schema.identity.ids.PassportID.PassportReference.Builder, io.bloombox.schema.identity.ids.PassportID.PassportReferenceOrBuilder> passportBuilder_;
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public boolean hasPassport() {
        return documentCase_ == 21;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public io.bloombox.schema.identity.ids.PassportID.PassportReference getPassport() {
        if (passportBuilder_ == null) {
          if (documentCase_ == 21) {
            return (io.bloombox.schema.identity.ids.PassportID.PassportReference) document_;
          }
          return io.bloombox.schema.identity.ids.PassportID.PassportReference.getDefaultInstance();
        } else {
          if (documentCase_ == 21) {
            return passportBuilder_.getMessage();
          }
          return io.bloombox.schema.identity.ids.PassportID.PassportReference.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public Builder setPassport(io.bloombox.schema.identity.ids.PassportID.PassportReference value) {
        if (passportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          document_ = value;
          onChanged();
        } else {
          passportBuilder_.setMessage(value);
        }
        documentCase_ = 21;
        return this;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public Builder setPassport(
          io.bloombox.schema.identity.ids.PassportID.PassportReference.Builder builderForValue) {
        if (passportBuilder_ == null) {
          document_ = builderForValue.build();
          onChanged();
        } else {
          passportBuilder_.setMessage(builderForValue.build());
        }
        documentCase_ = 21;
        return this;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public Builder mergePassport(io.bloombox.schema.identity.ids.PassportID.PassportReference value) {
        if (passportBuilder_ == null) {
          if (documentCase_ == 21 &&
              document_ != io.bloombox.schema.identity.ids.PassportID.PassportReference.getDefaultInstance()) {
            document_ = io.bloombox.schema.identity.ids.PassportID.PassportReference.newBuilder((io.bloombox.schema.identity.ids.PassportID.PassportReference) document_)
                .mergeFrom(value).buildPartial();
          } else {
            document_ = value;
          }
          onChanged();
        } else {
          if (documentCase_ == 21) {
            passportBuilder_.mergeFrom(value);
          }
          passportBuilder_.setMessage(value);
        }
        documentCase_ = 21;
        return this;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public Builder clearPassport() {
        if (passportBuilder_ == null) {
          if (documentCase_ == 21) {
            documentCase_ = 0;
            document_ = null;
            onChanged();
          }
        } else {
          if (documentCase_ == 21) {
            documentCase_ = 0;
            document_ = null;
          }
          passportBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public io.bloombox.schema.identity.ids.PassportID.PassportReference.Builder getPassportBuilder() {
        return getPassportFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public io.bloombox.schema.identity.ids.PassportID.PassportReferenceOrBuilder getPassportOrBuilder() {
        if ((documentCase_ == 21) && (passportBuilder_ != null)) {
          return passportBuilder_.getMessageOrBuilder();
        } else {
          if (documentCase_ == 21) {
            return (io.bloombox.schema.identity.ids.PassportID.PassportReference) document_;
          }
          return io.bloombox.schema.identity.ids.PassportID.PassportReference.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.PassportReference passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.ids.PassportID.PassportReference, io.bloombox.schema.identity.ids.PassportID.PassportReference.Builder, io.bloombox.schema.identity.ids.PassportID.PassportReferenceOrBuilder> 
          getPassportFieldBuilder() {
        if (passportBuilder_ == null) {
          if (!(documentCase_ == 21)) {
            document_ = io.bloombox.schema.identity.ids.PassportID.PassportReference.getDefaultInstance();
          }
          passportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.identity.ids.PassportID.PassportReference, io.bloombox.schema.identity.ids.PassportID.PassportReference.Builder, io.bloombox.schema.identity.ids.PassportID.PassportReferenceOrBuilder>(
                  (io.bloombox.schema.identity.ids.PassportID.PassportReference) document_,
                  getParentForChildren(),
                  isClean());
          document_ = null;
        }
        documentCase_ = 21;
        onChanged();;
        return passportBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.identity.IDReference)
    }

    // @@protoc_insertion_point(class_scope:bloombox.identity.IDReference)
    private static final io.bloombox.schema.identity.IdentityID.IDReference DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.identity.IdentityID.IDReference();
    }

    public static io.bloombox.schema.identity.IdentityID.IDReference getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IDReference>
        PARSER = new com.google.protobuf.AbstractParser<IDReference>() {
      @java.lang.Override
      public IDReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IDReference(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IDReference> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IDReference> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.bloombox.schema.identity.IdentityID.IDReference getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.identity.ID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of ID we're specifying.
     * </pre>
     *
     * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Type of ID we're specifying.
     * </pre>
     *
     * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
     */
    io.bloombox.schema.identity.IdentityID.IDType getType();

    /**
     * <pre>
     * ID number or string identifying this identity document.
     * </pre>
     *
     * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * ID number or string identifying this identity document.
     * </pre>
     *
     * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    boolean hasExpireDate();
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    io.opencannabis.schema.temporal.TemporalDate.Date getExpireDate();
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getExpireDateOrBuilder();

    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    boolean hasBirthDate();
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    io.opencannabis.schema.temporal.TemporalDate.Date getBirthDate();
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getBirthDateOrBuilder();

    /**
     * <pre>
     * Whether or not this ID has been verified in some way.
     * </pre>
     *
     * <code>bool verified = 5 [(.gen_bq_schema.description) = "Whether or not this ID has been verified in some manner."];</code>
     */
    boolean getVerified();

    /**
     * <pre>
     * Globally-provisioned ID for this identification document.
     * </pre>
     *
     * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
     */
    java.lang.String getGlobalId();
    /**
     * <pre>
     * Globally-provisioned ID for this identification document.
     * </pre>
     *
     * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
     */
    com.google.protobuf.ByteString
        getGlobalIdBytes();

    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    boolean hasLicense();
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    io.bloombox.schema.identity.ids.DriversLicenseID.USDL getLicense();
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    io.bloombox.schema.identity.ids.DriversLicenseID.USDLOrBuilder getLicenseOrBuilder();

    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    boolean hasPassport();
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    io.bloombox.schema.identity.ids.PassportID.Passport getPassport();
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    io.bloombox.schema.identity.ids.PassportID.PassportOrBuilder getPassportOrBuilder();

    public io.bloombox.schema.identity.IdentityID.ID.DocumentCase getDocumentCase();
  }
  /**
   * <pre>
   * Specifies an object for expressing a user's government ID information.
   * </pre>
   *
   * Protobuf type {@code bloombox.identity.ID}
   */
  public  static final class ID extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.identity.ID)
      IDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ID.newBuilder() to construct.
    private ID(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ID() {
      type_ = 0;
      id_ = "";
      globalId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ID(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              io.opencannabis.schema.temporal.TemporalDate.Date.Builder subBuilder = null;
              if (expireDate_ != null) {
                subBuilder = expireDate_.toBuilder();
              }
              expireDate_ = input.readMessage(io.opencannabis.schema.temporal.TemporalDate.Date.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expireDate_);
                expireDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.opencannabis.schema.temporal.TemporalDate.Date.Builder subBuilder = null;
              if (birthDate_ != null) {
                subBuilder = birthDate_.toBuilder();
              }
              birthDate_ = input.readMessage(io.opencannabis.schema.temporal.TemporalDate.Date.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(birthDate_);
                birthDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              verified_ = input.readBool();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              globalId_ = s;
              break;
            }
            case 162: {
              io.bloombox.schema.identity.ids.DriversLicenseID.USDL.Builder subBuilder = null;
              if (documentCase_ == 20) {
                subBuilder = ((io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_).toBuilder();
              }
              document_ =
                  input.readMessage(io.bloombox.schema.identity.ids.DriversLicenseID.USDL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_);
                document_ = subBuilder.buildPartial();
              }
              documentCase_ = 20;
              break;
            }
            case 170: {
              io.bloombox.schema.identity.ids.PassportID.Passport.Builder subBuilder = null;
              if (documentCase_ == 21) {
                subBuilder = ((io.bloombox.schema.identity.ids.PassportID.Passport) document_).toBuilder();
              }
              document_ =
                  input.readMessage(io.bloombox.schema.identity.ids.PassportID.Passport.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.identity.ids.PassportID.Passport) document_);
                document_ = subBuilder.buildPartial();
              }
              documentCase_ = 21;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_ID_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_ID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.identity.IdentityID.ID.class, io.bloombox.schema.identity.IdentityID.ID.Builder.class);
    }

    private int documentCase_ = 0;
    private java.lang.Object document_;
    public enum DocumentCase
        implements com.google.protobuf.Internal.EnumLite {
      LICENSE(20),
      PASSPORT(21),
      DOCUMENT_NOT_SET(0);
      private final int value;
      private DocumentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DocumentCase valueOf(int value) {
        return forNumber(value);
      }

      public static DocumentCase forNumber(int value) {
        switch (value) {
          case 20: return LICENSE;
          case 21: return PASSPORT;
          case 0: return DOCUMENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DocumentCase
    getDocumentCase() {
      return DocumentCase.forNumber(
          documentCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type of ID we're specifying.
     * </pre>
     *
     * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type of ID we're specifying.
     * </pre>
     *
     * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
     */
    public io.bloombox.schema.identity.IdentityID.IDType getType() {
      @SuppressWarnings("deprecation")
      io.bloombox.schema.identity.IdentityID.IDType result = io.bloombox.schema.identity.IdentityID.IDType.valueOf(type_);
      return result == null ? io.bloombox.schema.identity.IdentityID.IDType.UNRECOGNIZED : result;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * ID number or string identifying this identity document.
     * </pre>
     *
     * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID number or string identifying this identity document.
     * </pre>
     *
     * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIRE_DATE_FIELD_NUMBER = 3;
    private io.opencannabis.schema.temporal.TemporalDate.Date expireDate_;
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    public boolean hasExpireDate() {
      return expireDate_ != null;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalDate.Date getExpireDate() {
      return expireDate_ == null ? io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : expireDate_;
    }
    /**
     * <pre>
     * Expiration date for this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getExpireDateOrBuilder() {
      return getExpireDate();
    }

    public static final int BIRTH_DATE_FIELD_NUMBER = 4;
    private io.opencannabis.schema.temporal.TemporalDate.Date birthDate_;
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    public boolean hasBirthDate() {
      return birthDate_ != null;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalDate.Date getBirthDate() {
      return birthDate_ == null ? io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : birthDate_;
    }
    /**
     * <pre>
     * Birth date listed on this document.
     * </pre>
     *
     * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
     */
    public io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getBirthDateOrBuilder() {
      return getBirthDate();
    }

    public static final int VERIFIED_FIELD_NUMBER = 5;
    private boolean verified_;
    /**
     * <pre>
     * Whether or not this ID has been verified in some way.
     * </pre>
     *
     * <code>bool verified = 5 [(.gen_bq_schema.description) = "Whether or not this ID has been verified in some manner."];</code>
     */
    public boolean getVerified() {
      return verified_;
    }

    public static final int GLOBAL_ID_FIELD_NUMBER = 6;
    private volatile java.lang.Object globalId_;
    /**
     * <pre>
     * Globally-provisioned ID for this identification document.
     * </pre>
     *
     * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
     */
    public java.lang.String getGlobalId() {
      java.lang.Object ref = globalId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        globalId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Globally-provisioned ID for this identification document.
     * </pre>
     *
     * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
     */
    public com.google.protobuf.ByteString
        getGlobalIdBytes() {
      java.lang.Object ref = globalId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        globalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LICENSE_FIELD_NUMBER = 20;
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    public boolean hasLicense() {
      return documentCase_ == 20;
    }
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    public io.bloombox.schema.identity.ids.DriversLicenseID.USDL getLicense() {
      if (documentCase_ == 20) {
         return (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_;
      }
      return io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance();
    }
    /**
     * <pre>
     * United States Driver's License.
     * </pre>
     *
     * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
     */
    public io.bloombox.schema.identity.ids.DriversLicenseID.USDLOrBuilder getLicenseOrBuilder() {
      if (documentCase_ == 20) {
         return (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_;
      }
      return io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance();
    }

    public static final int PASSPORT_FIELD_NUMBER = 21;
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    public boolean hasPassport() {
      return documentCase_ == 21;
    }
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    public io.bloombox.schema.identity.ids.PassportID.Passport getPassport() {
      if (documentCase_ == 21) {
         return (io.bloombox.schema.identity.ids.PassportID.Passport) document_;
      }
      return io.bloombox.schema.identity.ids.PassportID.Passport.getDefaultInstance();
    }
    /**
     * <pre>
     * National passport.
     * </pre>
     *
     * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
     */
    public io.bloombox.schema.identity.ids.PassportID.PassportOrBuilder getPassportOrBuilder() {
      if (documentCase_ == 21) {
         return (io.bloombox.schema.identity.ids.PassportID.Passport) document_;
      }
      return io.bloombox.schema.identity.ids.PassportID.Passport.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != io.bloombox.schema.identity.IdentityID.IDType.USDL.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (expireDate_ != null) {
        output.writeMessage(3, getExpireDate());
      }
      if (birthDate_ != null) {
        output.writeMessage(4, getBirthDate());
      }
      if (verified_ != false) {
        output.writeBool(5, verified_);
      }
      if (!getGlobalIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, globalId_);
      }
      if (documentCase_ == 20) {
        output.writeMessage(20, (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_);
      }
      if (documentCase_ == 21) {
        output.writeMessage(21, (io.bloombox.schema.identity.ids.PassportID.Passport) document_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != io.bloombox.schema.identity.IdentityID.IDType.USDL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (expireDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getExpireDate());
      }
      if (birthDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBirthDate());
      }
      if (verified_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, verified_);
      }
      if (!getGlobalIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, globalId_);
      }
      if (documentCase_ == 20) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_);
      }
      if (documentCase_ == 21) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, (io.bloombox.schema.identity.ids.PassportID.Passport) document_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.identity.IdentityID.ID)) {
        return super.equals(obj);
      }
      io.bloombox.schema.identity.IdentityID.ID other = (io.bloombox.schema.identity.IdentityID.ID) obj;

      if (type_ != other.type_) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (hasExpireDate() != other.hasExpireDate()) return false;
      if (hasExpireDate()) {
        if (!getExpireDate()
            .equals(other.getExpireDate())) return false;
      }
      if (hasBirthDate() != other.hasBirthDate()) return false;
      if (hasBirthDate()) {
        if (!getBirthDate()
            .equals(other.getBirthDate())) return false;
      }
      if (getVerified()
          != other.getVerified()) return false;
      if (!getGlobalId()
          .equals(other.getGlobalId())) return false;
      if (!getDocumentCase().equals(other.getDocumentCase())) return false;
      switch (documentCase_) {
        case 20:
          if (!getLicense()
              .equals(other.getLicense())) return false;
          break;
        case 21:
          if (!getPassport()
              .equals(other.getPassport())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasExpireDate()) {
        hash = (37 * hash) + EXPIRE_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getExpireDate().hashCode();
      }
      if (hasBirthDate()) {
        hash = (37 * hash) + BIRTH_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getBirthDate().hashCode();
      }
      hash = (37 * hash) + VERIFIED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getVerified());
      hash = (37 * hash) + GLOBAL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGlobalId().hashCode();
      switch (documentCase_) {
        case 20:
          hash = (37 * hash) + LICENSE_FIELD_NUMBER;
          hash = (53 * hash) + getLicense().hashCode();
          break;
        case 21:
          hash = (37 * hash) + PASSPORT_FIELD_NUMBER;
          hash = (53 * hash) + getPassport().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.identity.IdentityID.ID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.identity.IdentityID.ID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies an object for expressing a user's government ID information.
     * </pre>
     *
     * Protobuf type {@code bloombox.identity.ID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.identity.ID)
        io.bloombox.schema.identity.IdentityID.IDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_ID_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_ID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.identity.IdentityID.ID.class, io.bloombox.schema.identity.IdentityID.ID.Builder.class);
      }

      // Construct using io.bloombox.schema.identity.IdentityID.ID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        id_ = "";

        if (expireDateBuilder_ == null) {
          expireDate_ = null;
        } else {
          expireDate_ = null;
          expireDateBuilder_ = null;
        }
        if (birthDateBuilder_ == null) {
          birthDate_ = null;
        } else {
          birthDate_ = null;
          birthDateBuilder_ = null;
        }
        verified_ = false;

        globalId_ = "";

        documentCase_ = 0;
        document_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.identity.IdentityID.internal_static_bloombox_identity_ID_descriptor;
      }

      @java.lang.Override
      public io.bloombox.schema.identity.IdentityID.ID getDefaultInstanceForType() {
        return io.bloombox.schema.identity.IdentityID.ID.getDefaultInstance();
      }

      @java.lang.Override
      public io.bloombox.schema.identity.IdentityID.ID build() {
        io.bloombox.schema.identity.IdentityID.ID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.bloombox.schema.identity.IdentityID.ID buildPartial() {
        io.bloombox.schema.identity.IdentityID.ID result = new io.bloombox.schema.identity.IdentityID.ID(this);
        result.type_ = type_;
        result.id_ = id_;
        if (expireDateBuilder_ == null) {
          result.expireDate_ = expireDate_;
        } else {
          result.expireDate_ = expireDateBuilder_.build();
        }
        if (birthDateBuilder_ == null) {
          result.birthDate_ = birthDate_;
        } else {
          result.birthDate_ = birthDateBuilder_.build();
        }
        result.verified_ = verified_;
        result.globalId_ = globalId_;
        if (documentCase_ == 20) {
          if (licenseBuilder_ == null) {
            result.document_ = document_;
          } else {
            result.document_ = licenseBuilder_.build();
          }
        }
        if (documentCase_ == 21) {
          if (passportBuilder_ == null) {
            result.document_ = document_;
          } else {
            result.document_ = passportBuilder_.build();
          }
        }
        result.documentCase_ = documentCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.identity.IdentityID.ID) {
          return mergeFrom((io.bloombox.schema.identity.IdentityID.ID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.identity.IdentityID.ID other) {
        if (other == io.bloombox.schema.identity.IdentityID.ID.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasExpireDate()) {
          mergeExpireDate(other.getExpireDate());
        }
        if (other.hasBirthDate()) {
          mergeBirthDate(other.getBirthDate());
        }
        if (other.getVerified() != false) {
          setVerified(other.getVerified());
        }
        if (!other.getGlobalId().isEmpty()) {
          globalId_ = other.globalId_;
          onChanged();
        }
        switch (other.getDocumentCase()) {
          case LICENSE: {
            mergeLicense(other.getLicense());
            break;
          }
          case PASSPORT: {
            mergePassport(other.getPassport());
            break;
          }
          case DOCUMENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.identity.IdentityID.ID parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.identity.IdentityID.ID) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int documentCase_ = 0;
      private java.lang.Object document_;
      public DocumentCase
          getDocumentCase() {
        return DocumentCase.forNumber(
            documentCase_);
      }

      public Builder clearDocument() {
        documentCase_ = 0;
        document_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public io.bloombox.schema.identity.IdentityID.IDType getType() {
        @SuppressWarnings("deprecation")
        io.bloombox.schema.identity.IdentityID.IDType result = io.bloombox.schema.identity.IdentityID.IDType.valueOf(type_);
        return result == null ? io.bloombox.schema.identity.IdentityID.IDType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public Builder setType(io.bloombox.schema.identity.IdentityID.IDType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of ID we're specifying.
       * </pre>
       *
       * <code>.bloombox.identity.IDType type = 1 [(.gen_bq_schema.description) = "Type of ID we&#92;'re specifying."];</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * ID number or string identifying this identity document.
       * </pre>
       *
       * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID number or string identifying this identity document.
       * </pre>
       *
       * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID number or string identifying this identity document.
       * </pre>
       *
       * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID number or string identifying this identity document.
       * </pre>
       *
       * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID number or string identifying this identity document.
       * </pre>
       *
       * <code>string id = 2 [(.gen_bq_schema.description) = "ID number or string identifying this identity document."];</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private io.opencannabis.schema.temporal.TemporalDate.Date expireDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder> expireDateBuilder_;
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public boolean hasExpireDate() {
        return expireDateBuilder_ != null || expireDate_ != null;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.Date getExpireDate() {
        if (expireDateBuilder_ == null) {
          return expireDate_ == null ? io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : expireDate_;
        } else {
          return expireDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public Builder setExpireDate(io.opencannabis.schema.temporal.TemporalDate.Date value) {
        if (expireDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expireDate_ = value;
          onChanged();
        } else {
          expireDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public Builder setExpireDate(
          io.opencannabis.schema.temporal.TemporalDate.Date.Builder builderForValue) {
        if (expireDateBuilder_ == null) {
          expireDate_ = builderForValue.build();
          onChanged();
        } else {
          expireDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public Builder mergeExpireDate(io.opencannabis.schema.temporal.TemporalDate.Date value) {
        if (expireDateBuilder_ == null) {
          if (expireDate_ != null) {
            expireDate_ =
              io.opencannabis.schema.temporal.TemporalDate.Date.newBuilder(expireDate_).mergeFrom(value).buildPartial();
          } else {
            expireDate_ = value;
          }
          onChanged();
        } else {
          expireDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public Builder clearExpireDate() {
        if (expireDateBuilder_ == null) {
          expireDate_ = null;
          onChanged();
        } else {
          expireDate_ = null;
          expireDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.Date.Builder getExpireDateBuilder() {
        
        onChanged();
        return getExpireDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getExpireDateOrBuilder() {
        if (expireDateBuilder_ != null) {
          return expireDateBuilder_.getMessageOrBuilder();
        } else {
          return expireDate_ == null ?
              io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : expireDate_;
        }
      }
      /**
       * <pre>
       * Expiration date for this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date expire_date = 3 [(.gen_bq_schema.description) = "Expiration date for this document."];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder> 
          getExpireDateFieldBuilder() {
        if (expireDateBuilder_ == null) {
          expireDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder>(
                  getExpireDate(),
                  getParentForChildren(),
                  isClean());
          expireDate_ = null;
        }
        return expireDateBuilder_;
      }

      private io.opencannabis.schema.temporal.TemporalDate.Date birthDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder> birthDateBuilder_;
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public boolean hasBirthDate() {
        return birthDateBuilder_ != null || birthDate_ != null;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.Date getBirthDate() {
        if (birthDateBuilder_ == null) {
          return birthDate_ == null ? io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : birthDate_;
        } else {
          return birthDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public Builder setBirthDate(io.opencannabis.schema.temporal.TemporalDate.Date value) {
        if (birthDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          birthDate_ = value;
          onChanged();
        } else {
          birthDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public Builder setBirthDate(
          io.opencannabis.schema.temporal.TemporalDate.Date.Builder builderForValue) {
        if (birthDateBuilder_ == null) {
          birthDate_ = builderForValue.build();
          onChanged();
        } else {
          birthDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public Builder mergeBirthDate(io.opencannabis.schema.temporal.TemporalDate.Date value) {
        if (birthDateBuilder_ == null) {
          if (birthDate_ != null) {
            birthDate_ =
              io.opencannabis.schema.temporal.TemporalDate.Date.newBuilder(birthDate_).mergeFrom(value).buildPartial();
          } else {
            birthDate_ = value;
          }
          onChanged();
        } else {
          birthDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public Builder clearBirthDate() {
        if (birthDateBuilder_ == null) {
          birthDate_ = null;
          onChanged();
        } else {
          birthDate_ = null;
          birthDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.Date.Builder getBirthDateBuilder() {
        
        onChanged();
        return getBirthDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      public io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder getBirthDateOrBuilder() {
        if (birthDateBuilder_ != null) {
          return birthDateBuilder_.getMessageOrBuilder();
        } else {
          return birthDate_ == null ?
              io.opencannabis.schema.temporal.TemporalDate.Date.getDefaultInstance() : birthDate_;
        }
      }
      /**
       * <pre>
       * Birth date listed on this document.
       * </pre>
       *
       * <code>.opencannabis.temporal.Date birth_date = 4 [(.gen_bq_schema.description) = "Birth date listed on this document."];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder> 
          getBirthDateFieldBuilder() {
        if (birthDateBuilder_ == null) {
          birthDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.temporal.TemporalDate.Date, io.opencannabis.schema.temporal.TemporalDate.Date.Builder, io.opencannabis.schema.temporal.TemporalDate.DateOrBuilder>(
                  getBirthDate(),
                  getParentForChildren(),
                  isClean());
          birthDate_ = null;
        }
        return birthDateBuilder_;
      }

      private boolean verified_ ;
      /**
       * <pre>
       * Whether or not this ID has been verified in some way.
       * </pre>
       *
       * <code>bool verified = 5 [(.gen_bq_schema.description) = "Whether or not this ID has been verified in some manner."];</code>
       */
      public boolean getVerified() {
        return verified_;
      }
      /**
       * <pre>
       * Whether or not this ID has been verified in some way.
       * </pre>
       *
       * <code>bool verified = 5 [(.gen_bq_schema.description) = "Whether or not this ID has been verified in some manner."];</code>
       */
      public Builder setVerified(boolean value) {
        
        verified_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether or not this ID has been verified in some way.
       * </pre>
       *
       * <code>bool verified = 5 [(.gen_bq_schema.description) = "Whether or not this ID has been verified in some manner."];</code>
       */
      public Builder clearVerified() {
        
        verified_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object globalId_ = "";
      /**
       * <pre>
       * Globally-provisioned ID for this identification document.
       * </pre>
       *
       * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
       */
      public java.lang.String getGlobalId() {
        java.lang.Object ref = globalId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          globalId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Globally-provisioned ID for this identification document.
       * </pre>
       *
       * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
       */
      public com.google.protobuf.ByteString
          getGlobalIdBytes() {
        java.lang.Object ref = globalId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          globalId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Globally-provisioned ID for this identification document.
       * </pre>
       *
       * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
       */
      public Builder setGlobalId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        globalId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Globally-provisioned ID for this identification document.
       * </pre>
       *
       * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
       */
      public Builder clearGlobalId() {
        
        globalId_ = getDefaultInstance().getGlobalId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Globally-provisioned ID for this identification document.
       * </pre>
       *
       * <code>string global_id = 6 [(.gen_bq_schema.description) = "Globally-unique ID provisioned to this identification document."];</code>
       */
      public Builder setGlobalIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        globalId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.ids.DriversLicenseID.USDL, io.bloombox.schema.identity.ids.DriversLicenseID.USDL.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLOrBuilder> licenseBuilder_;
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public boolean hasLicense() {
        return documentCase_ == 20;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDL getLicense() {
        if (licenseBuilder_ == null) {
          if (documentCase_ == 20) {
            return (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_;
          }
          return io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance();
        } else {
          if (documentCase_ == 20) {
            return licenseBuilder_.getMessage();
          }
          return io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public Builder setLicense(io.bloombox.schema.identity.ids.DriversLicenseID.USDL value) {
        if (licenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          document_ = value;
          onChanged();
        } else {
          licenseBuilder_.setMessage(value);
        }
        documentCase_ = 20;
        return this;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public Builder setLicense(
          io.bloombox.schema.identity.ids.DriversLicenseID.USDL.Builder builderForValue) {
        if (licenseBuilder_ == null) {
          document_ = builderForValue.build();
          onChanged();
        } else {
          licenseBuilder_.setMessage(builderForValue.build());
        }
        documentCase_ = 20;
        return this;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public Builder mergeLicense(io.bloombox.schema.identity.ids.DriversLicenseID.USDL value) {
        if (licenseBuilder_ == null) {
          if (documentCase_ == 20 &&
              document_ != io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance()) {
            document_ = io.bloombox.schema.identity.ids.DriversLicenseID.USDL.newBuilder((io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_)
                .mergeFrom(value).buildPartial();
          } else {
            document_ = value;
          }
          onChanged();
        } else {
          if (documentCase_ == 20) {
            licenseBuilder_.mergeFrom(value);
          }
          licenseBuilder_.setMessage(value);
        }
        documentCase_ = 20;
        return this;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public Builder clearLicense() {
        if (licenseBuilder_ == null) {
          if (documentCase_ == 20) {
            documentCase_ = 0;
            document_ = null;
            onChanged();
          }
        } else {
          if (documentCase_ == 20) {
            documentCase_ = 0;
            document_ = null;
          }
          licenseBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDL.Builder getLicenseBuilder() {
        return getLicenseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      public io.bloombox.schema.identity.ids.DriversLicenseID.USDLOrBuilder getLicenseOrBuilder() {
        if ((documentCase_ == 20) && (licenseBuilder_ != null)) {
          return licenseBuilder_.getMessageOrBuilder();
        } else {
          if (documentCase_ == 20) {
            return (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_;
          }
          return io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * United States Driver's License.
       * </pre>
       *
       * <code>.bloombox.identity.ids.USDL license = 20 [(.gen_bq_schema.description) = "United States Driver&#92;'s License."];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.ids.DriversLicenseID.USDL, io.bloombox.schema.identity.ids.DriversLicenseID.USDL.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLOrBuilder> 
          getLicenseFieldBuilder() {
        if (licenseBuilder_ == null) {
          if (!(documentCase_ == 20)) {
            document_ = io.bloombox.schema.identity.ids.DriversLicenseID.USDL.getDefaultInstance();
          }
          licenseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.identity.ids.DriversLicenseID.USDL, io.bloombox.schema.identity.ids.DriversLicenseID.USDL.Builder, io.bloombox.schema.identity.ids.DriversLicenseID.USDLOrBuilder>(
                  (io.bloombox.schema.identity.ids.DriversLicenseID.USDL) document_,
                  getParentForChildren(),
                  isClean());
          document_ = null;
        }
        documentCase_ = 20;
        onChanged();;
        return licenseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.ids.PassportID.Passport, io.bloombox.schema.identity.ids.PassportID.Passport.Builder, io.bloombox.schema.identity.ids.PassportID.PassportOrBuilder> passportBuilder_;
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public boolean hasPassport() {
        return documentCase_ == 21;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public io.bloombox.schema.identity.ids.PassportID.Passport getPassport() {
        if (passportBuilder_ == null) {
          if (documentCase_ == 21) {
            return (io.bloombox.schema.identity.ids.PassportID.Passport) document_;
          }
          return io.bloombox.schema.identity.ids.PassportID.Passport.getDefaultInstance();
        } else {
          if (documentCase_ == 21) {
            return passportBuilder_.getMessage();
          }
          return io.bloombox.schema.identity.ids.PassportID.Passport.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public Builder setPassport(io.bloombox.schema.identity.ids.PassportID.Passport value) {
        if (passportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          document_ = value;
          onChanged();
        } else {
          passportBuilder_.setMessage(value);
        }
        documentCase_ = 21;
        return this;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public Builder setPassport(
          io.bloombox.schema.identity.ids.PassportID.Passport.Builder builderForValue) {
        if (passportBuilder_ == null) {
          document_ = builderForValue.build();
          onChanged();
        } else {
          passportBuilder_.setMessage(builderForValue.build());
        }
        documentCase_ = 21;
        return this;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public Builder mergePassport(io.bloombox.schema.identity.ids.PassportID.Passport value) {
        if (passportBuilder_ == null) {
          if (documentCase_ == 21 &&
              document_ != io.bloombox.schema.identity.ids.PassportID.Passport.getDefaultInstance()) {
            document_ = io.bloombox.schema.identity.ids.PassportID.Passport.newBuilder((io.bloombox.schema.identity.ids.PassportID.Passport) document_)
                .mergeFrom(value).buildPartial();
          } else {
            document_ = value;
          }
          onChanged();
        } else {
          if (documentCase_ == 21) {
            passportBuilder_.mergeFrom(value);
          }
          passportBuilder_.setMessage(value);
        }
        documentCase_ = 21;
        return this;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public Builder clearPassport() {
        if (passportBuilder_ == null) {
          if (documentCase_ == 21) {
            documentCase_ = 0;
            document_ = null;
            onChanged();
          }
        } else {
          if (documentCase_ == 21) {
            documentCase_ = 0;
            document_ = null;
          }
          passportBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public io.bloombox.schema.identity.ids.PassportID.Passport.Builder getPassportBuilder() {
        return getPassportFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      public io.bloombox.schema.identity.ids.PassportID.PassportOrBuilder getPassportOrBuilder() {
        if ((documentCase_ == 21) && (passportBuilder_ != null)) {
          return passportBuilder_.getMessageOrBuilder();
        } else {
          if (documentCase_ == 21) {
            return (io.bloombox.schema.identity.ids.PassportID.Passport) document_;
          }
          return io.bloombox.schema.identity.ids.PassportID.Passport.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * National passport.
       * </pre>
       *
       * <code>.bloombox.identity.ids.Passport passport = 21 [(.gen_bq_schema.description) = "National passport."];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.identity.ids.PassportID.Passport, io.bloombox.schema.identity.ids.PassportID.Passport.Builder, io.bloombox.schema.identity.ids.PassportID.PassportOrBuilder> 
          getPassportFieldBuilder() {
        if (passportBuilder_ == null) {
          if (!(documentCase_ == 21)) {
            document_ = io.bloombox.schema.identity.ids.PassportID.Passport.getDefaultInstance();
          }
          passportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.identity.ids.PassportID.Passport, io.bloombox.schema.identity.ids.PassportID.Passport.Builder, io.bloombox.schema.identity.ids.PassportID.PassportOrBuilder>(
                  (io.bloombox.schema.identity.ids.PassportID.Passport) document_,
                  getParentForChildren(),
                  isClean());
          document_ = null;
        }
        documentCase_ = 21;
        onChanged();;
        return passportBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.identity.ID)
    }

    // @@protoc_insertion_point(class_scope:bloombox.identity.ID)
    private static final io.bloombox.schema.identity.IdentityID.ID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.identity.IdentityID.ID();
    }

    public static io.bloombox.schema.identity.IdentityID.ID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ID>
        PARSER = new com.google.protobuf.AbstractParser<ID>() {
      @java.lang.Override
      public ID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ID(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ID> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ID> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.bloombox.schema.identity.IdentityID.ID getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_identity_IDReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_identity_IDReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_identity_ID_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_identity_ID_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021identity/ID.proto\022\021bloombox.identity\032\016" +
      "bq_field.proto\032\023temporal/Date.proto\032\027ide" +
      "ntity/ids/USDL.proto\032\033identity/ids/Passp" +
      "ort.proto\"\307\003\n\013IDReference\022H\n\004type\030\001 \001(\0162" +
      "\031.bloombox.identity.IDTypeB\037\212@\034Type of I" +
      "D we\'re specifying.\022W\n\013expire_date\030\002 \001(\013" +
      "2\033.opencannabis.temporal.DateB%\212@\"Expira" +
      "tion date for this document.\022W\n\nbirth_da" +
      "te\030\003 \001(\0132\033.opencannabis.temporal.DateB&\212" +
      "@#Birth date listed on this document.\022[\n" +
      "\007license\030\024 \001(\0132$.bloombox.identity.ids.U" +
      "SDLReferenceB\"\212@\037United States Driver\'s " +
      "License.H\000\022S\n\010passport\030\025 \001(\0132(.bloombox." +
      "identity.ids.PassportReferenceB\025\212@\022Natio" +
      "nal passport.H\000B\n\n\010document\"\232\005\n\002ID\022H\n\004ty" +
      "pe\030\001 \001(\0162\031.bloombox.identity.IDTypeB\037\212@\034" +
      "Type of ID we\'re specifying.\022F\n\002id\030\002 \001(\t" +
      "B:\212@7ID number or string identifying thi" +
      "s identity document.\022W\n\013expire_date\030\003 \001(" +
      "\0132\033.opencannabis.temporal.DateB%\212@\"Expir" +
      "ation date for this document.\022W\n\nbirth_d" +
      "ate\030\004 \001(\0132\033.opencannabis.temporal.DateB&" +
      "\212@#Birth date listed on this document.\022M" +
      "\n\010verified\030\005 \001(\010B;\212@8Whether or not this" +
      " ID has been verified in some manner.\022U\n" +
      "\tglobal_id\030\006 \001(\tBB\212@?Globally-unique ID " +
      "provisioned to this identification docum" +
      "ent.\022R\n\007license\030\024 \001(\0132\033.bloombox.identit" +
      "y.ids.USDLB\"\212@\037United States Driver\'s Li" +
      "cense.H\000\022J\n\010passport\030\025 \001(\0132\037.bloombox.id" +
      "entity.ids.PassportB\025\212@\022National passpor" +
      "t.H\000B\n\n\010document* \n\006IDType\022\010\n\004USDL\020\000\022\014\n\010" +
      "PASSPORT\020\001B3\n\033io.bloombox.schema.identit" +
      "yB\nIdentityIDH\001P\000\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gen_bq_schema.BqField.getDescriptor(),
          io.opencannabis.schema.temporal.TemporalDate.getDescriptor(),
          io.bloombox.schema.identity.ids.DriversLicenseID.getDescriptor(),
          io.bloombox.schema.identity.ids.PassportID.getDescriptor(),
        }, assigner);
    internal_static_bloombox_identity_IDReference_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_identity_IDReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_identity_IDReference_descriptor,
        new java.lang.String[] { "Type", "ExpireDate", "BirthDate", "License", "Passport", "Document", });
    internal_static_bloombox_identity_ID_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_bloombox_identity_ID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_identity_ID_descriptor,
        new java.lang.String[] { "Type", "Id", "ExpireDate", "BirthDate", "Verified", "GlobalId", "License", "Passport", "Document", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(gen_bq_schema.BqField.description);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    gen_bq_schema.BqField.getDescriptor();
    io.opencannabis.schema.temporal.TemporalDate.getDescriptor();
    io.bloombox.schema.identity.ids.DriversLicenseID.getDescriptor();
    io.bloombox.schema.identity.ids.PassportID.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
