/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: content/Content.proto

package io.bloombox.schema.content;

public interface ContentOrBuilder extends
    // @@protoc_insertion_point(interface_extends:content.Content)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Format/underlying type of content data.
   * </pre>
   *
   * <code>.content.Content.Type type = 1;</code>
   */
  int getTypeValue();
  /**
   * <pre>
   * Format/underlying type of content data.
   * </pre>
   *
   * <code>.content.Content.Type type = 1;</code>
   */
  io.bloombox.schema.content.Content.Type getType();

  /**
   * <pre>
   * Encoding of underlying content data.
   * </pre>
   *
   * <code>.content.Content.Encoding encoding = 2;</code>
   */
  int getEncodingValue();
  /**
   * <pre>
   * Encoding of underlying content data.
   * </pre>
   *
   * <code>.content.Content.Encoding encoding = 2;</code>
   */
  io.bloombox.schema.content.Content.Encoding getEncoding();

  /**
   * <pre>
   * Raw bytes of underlying content data.
   * </pre>
   *
   * <code>bytes content = 3;</code>
   */
  com.google.protobuf.ByteString getContent();

  /**
   * <pre>
   * Language information for underlying content.
   * </pre>
   *
   * <code>.base.Language language = 4;</code>
   */
  int getLanguageValue();
  /**
   * <pre>
   * Language information for underlying content.
   * </pre>
   *
   * <code>.base.Language language = 4;</code>
   */
  io.bloombox.schema.base.Language getLanguage();

  /**
   * <pre>
   * Compression settings for underlying content.
   * </pre>
   *
   * <code>.base.Compression compression = 5;</code>
   */
  boolean hasCompression();
  /**
   * <pre>
   * Compression settings for underlying content.
   * </pre>
   *
   * <code>.base.Compression compression = 5;</code>
   */
  io.bloombox.schema.base.Compression getCompression();
  /**
   * <pre>
   * Compression settings for underlying content.
   * </pre>
   *
   * <code>.base.Compression compression = 5;</code>
   */
  io.bloombox.schema.base.CompressionOrBuilder getCompressionOrBuilder();
}
