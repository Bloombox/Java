// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: comms/CommsTask.proto

package io.bloombox.schema.comms;

public final class CommsTask {
  private CommsTask() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SendOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.comms.SendOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique ID for this operation.
     * </pre>
     *
     * <code>string uuid = 1;</code>
     */
    java.lang.String getUuid();
    /**
     * <pre>
     * Unique ID for this operation.
     * </pre>
     *
     * <code>string uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    /**
     * <pre>
     * Channel for which this send operation is operating.
     * </pre>
     *
     * <code>.bloombox.schema.comms.Channel channel = 2;</code>
     */
    int getChannelValue();
    /**
     * <pre>
     * Channel for which this send operation is operating.
     * </pre>
     *
     * <code>.bloombox.schema.comms.Channel channel = 2;</code>
     */
    io.bloombox.schema.comms.GenericComms.Channel getChannel();

    /**
     * <pre>
     * Status for this operation.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
     */
    int getStatusValue();
    /**
     * <pre>
     * Status for this operation.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
     */
    io.bloombox.schema.comms.CommsTask.SendOperation.Status getStatus();

    /**
     * <pre>
     * Number of completed tasks in this batch.
     * </pre>
     *
     * <code>uint32 done = 4;</code>
     */
    int getDone();

    /**
     * <pre>
     * Total tasks to complete.
     * </pre>
     *
     * <code>uint32 total = 5;</code>
     */
    int getTotal();

    /**
     * <pre>
     * Batch of SMS send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
     */
    boolean hasSms();
    /**
     * <pre>
     * Batch of SMS send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
     */
    io.bloombox.schema.comms.SMSComms.SMSBatch getSms();
    /**
     * <pre>
     * Batch of SMS send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
     */
    io.bloombox.schema.comms.SMSComms.SMSBatchOrBuilder getSmsOrBuilder();

    /**
     * <pre>
     * Batch of email send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
     */
    boolean hasEmail();
    /**
     * <pre>
     * Batch of email send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
     */
    io.bloombox.schema.comms.EmailComms.EmailBatch getEmail();
    /**
     * <pre>
     * Batch of email send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
     */
    io.bloombox.schema.comms.EmailComms.EmailBatchOrBuilder getEmailOrBuilder();

    public io.bloombox.schema.comms.CommsTask.SendOperation.OperationCase getOperationCase();
  }
  /**
   * <pre>
   * Send a batch of either SMS or email messages.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.comms.SendOperation}
   */
  public  static final class SendOperation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.comms.SendOperation)
      SendOperationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SendOperation.newBuilder() to construct.
    private SendOperation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SendOperation() {
      uuid_ = "";
      channel_ = 0;
      status_ = 0;
      done_ = 0;
      total_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SendOperation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              uuid_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              channel_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 32: {

              done_ = input.readUInt32();
              break;
            }
            case 40: {

              total_ = input.readUInt32();
              break;
            }
            case 82: {
              io.bloombox.schema.comms.SMSComms.SMSBatch.Builder subBuilder = null;
              if (operationCase_ == 10) {
                subBuilder = ((io.bloombox.schema.comms.SMSComms.SMSBatch) operation_).toBuilder();
              }
              operation_ =
                  input.readMessage(io.bloombox.schema.comms.SMSComms.SMSBatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.comms.SMSComms.SMSBatch) operation_);
                operation_ = subBuilder.buildPartial();
              }
              operationCase_ = 10;
              break;
            }
            case 90: {
              io.bloombox.schema.comms.EmailComms.EmailBatch.Builder subBuilder = null;
              if (operationCase_ == 11) {
                subBuilder = ((io.bloombox.schema.comms.EmailComms.EmailBatch) operation_).toBuilder();
              }
              operation_ =
                  input.readMessage(io.bloombox.schema.comms.EmailComms.EmailBatch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.comms.EmailComms.EmailBatch) operation_);
                operation_ = subBuilder.buildPartial();
              }
              operationCase_ = 11;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.comms.CommsTask.internal_static_bloombox_schema_comms_SendOperation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.comms.CommsTask.internal_static_bloombox_schema_comms_SendOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.comms.CommsTask.SendOperation.class, io.bloombox.schema.comms.CommsTask.SendOperation.Builder.class);
    }

    /**
     * <pre>
     * Statuses that a send operation may assume.
     * </pre>
     *
     * Protobuf enum {@code bloombox.schema.comms.SendOperation.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * This operation is unfiled, or waiting.
       * </pre>
       *
       * <code>PENDING = 0;</code>
       */
      PENDING(0),
      /**
       * <pre>
       * The operation is executing now.
       * </pre>
       *
       * <code>SENDING = 1;</code>
       */
      SENDING(1),
      /**
       * <pre>
       * An error occurred that prevented this operation from starting/continuing.
       * </pre>
       *
       * <code>ERROR = 2;</code>
       */
      ERROR(2),
      /**
       * <pre>
       * The operation is complete.
       * </pre>
       *
       * <code>DONE = 3;</code>
       */
      DONE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * This operation is unfiled, or waiting.
       * </pre>
       *
       * <code>PENDING = 0;</code>
       */
      public static final int PENDING_VALUE = 0;
      /**
       * <pre>
       * The operation is executing now.
       * </pre>
       *
       * <code>SENDING = 1;</code>
       */
      public static final int SENDING_VALUE = 1;
      /**
       * <pre>
       * An error occurred that prevented this operation from starting/continuing.
       * </pre>
       *
       * <code>ERROR = 2;</code>
       */
      public static final int ERROR_VALUE = 2;
      /**
       * <pre>
       * The operation is complete.
       * </pre>
       *
       * <code>DONE = 3;</code>
       */
      public static final int DONE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      public static Status forNumber(int value) {
        switch (value) {
          case 0: return PENDING;
          case 1: return SENDING;
          case 2: return ERROR;
          case 3: return DONE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.bloombox.schema.comms.CommsTask.SendOperation.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:bloombox.schema.comms.SendOperation.Status)
    }

    private int operationCase_ = 0;
    private java.lang.Object operation_;
    public enum OperationCase
        implements com.google.protobuf.Internal.EnumLite {
      SMS(10),
      EMAIL(11),
      OPERATION_NOT_SET(0);
      private final int value;
      private OperationCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OperationCase valueOf(int value) {
        return forNumber(value);
      }

      public static OperationCase forNumber(int value) {
        switch (value) {
          case 10: return SMS;
          case 11: return EMAIL;
          case 0: return OPERATION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OperationCase
    getOperationCase() {
      return OperationCase.forNumber(
          operationCase_);
    }

    public static final int UUID_FIELD_NUMBER = 1;
    private volatile java.lang.Object uuid_;
    /**
     * <pre>
     * Unique ID for this operation.
     * </pre>
     *
     * <code>string uuid = 1;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique ID for this operation.
     * </pre>
     *
     * <code>string uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <pre>
     * Channel for which this send operation is operating.
     * </pre>
     *
     * <code>.bloombox.schema.comms.Channel channel = 2;</code>
     */
    public int getChannelValue() {
      return channel_;
    }
    /**
     * <pre>
     * Channel for which this send operation is operating.
     * </pre>
     *
     * <code>.bloombox.schema.comms.Channel channel = 2;</code>
     */
    public io.bloombox.schema.comms.GenericComms.Channel getChannel() {
      io.bloombox.schema.comms.GenericComms.Channel result = io.bloombox.schema.comms.GenericComms.Channel.valueOf(channel_);
      return result == null ? io.bloombox.schema.comms.GenericComms.Channel.UNRECOGNIZED : result;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <pre>
     * Status for this operation.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * Status for this operation.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
     */
    public io.bloombox.schema.comms.CommsTask.SendOperation.Status getStatus() {
      io.bloombox.schema.comms.CommsTask.SendOperation.Status result = io.bloombox.schema.comms.CommsTask.SendOperation.Status.valueOf(status_);
      return result == null ? io.bloombox.schema.comms.CommsTask.SendOperation.Status.UNRECOGNIZED : result;
    }

    public static final int DONE_FIELD_NUMBER = 4;
    private int done_;
    /**
     * <pre>
     * Number of completed tasks in this batch.
     * </pre>
     *
     * <code>uint32 done = 4;</code>
     */
    public int getDone() {
      return done_;
    }

    public static final int TOTAL_FIELD_NUMBER = 5;
    private int total_;
    /**
     * <pre>
     * Total tasks to complete.
     * </pre>
     *
     * <code>uint32 total = 5;</code>
     */
    public int getTotal() {
      return total_;
    }

    public static final int SMS_FIELD_NUMBER = 10;
    /**
     * <pre>
     * Batch of SMS send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
     */
    public boolean hasSms() {
      return operationCase_ == 10;
    }
    /**
     * <pre>
     * Batch of SMS send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
     */
    public io.bloombox.schema.comms.SMSComms.SMSBatch getSms() {
      if (operationCase_ == 10) {
         return (io.bloombox.schema.comms.SMSComms.SMSBatch) operation_;
      }
      return io.bloombox.schema.comms.SMSComms.SMSBatch.getDefaultInstance();
    }
    /**
     * <pre>
     * Batch of SMS send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
     */
    public io.bloombox.schema.comms.SMSComms.SMSBatchOrBuilder getSmsOrBuilder() {
      if (operationCase_ == 10) {
         return (io.bloombox.schema.comms.SMSComms.SMSBatch) operation_;
      }
      return io.bloombox.schema.comms.SMSComms.SMSBatch.getDefaultInstance();
    }

    public static final int EMAIL_FIELD_NUMBER = 11;
    /**
     * <pre>
     * Batch of email send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
     */
    public boolean hasEmail() {
      return operationCase_ == 11;
    }
    /**
     * <pre>
     * Batch of email send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
     */
    public io.bloombox.schema.comms.EmailComms.EmailBatch getEmail() {
      if (operationCase_ == 11) {
         return (io.bloombox.schema.comms.EmailComms.EmailBatch) operation_;
      }
      return io.bloombox.schema.comms.EmailComms.EmailBatch.getDefaultInstance();
    }
    /**
     * <pre>
     * Batch of email send operations.
     * </pre>
     *
     * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
     */
    public io.bloombox.schema.comms.EmailComms.EmailBatchOrBuilder getEmailOrBuilder() {
      if (operationCase_ == 11) {
         return (io.bloombox.schema.comms.EmailComms.EmailBatch) operation_;
      }
      return io.bloombox.schema.comms.EmailComms.EmailBatch.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuid_);
      }
      if (channel_ != io.bloombox.schema.comms.GenericComms.Channel.UNSPECIFIED.getNumber()) {
        output.writeEnum(2, channel_);
      }
      if (status_ != io.bloombox.schema.comms.CommsTask.SendOperation.Status.PENDING.getNumber()) {
        output.writeEnum(3, status_);
      }
      if (done_ != 0) {
        output.writeUInt32(4, done_);
      }
      if (total_ != 0) {
        output.writeUInt32(5, total_);
      }
      if (operationCase_ == 10) {
        output.writeMessage(10, (io.bloombox.schema.comms.SMSComms.SMSBatch) operation_);
      }
      if (operationCase_ == 11) {
        output.writeMessage(11, (io.bloombox.schema.comms.EmailComms.EmailBatch) operation_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuid_);
      }
      if (channel_ != io.bloombox.schema.comms.GenericComms.Channel.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, channel_);
      }
      if (status_ != io.bloombox.schema.comms.CommsTask.SendOperation.Status.PENDING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, status_);
      }
      if (done_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, done_);
      }
      if (total_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, total_);
      }
      if (operationCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (io.bloombox.schema.comms.SMSComms.SMSBatch) operation_);
      }
      if (operationCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (io.bloombox.schema.comms.EmailComms.EmailBatch) operation_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.comms.CommsTask.SendOperation)) {
        return super.equals(obj);
      }
      io.bloombox.schema.comms.CommsTask.SendOperation other = (io.bloombox.schema.comms.CommsTask.SendOperation) obj;

      boolean result = true;
      result = result && getUuid()
          .equals(other.getUuid());
      result = result && channel_ == other.channel_;
      result = result && status_ == other.status_;
      result = result && (getDone()
          == other.getDone());
      result = result && (getTotal()
          == other.getTotal());
      result = result && getOperationCase().equals(
          other.getOperationCase());
      if (!result) return false;
      switch (operationCase_) {
        case 10:
          result = result && getSms()
              .equals(other.getSms());
          break;
        case 11:
          result = result && getEmail()
              .equals(other.getEmail());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UUID_FIELD_NUMBER;
      hash = (53 * hash) + getUuid().hashCode();
      hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + channel_;
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + DONE_FIELD_NUMBER;
      hash = (53 * hash) + getDone();
      hash = (37 * hash) + TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + getTotal();
      switch (operationCase_) {
        case 10:
          hash = (37 * hash) + SMS_FIELD_NUMBER;
          hash = (53 * hash) + getSms().hashCode();
          break;
        case 11:
          hash = (37 * hash) + EMAIL_FIELD_NUMBER;
          hash = (53 * hash) + getEmail().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.comms.CommsTask.SendOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.comms.CommsTask.SendOperation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Send a batch of either SMS or email messages.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.comms.SendOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.comms.SendOperation)
        io.bloombox.schema.comms.CommsTask.SendOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.comms.CommsTask.internal_static_bloombox_schema_comms_SendOperation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.comms.CommsTask.internal_static_bloombox_schema_comms_SendOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.comms.CommsTask.SendOperation.class, io.bloombox.schema.comms.CommsTask.SendOperation.Builder.class);
      }

      // Construct using io.bloombox.schema.comms.CommsTask.SendOperation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uuid_ = "";

        channel_ = 0;

        status_ = 0;

        done_ = 0;

        total_ = 0;

        operationCase_ = 0;
        operation_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.comms.CommsTask.internal_static_bloombox_schema_comms_SendOperation_descriptor;
      }

      public io.bloombox.schema.comms.CommsTask.SendOperation getDefaultInstanceForType() {
        return io.bloombox.schema.comms.CommsTask.SendOperation.getDefaultInstance();
      }

      public io.bloombox.schema.comms.CommsTask.SendOperation build() {
        io.bloombox.schema.comms.CommsTask.SendOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.comms.CommsTask.SendOperation buildPartial() {
        io.bloombox.schema.comms.CommsTask.SendOperation result = new io.bloombox.schema.comms.CommsTask.SendOperation(this);
        result.uuid_ = uuid_;
        result.channel_ = channel_;
        result.status_ = status_;
        result.done_ = done_;
        result.total_ = total_;
        if (operationCase_ == 10) {
          if (smsBuilder_ == null) {
            result.operation_ = operation_;
          } else {
            result.operation_ = smsBuilder_.build();
          }
        }
        if (operationCase_ == 11) {
          if (emailBuilder_ == null) {
            result.operation_ = operation_;
          } else {
            result.operation_ = emailBuilder_.build();
          }
        }
        result.operationCase_ = operationCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.comms.CommsTask.SendOperation) {
          return mergeFrom((io.bloombox.schema.comms.CommsTask.SendOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.comms.CommsTask.SendOperation other) {
        if (other == io.bloombox.schema.comms.CommsTask.SendOperation.getDefaultInstance()) return this;
        if (!other.getUuid().isEmpty()) {
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.channel_ != 0) {
          setChannelValue(other.getChannelValue());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.getDone() != 0) {
          setDone(other.getDone());
        }
        if (other.getTotal() != 0) {
          setTotal(other.getTotal());
        }
        switch (other.getOperationCase()) {
          case SMS: {
            mergeSms(other.getSms());
            break;
          }
          case EMAIL: {
            mergeEmail(other.getEmail());
            break;
          }
          case OPERATION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.comms.CommsTask.SendOperation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.comms.CommsTask.SendOperation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int operationCase_ = 0;
      private java.lang.Object operation_;
      public OperationCase
          getOperationCase() {
        return OperationCase.forNumber(
            operationCase_);
      }

      public Builder clearOperation() {
        operationCase_ = 0;
        operation_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object uuid_ = "";
      /**
       * <pre>
       * Unique ID for this operation.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique ID for this operation.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique ID for this operation.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ID for this operation.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public Builder clearUuid() {
        
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ID for this operation.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuid_ = value;
        onChanged();
        return this;
      }

      private int channel_ = 0;
      /**
       * <pre>
       * Channel for which this send operation is operating.
       * </pre>
       *
       * <code>.bloombox.schema.comms.Channel channel = 2;</code>
       */
      public int getChannelValue() {
        return channel_;
      }
      /**
       * <pre>
       * Channel for which this send operation is operating.
       * </pre>
       *
       * <code>.bloombox.schema.comms.Channel channel = 2;</code>
       */
      public Builder setChannelValue(int value) {
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Channel for which this send operation is operating.
       * </pre>
       *
       * <code>.bloombox.schema.comms.Channel channel = 2;</code>
       */
      public io.bloombox.schema.comms.GenericComms.Channel getChannel() {
        io.bloombox.schema.comms.GenericComms.Channel result = io.bloombox.schema.comms.GenericComms.Channel.valueOf(channel_);
        return result == null ? io.bloombox.schema.comms.GenericComms.Channel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Channel for which this send operation is operating.
       * </pre>
       *
       * <code>.bloombox.schema.comms.Channel channel = 2;</code>
       */
      public Builder setChannel(io.bloombox.schema.comms.GenericComms.Channel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        channel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Channel for which this send operation is operating.
       * </pre>
       *
       * <code>.bloombox.schema.comms.Channel channel = 2;</code>
       */
      public Builder clearChannel() {
        
        channel_ = 0;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <pre>
       * Status for this operation.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <pre>
       * Status for this operation.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Status for this operation.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
       */
      public io.bloombox.schema.comms.CommsTask.SendOperation.Status getStatus() {
        io.bloombox.schema.comms.CommsTask.SendOperation.Status result = io.bloombox.schema.comms.CommsTask.SendOperation.Status.valueOf(status_);
        return result == null ? io.bloombox.schema.comms.CommsTask.SendOperation.Status.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Status for this operation.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
       */
      public Builder setStatus(io.bloombox.schema.comms.CommsTask.SendOperation.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Status for this operation.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SendOperation.Status status = 3;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private int done_ ;
      /**
       * <pre>
       * Number of completed tasks in this batch.
       * </pre>
       *
       * <code>uint32 done = 4;</code>
       */
      public int getDone() {
        return done_;
      }
      /**
       * <pre>
       * Number of completed tasks in this batch.
       * </pre>
       *
       * <code>uint32 done = 4;</code>
       */
      public Builder setDone(int value) {
        
        done_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of completed tasks in this batch.
       * </pre>
       *
       * <code>uint32 done = 4;</code>
       */
      public Builder clearDone() {
        
        done_ = 0;
        onChanged();
        return this;
      }

      private int total_ ;
      /**
       * <pre>
       * Total tasks to complete.
       * </pre>
       *
       * <code>uint32 total = 5;</code>
       */
      public int getTotal() {
        return total_;
      }
      /**
       * <pre>
       * Total tasks to complete.
       * </pre>
       *
       * <code>uint32 total = 5;</code>
       */
      public Builder setTotal(int value) {
        
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total tasks to complete.
       * </pre>
       *
       * <code>uint32 total = 5;</code>
       */
      public Builder clearTotal() {
        
        total_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.comms.SMSComms.SMSBatch, io.bloombox.schema.comms.SMSComms.SMSBatch.Builder, io.bloombox.schema.comms.SMSComms.SMSBatchOrBuilder> smsBuilder_;
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      public boolean hasSms() {
        return operationCase_ == 10;
      }
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      public io.bloombox.schema.comms.SMSComms.SMSBatch getSms() {
        if (smsBuilder_ == null) {
          if (operationCase_ == 10) {
            return (io.bloombox.schema.comms.SMSComms.SMSBatch) operation_;
          }
          return io.bloombox.schema.comms.SMSComms.SMSBatch.getDefaultInstance();
        } else {
          if (operationCase_ == 10) {
            return smsBuilder_.getMessage();
          }
          return io.bloombox.schema.comms.SMSComms.SMSBatch.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      public Builder setSms(io.bloombox.schema.comms.SMSComms.SMSBatch value) {
        if (smsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operation_ = value;
          onChanged();
        } else {
          smsBuilder_.setMessage(value);
        }
        operationCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      public Builder setSms(
          io.bloombox.schema.comms.SMSComms.SMSBatch.Builder builderForValue) {
        if (smsBuilder_ == null) {
          operation_ = builderForValue.build();
          onChanged();
        } else {
          smsBuilder_.setMessage(builderForValue.build());
        }
        operationCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      public Builder mergeSms(io.bloombox.schema.comms.SMSComms.SMSBatch value) {
        if (smsBuilder_ == null) {
          if (operationCase_ == 10 &&
              operation_ != io.bloombox.schema.comms.SMSComms.SMSBatch.getDefaultInstance()) {
            operation_ = io.bloombox.schema.comms.SMSComms.SMSBatch.newBuilder((io.bloombox.schema.comms.SMSComms.SMSBatch) operation_)
                .mergeFrom(value).buildPartial();
          } else {
            operation_ = value;
          }
          onChanged();
        } else {
          if (operationCase_ == 10) {
            smsBuilder_.mergeFrom(value);
          }
          smsBuilder_.setMessage(value);
        }
        operationCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      public Builder clearSms() {
        if (smsBuilder_ == null) {
          if (operationCase_ == 10) {
            operationCase_ = 0;
            operation_ = null;
            onChanged();
          }
        } else {
          if (operationCase_ == 10) {
            operationCase_ = 0;
            operation_ = null;
          }
          smsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      public io.bloombox.schema.comms.SMSComms.SMSBatch.Builder getSmsBuilder() {
        return getSmsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      public io.bloombox.schema.comms.SMSComms.SMSBatchOrBuilder getSmsOrBuilder() {
        if ((operationCase_ == 10) && (smsBuilder_ != null)) {
          return smsBuilder_.getMessageOrBuilder();
        } else {
          if (operationCase_ == 10) {
            return (io.bloombox.schema.comms.SMSComms.SMSBatch) operation_;
          }
          return io.bloombox.schema.comms.SMSComms.SMSBatch.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Batch of SMS send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.SMSBatch sms = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.comms.SMSComms.SMSBatch, io.bloombox.schema.comms.SMSComms.SMSBatch.Builder, io.bloombox.schema.comms.SMSComms.SMSBatchOrBuilder> 
          getSmsFieldBuilder() {
        if (smsBuilder_ == null) {
          if (!(operationCase_ == 10)) {
            operation_ = io.bloombox.schema.comms.SMSComms.SMSBatch.getDefaultInstance();
          }
          smsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.comms.SMSComms.SMSBatch, io.bloombox.schema.comms.SMSComms.SMSBatch.Builder, io.bloombox.schema.comms.SMSComms.SMSBatchOrBuilder>(
                  (io.bloombox.schema.comms.SMSComms.SMSBatch) operation_,
                  getParentForChildren(),
                  isClean());
          operation_ = null;
        }
        operationCase_ = 10;
        onChanged();;
        return smsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.comms.EmailComms.EmailBatch, io.bloombox.schema.comms.EmailComms.EmailBatch.Builder, io.bloombox.schema.comms.EmailComms.EmailBatchOrBuilder> emailBuilder_;
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      public boolean hasEmail() {
        return operationCase_ == 11;
      }
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      public io.bloombox.schema.comms.EmailComms.EmailBatch getEmail() {
        if (emailBuilder_ == null) {
          if (operationCase_ == 11) {
            return (io.bloombox.schema.comms.EmailComms.EmailBatch) operation_;
          }
          return io.bloombox.schema.comms.EmailComms.EmailBatch.getDefaultInstance();
        } else {
          if (operationCase_ == 11) {
            return emailBuilder_.getMessage();
          }
          return io.bloombox.schema.comms.EmailComms.EmailBatch.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      public Builder setEmail(io.bloombox.schema.comms.EmailComms.EmailBatch value) {
        if (emailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operation_ = value;
          onChanged();
        } else {
          emailBuilder_.setMessage(value);
        }
        operationCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      public Builder setEmail(
          io.bloombox.schema.comms.EmailComms.EmailBatch.Builder builderForValue) {
        if (emailBuilder_ == null) {
          operation_ = builderForValue.build();
          onChanged();
        } else {
          emailBuilder_.setMessage(builderForValue.build());
        }
        operationCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      public Builder mergeEmail(io.bloombox.schema.comms.EmailComms.EmailBatch value) {
        if (emailBuilder_ == null) {
          if (operationCase_ == 11 &&
              operation_ != io.bloombox.schema.comms.EmailComms.EmailBatch.getDefaultInstance()) {
            operation_ = io.bloombox.schema.comms.EmailComms.EmailBatch.newBuilder((io.bloombox.schema.comms.EmailComms.EmailBatch) operation_)
                .mergeFrom(value).buildPartial();
          } else {
            operation_ = value;
          }
          onChanged();
        } else {
          if (operationCase_ == 11) {
            emailBuilder_.mergeFrom(value);
          }
          emailBuilder_.setMessage(value);
        }
        operationCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      public Builder clearEmail() {
        if (emailBuilder_ == null) {
          if (operationCase_ == 11) {
            operationCase_ = 0;
            operation_ = null;
            onChanged();
          }
        } else {
          if (operationCase_ == 11) {
            operationCase_ = 0;
            operation_ = null;
          }
          emailBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      public io.bloombox.schema.comms.EmailComms.EmailBatch.Builder getEmailBuilder() {
        return getEmailFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      public io.bloombox.schema.comms.EmailComms.EmailBatchOrBuilder getEmailOrBuilder() {
        if ((operationCase_ == 11) && (emailBuilder_ != null)) {
          return emailBuilder_.getMessageOrBuilder();
        } else {
          if (operationCase_ == 11) {
            return (io.bloombox.schema.comms.EmailComms.EmailBatch) operation_;
          }
          return io.bloombox.schema.comms.EmailComms.EmailBatch.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Batch of email send operations.
       * </pre>
       *
       * <code>.bloombox.schema.comms.EmailBatch email = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.comms.EmailComms.EmailBatch, io.bloombox.schema.comms.EmailComms.EmailBatch.Builder, io.bloombox.schema.comms.EmailComms.EmailBatchOrBuilder> 
          getEmailFieldBuilder() {
        if (emailBuilder_ == null) {
          if (!(operationCase_ == 11)) {
            operation_ = io.bloombox.schema.comms.EmailComms.EmailBatch.getDefaultInstance();
          }
          emailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.comms.EmailComms.EmailBatch, io.bloombox.schema.comms.EmailComms.EmailBatch.Builder, io.bloombox.schema.comms.EmailComms.EmailBatchOrBuilder>(
                  (io.bloombox.schema.comms.EmailComms.EmailBatch) operation_,
                  getParentForChildren(),
                  isClean());
          operation_ = null;
        }
        operationCase_ = 11;
        onChanged();;
        return emailBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.comms.SendOperation)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.comms.SendOperation)
    private static final io.bloombox.schema.comms.CommsTask.SendOperation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.comms.CommsTask.SendOperation();
    }

    public static io.bloombox.schema.comms.CommsTask.SendOperation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SendOperation>
        PARSER = new com.google.protobuf.AbstractParser<SendOperation>() {
      public SendOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendOperation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SendOperation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SendOperation> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.comms.CommsTask.SendOperation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bloombox_schema_comms_SendOperation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bloombox_schema_comms_SendOperation_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025comms/CommsTask.proto\022\025bloombox.schema" +
      ".comms\032\017comms/SMS.proto\032\021comms/Email.pro" +
      "to\032\021comms/Comms.proto\"\322\002\n\rSendOperation\022" +
      "\014\n\004uuid\030\001 \001(\t\022/\n\007channel\030\002 \001(\0162\036.bloombo" +
      "x.schema.comms.Channel\022;\n\006status\030\003 \001(\0162+" +
      ".bloombox.schema.comms.SendOperation.Sta" +
      "tus\022\014\n\004done\030\004 \001(\r\022\r\n\005total\030\005 \001(\r\022.\n\003sms\030" +
      "\n \001(\0132\037.bloombox.schema.comms.SMSBatchH\000" +
      "\0222\n\005email\030\013 \001(\0132!.bloombox.schema.comms." +
      "EmailBatchH\000\"7\n\006Status\022\013\n\007PENDING\020\000\022\013\n\007S" +
      "ENDING\020\001\022\t\n\005ERROR\020\002\022\010\n\004DONE\020\003B\013\n\toperati" +
      "onB/\n\030io.bloombox.schema.commsB\tCommsTas" +
      "kH\001P\000\242\002\003BBSb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.bloombox.schema.comms.SMSComms.getDescriptor(),
          io.bloombox.schema.comms.EmailComms.getDescriptor(),
          io.bloombox.schema.comms.GenericComms.getDescriptor(),
        }, assigner);
    internal_static_bloombox_schema_comms_SendOperation_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bloombox_schema_comms_SendOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bloombox_schema_comms_SendOperation_descriptor,
        new java.lang.String[] { "Uuid", "Channel", "Status", "Done", "Total", "Sms", "Email", "Operation", });
    io.bloombox.schema.comms.SMSComms.getDescriptor();
    io.bloombox.schema.comms.EmailComms.getDescriptor();
    io.bloombox.schema.comms.GenericComms.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
