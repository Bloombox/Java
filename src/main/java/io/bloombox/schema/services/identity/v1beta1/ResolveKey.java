/*
 * Copyright 2019, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity/v1beta1/IdentityService_Beta1.proto

package io.bloombox.schema.services.identity.v1beta1;

/**
 * <pre>
 * Specifies an RPC operation wherein a public key is resolved against a cryptographic fingerprint, or key ID.
 * </pre>
 *
 * Protobuf type {@code bloombox.services.identity.v1beta1.ResolveKey}
 */
public  final class ResolveKey extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bloombox.services.identity.v1beta1.ResolveKey)
    ResolveKeyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ResolveKey.newBuilder() to construct.
  private ResolveKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ResolveKey() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ResolveKey(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.services.identity.v1beta1.ResolveKey.class, io.bloombox.schema.services.identity.v1beta1.ResolveKey.Builder.class);
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.services.identity.v1beta1.ResolveKey.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies a key ID to resolve.
     * </pre>
     *
     * <code>string key_id = 1;</code>
     */
    java.lang.String getKeyId();
    /**
     * <pre>
     * Specifies a key ID to resolve.
     * </pre>
     *
     * <code>string key_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyIdBytes();

    /**
     * <pre>
     * MD5 algorithm.
     * </pre>
     *
     * <code>string md5 = 10;</code>
     */
    java.lang.String getMd5();
    /**
     * <pre>
     * MD5 algorithm.
     * </pre>
     *
     * <code>string md5 = 10;</code>
     */
    com.google.protobuf.ByteString
        getMd5Bytes();

    /**
     * <pre>
     * SHA1 algorithm.
     * </pre>
     *
     * <code>string sha1 = 11;</code>
     */
    java.lang.String getSha1();
    /**
     * <pre>
     * SHA1 algorithm.
     * </pre>
     *
     * <code>string sha1 = 11;</code>
     */
    com.google.protobuf.ByteString
        getSha1Bytes();

    public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request.FingerprintCase getFingerprintCase();
  }
  /**
   * <pre>
   * Specifies properties to request information about a public key.
   * </pre>
   *
   * Protobuf type {@code bloombox.services.identity.v1beta1.ResolveKey.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.services.identity.v1beta1.ResolveKey.Request)
      RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
      keyId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              keyId_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();
              fingerprintCase_ = 10;
              fingerprint_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();
              fingerprintCase_ = 11;
              fingerprint_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request.class, io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request.Builder.class);
    }

    private int fingerprintCase_ = 0;
    private java.lang.Object fingerprint_;
    public enum FingerprintCase
        implements com.google.protobuf.Internal.EnumLite {
      MD5(10),
      SHA1(11),
      FINGERPRINT_NOT_SET(0);
      private final int value;
      private FingerprintCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FingerprintCase valueOf(int value) {
        return forNumber(value);
      }

      public static FingerprintCase forNumber(int value) {
        switch (value) {
          case 10: return MD5;
          case 11: return SHA1;
          case 0: return FINGERPRINT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FingerprintCase
    getFingerprintCase() {
      return FingerprintCase.forNumber(
          fingerprintCase_);
    }

    public static final int KEY_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object keyId_;
    /**
     * <pre>
     * Specifies a key ID to resolve.
     * </pre>
     *
     * <code>string key_id = 1;</code>
     */
    public java.lang.String getKeyId() {
      java.lang.Object ref = keyId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies a key ID to resolve.
     * </pre>
     *
     * <code>string key_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyIdBytes() {
      java.lang.Object ref = keyId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MD5_FIELD_NUMBER = 10;
    /**
     * <pre>
     * MD5 algorithm.
     * </pre>
     *
     * <code>string md5 = 10;</code>
     */
    public java.lang.String getMd5() {
      java.lang.Object ref = "";
      if (fingerprintCase_ == 10) {
        ref = fingerprint_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (fingerprintCase_ == 10) {
          fingerprint_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * MD5 algorithm.
     * </pre>
     *
     * <code>string md5 = 10;</code>
     */
    public com.google.protobuf.ByteString
        getMd5Bytes() {
      java.lang.Object ref = "";
      if (fingerprintCase_ == 10) {
        ref = fingerprint_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (fingerprintCase_ == 10) {
          fingerprint_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHA1_FIELD_NUMBER = 11;
    /**
     * <pre>
     * SHA1 algorithm.
     * </pre>
     *
     * <code>string sha1 = 11;</code>
     */
    public java.lang.String getSha1() {
      java.lang.Object ref = "";
      if (fingerprintCase_ == 11) {
        ref = fingerprint_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (fingerprintCase_ == 11) {
          fingerprint_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * SHA1 algorithm.
     * </pre>
     *
     * <code>string sha1 = 11;</code>
     */
    public com.google.protobuf.ByteString
        getSha1Bytes() {
      java.lang.Object ref = "";
      if (fingerprintCase_ == 11) {
        ref = fingerprint_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (fingerprintCase_ == 11) {
          fingerprint_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyId_);
      }
      if (fingerprintCase_ == 10) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, fingerprint_);
      }
      if (fingerprintCase_ == 11) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, fingerprint_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyId_);
      }
      if (fingerprintCase_ == 10) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, fingerprint_);
      }
      if (fingerprintCase_ == 11) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, fingerprint_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request other = (io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request) obj;

      if (!getKeyId()
          .equals(other.getKeyId())) return false;
      if (!getFingerprintCase().equals(other.getFingerprintCase())) return false;
      switch (fingerprintCase_) {
        case 10:
          if (!getMd5()
              .equals(other.getMd5())) return false;
          break;
        case 11:
          if (!getSha1()
              .equals(other.getSha1())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getKeyId().hashCode();
      switch (fingerprintCase_) {
        case 10:
          hash = (37 * hash) + MD5_FIELD_NUMBER;
          hash = (53 * hash) + getMd5().hashCode();
          break;
        case 11:
          hash = (37 * hash) + SHA1_FIELD_NUMBER;
          hash = (53 * hash) + getSha1().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies properties to request information about a public key.
     * </pre>
     *
     * Protobuf type {@code bloombox.services.identity.v1beta1.ResolveKey.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.services.identity.v1beta1.ResolveKey.Request)
        io.bloombox.schema.services.identity.v1beta1.ResolveKey.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request.class, io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request.Builder.class);
      }

      // Construct using io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyId_ = "";

        fingerprintCase_ = 0;
        fingerprint_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Request_descriptor;
      }

      @java.lang.Override
      public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request getDefaultInstanceForType() {
        return io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request.getDefaultInstance();
      }

      @java.lang.Override
      public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request build() {
        io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request buildPartial() {
        io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request result = new io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request(this);
        result.keyId_ = keyId_;
        if (fingerprintCase_ == 10) {
          result.fingerprint_ = fingerprint_;
        }
        if (fingerprintCase_ == 11) {
          result.fingerprint_ = fingerprint_;
        }
        result.fingerprintCase_ = fingerprintCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request) {
          return mergeFrom((io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request other) {
        if (other == io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request.getDefaultInstance()) return this;
        if (!other.getKeyId().isEmpty()) {
          keyId_ = other.keyId_;
          onChanged();
        }
        switch (other.getFingerprintCase()) {
          case MD5: {
            fingerprintCase_ = 10;
            fingerprint_ = other.fingerprint_;
            onChanged();
            break;
          }
          case SHA1: {
            fingerprintCase_ = 11;
            fingerprint_ = other.fingerprint_;
            onChanged();
            break;
          }
          case FINGERPRINT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int fingerprintCase_ = 0;
      private java.lang.Object fingerprint_;
      public FingerprintCase
          getFingerprintCase() {
        return FingerprintCase.forNumber(
            fingerprintCase_);
      }

      public Builder clearFingerprint() {
        fingerprintCase_ = 0;
        fingerprint_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object keyId_ = "";
      /**
       * <pre>
       * Specifies a key ID to resolve.
       * </pre>
       *
       * <code>string key_id = 1;</code>
       */
      public java.lang.String getKeyId() {
        java.lang.Object ref = keyId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies a key ID to resolve.
       * </pre>
       *
       * <code>string key_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyIdBytes() {
        java.lang.Object ref = keyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies a key ID to resolve.
       * </pre>
       *
       * <code>string key_id = 1;</code>
       */
      public Builder setKeyId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a key ID to resolve.
       * </pre>
       *
       * <code>string key_id = 1;</code>
       */
      public Builder clearKeyId() {
        
        keyId_ = getDefaultInstance().getKeyId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a key ID to resolve.
       * </pre>
       *
       * <code>string key_id = 1;</code>
       */
      public Builder setKeyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyId_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * MD5 algorithm.
       * </pre>
       *
       * <code>string md5 = 10;</code>
       */
      public java.lang.String getMd5() {
        java.lang.Object ref = "";
        if (fingerprintCase_ == 10) {
          ref = fingerprint_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (fingerprintCase_ == 10) {
            fingerprint_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * MD5 algorithm.
       * </pre>
       *
       * <code>string md5 = 10;</code>
       */
      public com.google.protobuf.ByteString
          getMd5Bytes() {
        java.lang.Object ref = "";
        if (fingerprintCase_ == 10) {
          ref = fingerprint_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (fingerprintCase_ == 10) {
            fingerprint_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * MD5 algorithm.
       * </pre>
       *
       * <code>string md5 = 10;</code>
       */
      public Builder setMd5(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  fingerprintCase_ = 10;
        fingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MD5 algorithm.
       * </pre>
       *
       * <code>string md5 = 10;</code>
       */
      public Builder clearMd5() {
        if (fingerprintCase_ == 10) {
          fingerprintCase_ = 0;
          fingerprint_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * MD5 algorithm.
       * </pre>
       *
       * <code>string md5 = 10;</code>
       */
      public Builder setMd5Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        fingerprintCase_ = 10;
        fingerprint_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * SHA1 algorithm.
       * </pre>
       *
       * <code>string sha1 = 11;</code>
       */
      public java.lang.String getSha1() {
        java.lang.Object ref = "";
        if (fingerprintCase_ == 11) {
          ref = fingerprint_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (fingerprintCase_ == 11) {
            fingerprint_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * SHA1 algorithm.
       * </pre>
       *
       * <code>string sha1 = 11;</code>
       */
      public com.google.protobuf.ByteString
          getSha1Bytes() {
        java.lang.Object ref = "";
        if (fingerprintCase_ == 11) {
          ref = fingerprint_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (fingerprintCase_ == 11) {
            fingerprint_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * SHA1 algorithm.
       * </pre>
       *
       * <code>string sha1 = 11;</code>
       */
      public Builder setSha1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  fingerprintCase_ = 11;
        fingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SHA1 algorithm.
       * </pre>
       *
       * <code>string sha1 = 11;</code>
       */
      public Builder clearSha1() {
        if (fingerprintCase_ == 11) {
          fingerprintCase_ = 0;
          fingerprint_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * SHA1 algorithm.
       * </pre>
       *
       * <code>string sha1 = 11;</code>
       */
      public Builder setSha1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        fingerprintCase_ = 11;
        fingerprint_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.services.identity.v1beta1.ResolveKey.Request)
    }

    // @@protoc_insertion_point(class_scope:bloombox.services.identity.v1beta1.ResolveKey.Request)
    private static final io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request();
    }

    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      @java.lang.Override
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.services.identity.v1beta1.ResolveKey.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies information about the public key in question, if it could be located at the provided fingerprint.
     * </pre>
     *
     * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * Specifies information about the public key in question, if it could be located at the provided fingerprint.
     * </pre>
     *
     * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
     */
    io.opencannabis.schema.crypto.primitives.KeyMaterial getPublicKey();
    /**
     * <pre>
     * Specifies information about the public key in question, if it could be located at the provided fingerprint.
     * </pre>
     *
     * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
     */
    io.opencannabis.schema.crypto.primitives.KeyMaterialOrBuilder getPublicKeyOrBuilder();

    /**
     * <pre>
     * Specifies ownership information about the subject public key, if it could be found.
     * </pre>
     *
     * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
     */
    boolean hasOwnership();
    /**
     * <pre>
     * Specifies ownership information about the subject public key, if it could be found.
     * </pre>
     *
     * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
     */
    io.bloombox.schema.services.identity.v1beta1.KeyOwnership getOwnership();
    /**
     * <pre>
     * Specifies ownership information about the subject public key, if it could be found.
     * </pre>
     *
     * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
     */
    io.bloombox.schema.services.identity.v1beta1.KeyOwnershipOrBuilder getOwnershipOrBuilder();
  }
  /**
   * <pre>
   * Response to a request for information about a public key, addressed by its key ID or cryptographic fingerprint.
   * </pre>
   *
   * Protobuf type {@code bloombox.services.identity.v1beta1.ResolveKey.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.services.identity.v1beta1.ResolveKey.Response)
      ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.opencannabis.schema.crypto.primitives.KeyMaterial.Builder subBuilder = null;
              if (publicKey_ != null) {
                subBuilder = publicKey_.toBuilder();
              }
              publicKey_ = input.readMessage(io.opencannabis.schema.crypto.primitives.KeyMaterial.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(publicKey_);
                publicKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.bloombox.schema.services.identity.v1beta1.KeyOwnership.Builder subBuilder = null;
              if (ownership_ != null) {
                subBuilder = ownership_.toBuilder();
              }
              ownership_ = input.readMessage(io.bloombox.schema.services.identity.v1beta1.KeyOwnership.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ownership_);
                ownership_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response.class, io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response.Builder.class);
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 1;
    private io.opencannabis.schema.crypto.primitives.KeyMaterial publicKey_;
    /**
     * <pre>
     * Specifies information about the public key in question, if it could be located at the provided fingerprint.
     * </pre>
     *
     * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
     */
    public boolean hasPublicKey() {
      return publicKey_ != null;
    }
    /**
     * <pre>
     * Specifies information about the public key in question, if it could be located at the provided fingerprint.
     * </pre>
     *
     * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
     */
    public io.opencannabis.schema.crypto.primitives.KeyMaterial getPublicKey() {
      return publicKey_ == null ? io.opencannabis.schema.crypto.primitives.KeyMaterial.getDefaultInstance() : publicKey_;
    }
    /**
     * <pre>
     * Specifies information about the public key in question, if it could be located at the provided fingerprint.
     * </pre>
     *
     * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
     */
    public io.opencannabis.schema.crypto.primitives.KeyMaterialOrBuilder getPublicKeyOrBuilder() {
      return getPublicKey();
    }

    public static final int OWNERSHIP_FIELD_NUMBER = 2;
    private io.bloombox.schema.services.identity.v1beta1.KeyOwnership ownership_;
    /**
     * <pre>
     * Specifies ownership information about the subject public key, if it could be found.
     * </pre>
     *
     * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
     */
    public boolean hasOwnership() {
      return ownership_ != null;
    }
    /**
     * <pre>
     * Specifies ownership information about the subject public key, if it could be found.
     * </pre>
     *
     * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
     */
    public io.bloombox.schema.services.identity.v1beta1.KeyOwnership getOwnership() {
      return ownership_ == null ? io.bloombox.schema.services.identity.v1beta1.KeyOwnership.getDefaultInstance() : ownership_;
    }
    /**
     * <pre>
     * Specifies ownership information about the subject public key, if it could be found.
     * </pre>
     *
     * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
     */
    public io.bloombox.schema.services.identity.v1beta1.KeyOwnershipOrBuilder getOwnershipOrBuilder() {
      return getOwnership();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (publicKey_ != null) {
        output.writeMessage(1, getPublicKey());
      }
      if (ownership_ != null) {
        output.writeMessage(2, getOwnership());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (publicKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPublicKey());
      }
      if (ownership_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOwnership());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response other = (io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response) obj;

      if (hasPublicKey() != other.hasPublicKey()) return false;
      if (hasPublicKey()) {
        if (!getPublicKey()
            .equals(other.getPublicKey())) return false;
      }
      if (hasOwnership() != other.hasOwnership()) return false;
      if (hasOwnership()) {
        if (!getOwnership()
            .equals(other.getOwnership())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      if (hasOwnership()) {
        hash = (37 * hash) + OWNERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + getOwnership().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response to a request for information about a public key, addressed by its key ID or cryptographic fingerprint.
     * </pre>
     *
     * Protobuf type {@code bloombox.services.identity.v1beta1.ResolveKey.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.services.identity.v1beta1.ResolveKey.Response)
        io.bloombox.schema.services.identity.v1beta1.ResolveKey.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response.class, io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response.Builder.class);
      }

      // Construct using io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (publicKeyBuilder_ == null) {
          publicKey_ = null;
        } else {
          publicKey_ = null;
          publicKeyBuilder_ = null;
        }
        if (ownershipBuilder_ == null) {
          ownership_ = null;
        } else {
          ownership_ = null;
          ownershipBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_Response_descriptor;
      }

      @java.lang.Override
      public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response getDefaultInstanceForType() {
        return io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response.getDefaultInstance();
      }

      @java.lang.Override
      public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response build() {
        io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response buildPartial() {
        io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response result = new io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response(this);
        if (publicKeyBuilder_ == null) {
          result.publicKey_ = publicKey_;
        } else {
          result.publicKey_ = publicKeyBuilder_.build();
        }
        if (ownershipBuilder_ == null) {
          result.ownership_ = ownership_;
        } else {
          result.ownership_ = ownershipBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response) {
          return mergeFrom((io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response other) {
        if (other == io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response.getDefaultInstance()) return this;
        if (other.hasPublicKey()) {
          mergePublicKey(other.getPublicKey());
        }
        if (other.hasOwnership()) {
          mergeOwnership(other.getOwnership());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.opencannabis.schema.crypto.primitives.KeyMaterial publicKey_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.crypto.primitives.KeyMaterial, io.opencannabis.schema.crypto.primitives.KeyMaterial.Builder, io.opencannabis.schema.crypto.primitives.KeyMaterialOrBuilder> publicKeyBuilder_;
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      public boolean hasPublicKey() {
        return publicKeyBuilder_ != null || publicKey_ != null;
      }
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      public io.opencannabis.schema.crypto.primitives.KeyMaterial getPublicKey() {
        if (publicKeyBuilder_ == null) {
          return publicKey_ == null ? io.opencannabis.schema.crypto.primitives.KeyMaterial.getDefaultInstance() : publicKey_;
        } else {
          return publicKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      public Builder setPublicKey(io.opencannabis.schema.crypto.primitives.KeyMaterial value) {
        if (publicKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publicKey_ = value;
          onChanged();
        } else {
          publicKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      public Builder setPublicKey(
          io.opencannabis.schema.crypto.primitives.KeyMaterial.Builder builderForValue) {
        if (publicKeyBuilder_ == null) {
          publicKey_ = builderForValue.build();
          onChanged();
        } else {
          publicKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      public Builder mergePublicKey(io.opencannabis.schema.crypto.primitives.KeyMaterial value) {
        if (publicKeyBuilder_ == null) {
          if (publicKey_ != null) {
            publicKey_ =
              io.opencannabis.schema.crypto.primitives.KeyMaterial.newBuilder(publicKey_).mergeFrom(value).buildPartial();
          } else {
            publicKey_ = value;
          }
          onChanged();
        } else {
          publicKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      public Builder clearPublicKey() {
        if (publicKeyBuilder_ == null) {
          publicKey_ = null;
          onChanged();
        } else {
          publicKey_ = null;
          publicKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      public io.opencannabis.schema.crypto.primitives.KeyMaterial.Builder getPublicKeyBuilder() {
        
        onChanged();
        return getPublicKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      public io.opencannabis.schema.crypto.primitives.KeyMaterialOrBuilder getPublicKeyOrBuilder() {
        if (publicKeyBuilder_ != null) {
          return publicKeyBuilder_.getMessageOrBuilder();
        } else {
          return publicKey_ == null ?
              io.opencannabis.schema.crypto.primitives.KeyMaterial.getDefaultInstance() : publicKey_;
        }
      }
      /**
       * <pre>
       * Specifies information about the public key in question, if it could be located at the provided fingerprint.
       * </pre>
       *
       * <code>.opencannabis.crypto.KeyMaterial public_key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.crypto.primitives.KeyMaterial, io.opencannabis.schema.crypto.primitives.KeyMaterial.Builder, io.opencannabis.schema.crypto.primitives.KeyMaterialOrBuilder> 
          getPublicKeyFieldBuilder() {
        if (publicKeyBuilder_ == null) {
          publicKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.crypto.primitives.KeyMaterial, io.opencannabis.schema.crypto.primitives.KeyMaterial.Builder, io.opencannabis.schema.crypto.primitives.KeyMaterialOrBuilder>(
                  getPublicKey(),
                  getParentForChildren(),
                  isClean());
          publicKey_ = null;
        }
        return publicKeyBuilder_;
      }

      private io.bloombox.schema.services.identity.v1beta1.KeyOwnership ownership_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.identity.v1beta1.KeyOwnership, io.bloombox.schema.services.identity.v1beta1.KeyOwnership.Builder, io.bloombox.schema.services.identity.v1beta1.KeyOwnershipOrBuilder> ownershipBuilder_;
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      public boolean hasOwnership() {
        return ownershipBuilder_ != null || ownership_ != null;
      }
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      public io.bloombox.schema.services.identity.v1beta1.KeyOwnership getOwnership() {
        if (ownershipBuilder_ == null) {
          return ownership_ == null ? io.bloombox.schema.services.identity.v1beta1.KeyOwnership.getDefaultInstance() : ownership_;
        } else {
          return ownershipBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      public Builder setOwnership(io.bloombox.schema.services.identity.v1beta1.KeyOwnership value) {
        if (ownershipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ownership_ = value;
          onChanged();
        } else {
          ownershipBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      public Builder setOwnership(
          io.bloombox.schema.services.identity.v1beta1.KeyOwnership.Builder builderForValue) {
        if (ownershipBuilder_ == null) {
          ownership_ = builderForValue.build();
          onChanged();
        } else {
          ownershipBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      public Builder mergeOwnership(io.bloombox.schema.services.identity.v1beta1.KeyOwnership value) {
        if (ownershipBuilder_ == null) {
          if (ownership_ != null) {
            ownership_ =
              io.bloombox.schema.services.identity.v1beta1.KeyOwnership.newBuilder(ownership_).mergeFrom(value).buildPartial();
          } else {
            ownership_ = value;
          }
          onChanged();
        } else {
          ownershipBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      public Builder clearOwnership() {
        if (ownershipBuilder_ == null) {
          ownership_ = null;
          onChanged();
        } else {
          ownership_ = null;
          ownershipBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      public io.bloombox.schema.services.identity.v1beta1.KeyOwnership.Builder getOwnershipBuilder() {
        
        onChanged();
        return getOwnershipFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      public io.bloombox.schema.services.identity.v1beta1.KeyOwnershipOrBuilder getOwnershipOrBuilder() {
        if (ownershipBuilder_ != null) {
          return ownershipBuilder_.getMessageOrBuilder();
        } else {
          return ownership_ == null ?
              io.bloombox.schema.services.identity.v1beta1.KeyOwnership.getDefaultInstance() : ownership_;
        }
      }
      /**
       * <pre>
       * Specifies ownership information about the subject public key, if it could be found.
       * </pre>
       *
       * <code>.bloombox.services.identity.v1beta1.KeyOwnership ownership = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.identity.v1beta1.KeyOwnership, io.bloombox.schema.services.identity.v1beta1.KeyOwnership.Builder, io.bloombox.schema.services.identity.v1beta1.KeyOwnershipOrBuilder> 
          getOwnershipFieldBuilder() {
        if (ownershipBuilder_ == null) {
          ownershipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.identity.v1beta1.KeyOwnership, io.bloombox.schema.services.identity.v1beta1.KeyOwnership.Builder, io.bloombox.schema.services.identity.v1beta1.KeyOwnershipOrBuilder>(
                  getOwnership(),
                  getParentForChildren(),
                  isClean());
          ownership_ = null;
        }
        return ownershipBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.services.identity.v1beta1.ResolveKey.Response)
    }

    // @@protoc_insertion_point(class_scope:bloombox.services.identity.v1beta1.ResolveKey.Response)
    private static final io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response();
    }

    public static io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      @java.lang.Override
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.bloombox.schema.services.identity.v1beta1.ResolveKey.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.services.identity.v1beta1.ResolveKey)) {
      return super.equals(obj);
    }
    io.bloombox.schema.services.identity.v1beta1.ResolveKey other = (io.bloombox.schema.services.identity.v1beta1.ResolveKey) obj;

    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.services.identity.v1beta1.ResolveKey prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies an RPC operation wherein a public key is resolved against a cryptographic fingerprint, or key ID.
   * </pre>
   *
   * Protobuf type {@code bloombox.services.identity.v1beta1.ResolveKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bloombox.services.identity.v1beta1.ResolveKey)
      io.bloombox.schema.services.identity.v1beta1.ResolveKeyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.identity.v1beta1.ResolveKey.class, io.bloombox.schema.services.identity.v1beta1.ResolveKey.Builder.class);
    }

    // Construct using io.bloombox.schema.services.identity.v1beta1.ResolveKey.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.services.identity.v1beta1.IdentityServiceBeta1.internal_static_bloombox_services_identity_v1beta1_ResolveKey_descriptor;
    }

    @java.lang.Override
    public io.bloombox.schema.services.identity.v1beta1.ResolveKey getDefaultInstanceForType() {
      return io.bloombox.schema.services.identity.v1beta1.ResolveKey.getDefaultInstance();
    }

    @java.lang.Override
    public io.bloombox.schema.services.identity.v1beta1.ResolveKey build() {
      io.bloombox.schema.services.identity.v1beta1.ResolveKey result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.bloombox.schema.services.identity.v1beta1.ResolveKey buildPartial() {
      io.bloombox.schema.services.identity.v1beta1.ResolveKey result = new io.bloombox.schema.services.identity.v1beta1.ResolveKey(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.services.identity.v1beta1.ResolveKey) {
        return mergeFrom((io.bloombox.schema.services.identity.v1beta1.ResolveKey)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.services.identity.v1beta1.ResolveKey other) {
      if (other == io.bloombox.schema.services.identity.v1beta1.ResolveKey.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.services.identity.v1beta1.ResolveKey parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.services.identity.v1beta1.ResolveKey) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bloombox.services.identity.v1beta1.ResolveKey)
  }

  // @@protoc_insertion_point(class_scope:bloombox.services.identity.v1beta1.ResolveKey)
  private static final io.bloombox.schema.services.identity.v1beta1.ResolveKey DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.services.identity.v1beta1.ResolveKey();
  }

  public static io.bloombox.schema.services.identity.v1beta1.ResolveKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResolveKey>
      PARSER = new com.google.protobuf.AbstractParser<ResolveKey>() {
    @java.lang.Override
    public ResolveKey parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ResolveKey(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResolveKey> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResolveKey> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.bloombox.schema.services.identity.v1beta1.ResolveKey getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

