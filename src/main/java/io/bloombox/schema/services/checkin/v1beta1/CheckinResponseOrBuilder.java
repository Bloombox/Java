/*
 * Copyright 2018, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: checkin/v1beta1/CheckinService_Beta1.proto

package io.bloombox.schema.services.checkin.v1beta1;

public interface CheckinResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bloombox.services.checkin.v1beta1.CheckinResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies whether the operation was successful. If not, there should be an error listed.
   * </pre>
   *
   * <code>bool success = 1;</code>
   */
  boolean getSuccess();

  /**
   * <pre>
   * Specifies whether the user must enroll to continue.
   * </pre>
   *
   * <code>bool must_enroll = 2;</code>
   */
  boolean getMustEnroll();

  /**
   * <pre>
   * Specifies a known checkin error that occurred, if applicable.
   * </pre>
   *
   * <code>.bloombox.services.checkin.v1beta1.CheckinError error = 3;</code>
   */
  int getErrorValue();
  /**
   * <pre>
   * Specifies a known checkin error that occurred, if applicable.
   * </pre>
   *
   * <code>.bloombox.services.checkin.v1beta1.CheckinError error = 3;</code>
   */
  io.bloombox.schema.services.checkin.v1beta1.CheckinError getError();

  /**
   * <pre>
   * Information about the resulting user account.
   * </pre>
   *
   * <code>.bloombox.services.checkin.v1beta1.CheckinUser user = 4;</code>
   */
  boolean hasUser();
  /**
   * <pre>
   * Information about the resulting user account.
   * </pre>
   *
   * <code>.bloombox.services.checkin.v1beta1.CheckinUser user = 4;</code>
   */
  io.bloombox.schema.services.checkin.v1beta1.CheckinUser getUser();
  /**
   * <pre>
   * Information about the resulting user account.
   * </pre>
   *
   * <code>.bloombox.services.checkin.v1beta1.CheckinUser user = 4;</code>
   */
  io.bloombox.schema.services.checkin.v1beta1.CheckinUserOrBuilder getUserOrBuilder();

  /**
   * <pre>
   * Information related to the user's next enrollment action, if required.
   * </pre>
   *
   * <code>.bloombox.services.checkin.v1beta1.CheckinEnrollment enrollment = 5;</code>
   */
  boolean hasEnrollment();
  /**
   * <pre>
   * Information related to the user's next enrollment action, if required.
   * </pre>
   *
   * <code>.bloombox.services.checkin.v1beta1.CheckinEnrollment enrollment = 5;</code>
   */
  io.bloombox.schema.services.checkin.v1beta1.CheckinEnrollment getEnrollment();
  /**
   * <pre>
   * Information related to the user's next enrollment action, if required.
   * </pre>
   *
   * <code>.bloombox.services.checkin.v1beta1.CheckinEnrollment enrollment = 5;</code>
   */
  io.bloombox.schema.services.checkin.v1beta1.CheckinEnrollmentOrBuilder getEnrollmentOrBuilder();
}
