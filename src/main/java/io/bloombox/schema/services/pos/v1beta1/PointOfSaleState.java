/*
 * Copyright 2018, Bloombox, LLC. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Bloombox, a California Limited Liability Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pos/v1beta1/POSService_Beta1.proto

package io.bloombox.schema.services.pos.v1beta1;

/**
 * <pre>
 * Specifies a combined state payload, provided to the point-of-sale unit once a session changes status.
 * </pre>
 *
 * Protobuf type {@code bloombox.schema.services.pos.v1beta1.PointOfSaleState}
 */
public  final class PointOfSaleState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bloombox.schema.services.pos.v1beta1.PointOfSaleState)
    PointOfSaleStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PointOfSaleState.newBuilder() to construct.
  private PointOfSaleState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PointOfSaleState() {
    transaction_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PointOfSaleState(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.Builder subBuilder = null;
            if (open_ != null) {
              subBuilder = open_.toBuilder();
            }
            open_ = input.readMessage(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(open_);
              open_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              transaction_ = new java.util.ArrayList<io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey>();
              mutable_bitField0_ |= 0x00000002;
            }
            transaction_.add(
                input.readMessage(io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.parser(), extensionRegistry));
            break;
          }
          case 26: {
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.Builder subBuilder = null;
            if (close_ != null) {
              subBuilder = close_.toBuilder();
            }
            close_ = input.readMessage(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(close_);
              close_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        transaction_ = java.util.Collections.unmodifiableList(transaction_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.class, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.Builder.class);
  }

  public interface SessionOpenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Opening float value for the cash register. This is the initial cash amount used for change, etc.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
     */
    boolean hasOpeningFloat();
    /**
     * <pre>
     * Opening float value for the cash register. This is the initial cash amount used for change, etc.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
     */
    io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue getOpeningFloat();
    /**
     * <pre>
     * Opening float value for the cash register. This is the initial cash amount used for change, etc.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
     */
    io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder getOpeningFloatOrBuilder();

    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    boolean hasOccurred();
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    io.opencannabis.schema.temporal.TemporalInstant.Instant getOccurred();
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getOccurredOrBuilder();
  }
  /**
   * <pre>
   * Message payload when a session has been opened.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen}
   */
  public  static final class SessionOpen extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen)
      SessionOpenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SessionOpen.newBuilder() to construct.
    private SessionOpen(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SessionOpen() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SessionOpen(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder subBuilder = null;
              if (openingFloat_ != null) {
                subBuilder = openingFloat_.toBuilder();
              }
              openingFloat_ = input.readMessage(io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(openingFloat_);
                openingFloat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
              if (occurred_ != null) {
                subBuilder = occurred_.toBuilder();
              }
              occurred_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(occurred_);
                occurred_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionOpen_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionOpen_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.class, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.Builder.class);
    }

    public static final int OPENING_FLOAT_FIELD_NUMBER = 1;
    private io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue openingFloat_;
    /**
     * <pre>
     * Opening float value for the cash register. This is the initial cash amount used for change, etc.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
     */
    public boolean hasOpeningFloat() {
      return openingFloat_ != null;
    }
    /**
     * <pre>
     * Opening float value for the cash register. This is the initial cash amount used for change, etc.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
     */
    public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue getOpeningFloat() {
      return openingFloat_ == null ? io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.getDefaultInstance() : openingFloat_;
    }
    /**
     * <pre>
     * Opening float value for the cash register. This is the initial cash amount used for change, etc.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
     */
    public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder getOpeningFloatOrBuilder() {
      return getOpeningFloat();
    }

    public static final int OCCURRED_FIELD_NUMBER = 2;
    private io.opencannabis.schema.temporal.TemporalInstant.Instant occurred_;
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    public boolean hasOccurred() {
      return occurred_ != null;
    }
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getOccurred() {
      return occurred_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : occurred_;
    }
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getOccurredOrBuilder() {
      return getOccurred();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (openingFloat_ != null) {
        output.writeMessage(1, getOpeningFloat());
      }
      if (occurred_ != null) {
        output.writeMessage(2, getOccurred());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (openingFloat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOpeningFloat());
      }
      if (occurred_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOccurred());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen other = (io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen) obj;

      boolean result = true;
      result = result && (hasOpeningFloat() == other.hasOpeningFloat());
      if (hasOpeningFloat()) {
        result = result && getOpeningFloat()
            .equals(other.getOpeningFloat());
      }
      result = result && (hasOccurred() == other.hasOccurred());
      if (hasOccurred()) {
        result = result && getOccurred()
            .equals(other.getOccurred());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOpeningFloat()) {
        hash = (37 * hash) + OPENING_FLOAT_FIELD_NUMBER;
        hash = (53 * hash) + getOpeningFloat().hashCode();
      }
      if (hasOccurred()) {
        hash = (37 * hash) + OCCURRED_FIELD_NUMBER;
        hash = (53 * hash) + getOccurred().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message payload when a session has been opened.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen)
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionOpen_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionOpen_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.class, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.Builder.class);
      }

      // Construct using io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (openingFloatBuilder_ == null) {
          openingFloat_ = null;
        } else {
          openingFloat_ = null;
          openingFloatBuilder_ = null;
        }
        if (occurredBuilder_ == null) {
          occurred_ = null;
        } else {
          occurred_ = null;
          occurredBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionOpen_descriptor;
      }

      public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen getDefaultInstanceForType() {
        return io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.getDefaultInstance();
      }

      public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen build() {
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen buildPartial() {
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen result = new io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen(this);
        if (openingFloatBuilder_ == null) {
          result.openingFloat_ = openingFloat_;
        } else {
          result.openingFloat_ = openingFloatBuilder_.build();
        }
        if (occurredBuilder_ == null) {
          result.occurred_ = occurred_;
        } else {
          result.occurred_ = occurredBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen) {
          return mergeFrom((io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen other) {
        if (other == io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.getDefaultInstance()) return this;
        if (other.hasOpeningFloat()) {
          mergeOpeningFloat(other.getOpeningFloat());
        }
        if (other.hasOccurred()) {
          mergeOccurred(other.getOccurred());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue openingFloat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder> openingFloatBuilder_;
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      public boolean hasOpeningFloat() {
        return openingFloatBuilder_ != null || openingFloat_ != null;
      }
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue getOpeningFloat() {
        if (openingFloatBuilder_ == null) {
          return openingFloat_ == null ? io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.getDefaultInstance() : openingFloat_;
        } else {
          return openingFloatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      public Builder setOpeningFloat(io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue value) {
        if (openingFloatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          openingFloat_ = value;
          onChanged();
        } else {
          openingFloatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      public Builder setOpeningFloat(
          io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder builderForValue) {
        if (openingFloatBuilder_ == null) {
          openingFloat_ = builderForValue.build();
          onChanged();
        } else {
          openingFloatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      public Builder mergeOpeningFloat(io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue value) {
        if (openingFloatBuilder_ == null) {
          if (openingFloat_ != null) {
            openingFloat_ =
              io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.newBuilder(openingFloat_).mergeFrom(value).buildPartial();
          } else {
            openingFloat_ = value;
          }
          onChanged();
        } else {
          openingFloatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      public Builder clearOpeningFloat() {
        if (openingFloatBuilder_ == null) {
          openingFloat_ = null;
          onChanged();
        } else {
          openingFloat_ = null;
          openingFloatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder getOpeningFloatBuilder() {
        
        onChanged();
        return getOpeningFloatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder getOpeningFloatOrBuilder() {
        if (openingFloatBuilder_ != null) {
          return openingFloatBuilder_.getMessageOrBuilder();
        } else {
          return openingFloat_ == null ?
              io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.getDefaultInstance() : openingFloat_;
        }
      }
      /**
       * <pre>
       * Opening float value for the cash register. This is the initial cash amount used for change, etc.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue opening_float = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder> 
          getOpeningFloatFieldBuilder() {
        if (openingFloatBuilder_ == null) {
          openingFloatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder>(
                  getOpeningFloat(),
                  getParentForChildren(),
                  isClean());
          openingFloat_ = null;
        }
        return openingFloatBuilder_;
      }

      private io.opencannabis.schema.temporal.TemporalInstant.Instant occurred_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> occurredBuilder_;
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public boolean hasOccurred() {
        return occurredBuilder_ != null || occurred_ != null;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.Instant getOccurred() {
        if (occurredBuilder_ == null) {
          return occurred_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : occurred_;
        } else {
          return occurredBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public Builder setOccurred(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
        if (occurredBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          occurred_ = value;
          onChanged();
        } else {
          occurredBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public Builder setOccurred(
          io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
        if (occurredBuilder_ == null) {
          occurred_ = builderForValue.build();
          onChanged();
        } else {
          occurredBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public Builder mergeOccurred(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
        if (occurredBuilder_ == null) {
          if (occurred_ != null) {
            occurred_ =
              io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(occurred_).mergeFrom(value).buildPartial();
          } else {
            occurred_ = value;
          }
          onChanged();
        } else {
          occurredBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public Builder clearOccurred() {
        if (occurredBuilder_ == null) {
          occurred_ = null;
          onChanged();
        } else {
          occurred_ = null;
          occurredBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getOccurredBuilder() {
        
        onChanged();
        return getOccurredFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getOccurredOrBuilder() {
        if (occurredBuilder_ != null) {
          return occurredBuilder_.getMessageOrBuilder();
        } else {
          return occurred_ == null ?
              io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : occurred_;
        }
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
          getOccurredFieldBuilder() {
        if (occurredBuilder_ == null) {
          occurredBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                  getOccurred(),
                  getParentForChildren(),
                  isClean());
          occurred_ = null;
        }
        return occurredBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen)
    private static final io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen();
    }

    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SessionOpen>
        PARSER = new com.google.protobuf.AbstractParser<SessionOpen>() {
      public SessionOpen parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SessionOpen(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SessionOpen> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SessionOpen> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SessionCloseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Closing cash value for the session. This is the total cash amount in the register upon closing.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
     */
    boolean hasClosingCount();
    /**
     * <pre>
     * Closing cash value for the session. This is the total cash amount in the register upon closing.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
     */
    io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue getClosingCount();
    /**
     * <pre>
     * Closing cash value for the session. This is the total cash amount in the register upon closing.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
     */
    io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder getClosingCountOrBuilder();

    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    boolean hasOccurred();
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    io.opencannabis.schema.temporal.TemporalInstant.Instant getOccurred();
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getOccurredOrBuilder();
  }
  /**
   * <pre>
   * Message payload when a session has been closed.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose}
   */
  public  static final class SessionClose extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose)
      SessionCloseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SessionClose.newBuilder() to construct.
    private SessionClose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SessionClose() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SessionClose(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder subBuilder = null;
              if (closingCount_ != null) {
                subBuilder = closingCount_.toBuilder();
              }
              closingCount_ = input.readMessage(io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(closingCount_);
                closingCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder subBuilder = null;
              if (occurred_ != null) {
                subBuilder = occurred_.toBuilder();
              }
              occurred_ = input.readMessage(io.opencannabis.schema.temporal.TemporalInstant.Instant.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(occurred_);
                occurred_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionClose_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionClose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.class, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.Builder.class);
    }

    public static final int CLOSING_COUNT_FIELD_NUMBER = 1;
    private io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue closingCount_;
    /**
     * <pre>
     * Closing cash value for the session. This is the total cash amount in the register upon closing.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
     */
    public boolean hasClosingCount() {
      return closingCount_ != null;
    }
    /**
     * <pre>
     * Closing cash value for the session. This is the total cash amount in the register upon closing.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
     */
    public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue getClosingCount() {
      return closingCount_ == null ? io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.getDefaultInstance() : closingCount_;
    }
    /**
     * <pre>
     * Closing cash value for the session. This is the total cash amount in the register upon closing.
     * </pre>
     *
     * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
     */
    public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder getClosingCountOrBuilder() {
      return getClosingCount();
    }

    public static final int OCCURRED_FIELD_NUMBER = 2;
    private io.opencannabis.schema.temporal.TemporalInstant.Instant occurred_;
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    public boolean hasOccurred() {
      return occurred_ != null;
    }
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.Instant getOccurred() {
      return occurred_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : occurred_;
    }
    /**
     * <pre>
     * Describes the moment the session was actually opened.
     * </pre>
     *
     * <code>.opencannabis.temporal.Instant occurred = 2;</code>
     */
    public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getOccurredOrBuilder() {
      return getOccurred();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (closingCount_ != null) {
        output.writeMessage(1, getClosingCount());
      }
      if (occurred_ != null) {
        output.writeMessage(2, getOccurred());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (closingCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getClosingCount());
      }
      if (occurred_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOccurred());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose other = (io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose) obj;

      boolean result = true;
      result = result && (hasClosingCount() == other.hasClosingCount());
      if (hasClosingCount()) {
        result = result && getClosingCount()
            .equals(other.getClosingCount());
      }
      result = result && (hasOccurred() == other.hasOccurred());
      if (hasOccurred()) {
        result = result && getOccurred()
            .equals(other.getOccurred());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasClosingCount()) {
        hash = (37 * hash) + CLOSING_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getClosingCount().hashCode();
      }
      if (hasOccurred()) {
        hash = (37 * hash) + OCCURRED_FIELD_NUMBER;
        hash = (53 * hash) + getOccurred().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message payload when a session has been closed.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose)
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionCloseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionClose_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionClose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.class, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.Builder.class);
      }

      // Construct using io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (closingCountBuilder_ == null) {
          closingCount_ = null;
        } else {
          closingCount_ = null;
          closingCountBuilder_ = null;
        }
        if (occurredBuilder_ == null) {
          occurred_ = null;
        } else {
          occurred_ = null;
          occurredBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_SessionClose_descriptor;
      }

      public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose getDefaultInstanceForType() {
        return io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.getDefaultInstance();
      }

      public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose build() {
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose buildPartial() {
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose result = new io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose(this);
        if (closingCountBuilder_ == null) {
          result.closingCount_ = closingCount_;
        } else {
          result.closingCount_ = closingCountBuilder_.build();
        }
        if (occurredBuilder_ == null) {
          result.occurred_ = occurred_;
        } else {
          result.occurred_ = occurredBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose) {
          return mergeFrom((io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose other) {
        if (other == io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.getDefaultInstance()) return this;
        if (other.hasClosingCount()) {
          mergeClosingCount(other.getClosingCount());
        }
        if (other.hasOccurred()) {
          mergeOccurred(other.getOccurred());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue closingCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder> closingCountBuilder_;
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      public boolean hasClosingCount() {
        return closingCountBuilder_ != null || closingCount_ != null;
      }
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue getClosingCount() {
        if (closingCountBuilder_ == null) {
          return closingCount_ == null ? io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.getDefaultInstance() : closingCount_;
        } else {
          return closingCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      public Builder setClosingCount(io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue value) {
        if (closingCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          closingCount_ = value;
          onChanged();
        } else {
          closingCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      public Builder setClosingCount(
          io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder builderForValue) {
        if (closingCountBuilder_ == null) {
          closingCount_ = builderForValue.build();
          onChanged();
        } else {
          closingCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      public Builder mergeClosingCount(io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue value) {
        if (closingCountBuilder_ == null) {
          if (closingCount_ != null) {
            closingCount_ =
              io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.newBuilder(closingCount_).mergeFrom(value).buildPartial();
          } else {
            closingCount_ = value;
          }
          onChanged();
        } else {
          closingCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      public Builder clearClosingCount() {
        if (closingCountBuilder_ == null) {
          closingCount_ = null;
          onChanged();
        } else {
          closingCount_ = null;
          closingCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder getClosingCountBuilder() {
        
        onChanged();
        return getClosingCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      public io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder getClosingCountOrBuilder() {
        if (closingCountBuilder_ != null) {
          return closingCountBuilder_.getMessageOrBuilder();
        } else {
          return closingCount_ == null ?
              io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.getDefaultInstance() : closingCount_;
        }
      }
      /**
       * <pre>
       * Closing cash value for the session. This is the total cash amount in the register upon closing.
       * </pre>
       *
       * <code>.opencannabis.commerce.CurrencyValue closing_count = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder> 
          getClosingCountFieldBuilder() {
        if (closingCountBuilder_ == null) {
          closingCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValue.Builder, io.opencannabis.schema.currency.CommerceCurrency.CurrencyValueOrBuilder>(
                  getClosingCount(),
                  getParentForChildren(),
                  isClean());
          closingCount_ = null;
        }
        return closingCountBuilder_;
      }

      private io.opencannabis.schema.temporal.TemporalInstant.Instant occurred_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> occurredBuilder_;
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public boolean hasOccurred() {
        return occurredBuilder_ != null || occurred_ != null;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.Instant getOccurred() {
        if (occurredBuilder_ == null) {
          return occurred_ == null ? io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : occurred_;
        } else {
          return occurredBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public Builder setOccurred(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
        if (occurredBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          occurred_ = value;
          onChanged();
        } else {
          occurredBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public Builder setOccurred(
          io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder builderForValue) {
        if (occurredBuilder_ == null) {
          occurred_ = builderForValue.build();
          onChanged();
        } else {
          occurredBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public Builder mergeOccurred(io.opencannabis.schema.temporal.TemporalInstant.Instant value) {
        if (occurredBuilder_ == null) {
          if (occurred_ != null) {
            occurred_ =
              io.opencannabis.schema.temporal.TemporalInstant.Instant.newBuilder(occurred_).mergeFrom(value).buildPartial();
          } else {
            occurred_ = value;
          }
          onChanged();
        } else {
          occurredBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public Builder clearOccurred() {
        if (occurredBuilder_ == null) {
          occurred_ = null;
          onChanged();
        } else {
          occurred_ = null;
          occurredBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder getOccurredBuilder() {
        
        onChanged();
        return getOccurredFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      public io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder getOccurredOrBuilder() {
        if (occurredBuilder_ != null) {
          return occurredBuilder_.getMessageOrBuilder();
        } else {
          return occurred_ == null ?
              io.opencannabis.schema.temporal.TemporalInstant.Instant.getDefaultInstance() : occurred_;
        }
      }
      /**
       * <pre>
       * Describes the moment the session was actually opened.
       * </pre>
       *
       * <code>.opencannabis.temporal.Instant occurred = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder> 
          getOccurredFieldBuilder() {
        if (occurredBuilder_ == null) {
          occurredBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.opencannabis.schema.temporal.TemporalInstant.Instant, io.opencannabis.schema.temporal.TemporalInstant.Instant.Builder, io.opencannabis.schema.temporal.TemporalInstant.InstantOrBuilder>(
                  getOccurred(),
                  getParentForChildren(),
                  isClean());
          occurred_ = null;
        }
        return occurredBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose)
    private static final io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose();
    }

    public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SessionClose>
        PARSER = new com.google.protobuf.AbstractParser<SessionClose>() {
      public SessionClose parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SessionClose(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SessionClose> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SessionClose> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int OPEN_FIELD_NUMBER = 1;
  private io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open_;
  /**
   * <pre>
   * Describes the opening state of a point of sale session.
   * </pre>
   *
   * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
   */
  public boolean hasOpen() {
    return open_ != null;
  }
  /**
   * <pre>
   * Describes the opening state of a point of sale session.
   * </pre>
   *
   * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
   */
  public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen getOpen() {
    return open_ == null ? io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.getDefaultInstance() : open_;
  }
  /**
   * <pre>
   * Describes the opening state of a point of sale session.
   * </pre>
   *
   * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
   */
  public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpenOrBuilder getOpenOrBuilder() {
    return getOpen();
  }

  public static final int TRANSACTION_FIELD_NUMBER = 2;
  private java.util.List<io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey> transaction_;
  /**
   * <pre>
   * Describes all transactions that occurred during a point of sale session.
   * </pre>
   *
   * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
   */
  public java.util.List<io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey> getTransactionList() {
    return transaction_;
  }
  /**
   * <pre>
   * Describes all transactions that occurred during a point of sale session.
   * </pre>
   *
   * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
   */
  public java.util.List<? extends io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKeyOrBuilder> 
      getTransactionOrBuilderList() {
    return transaction_;
  }
  /**
   * <pre>
   * Describes all transactions that occurred during a point of sale session.
   * </pre>
   *
   * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
   */
  public int getTransactionCount() {
    return transaction_.size();
  }
  /**
   * <pre>
   * Describes all transactions that occurred during a point of sale session.
   * </pre>
   *
   * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
   */
  public io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey getTransaction(int index) {
    return transaction_.get(index);
  }
  /**
   * <pre>
   * Describes all transactions that occurred during a point of sale session.
   * </pre>
   *
   * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
   */
  public io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKeyOrBuilder getTransactionOrBuilder(
      int index) {
    return transaction_.get(index);
  }

  public static final int CLOSE_FIELD_NUMBER = 3;
  private io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close_;
  /**
   * <pre>
   * Describes the closing state of a point of sale session.
   * </pre>
   *
   * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
   */
  public boolean hasClose() {
    return close_ != null;
  }
  /**
   * <pre>
   * Describes the closing state of a point of sale session.
   * </pre>
   *
   * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
   */
  public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose getClose() {
    return close_ == null ? io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.getDefaultInstance() : close_;
  }
  /**
   * <pre>
   * Describes the closing state of a point of sale session.
   * </pre>
   *
   * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
   */
  public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionCloseOrBuilder getCloseOrBuilder() {
    return getClose();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (open_ != null) {
      output.writeMessage(1, getOpen());
    }
    for (int i = 0; i < transaction_.size(); i++) {
      output.writeMessage(2, transaction_.get(i));
    }
    if (close_ != null) {
      output.writeMessage(3, getClose());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (open_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getOpen());
    }
    for (int i = 0; i < transaction_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, transaction_.get(i));
    }
    if (close_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getClose());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.services.pos.v1beta1.PointOfSaleState)) {
      return super.equals(obj);
    }
    io.bloombox.schema.services.pos.v1beta1.PointOfSaleState other = (io.bloombox.schema.services.pos.v1beta1.PointOfSaleState) obj;

    boolean result = true;
    result = result && (hasOpen() == other.hasOpen());
    if (hasOpen()) {
      result = result && getOpen()
          .equals(other.getOpen());
    }
    result = result && getTransactionList()
        .equals(other.getTransactionList());
    result = result && (hasClose() == other.hasClose());
    if (hasClose()) {
      result = result && getClose()
          .equals(other.getClose());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOpen()) {
      hash = (37 * hash) + OPEN_FIELD_NUMBER;
      hash = (53 * hash) + getOpen().hashCode();
    }
    if (getTransactionCount() > 0) {
      hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
      hash = (53 * hash) + getTransactionList().hashCode();
    }
    if (hasClose()) {
      hash = (37 * hash) + CLOSE_FIELD_NUMBER;
      hash = (53 * hash) + getClose().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies a combined state payload, provided to the point-of-sale unit once a session changes status.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.services.pos.v1beta1.PointOfSaleState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bloombox.schema.services.pos.v1beta1.PointOfSaleState)
      io.bloombox.schema.services.pos.v1beta1.PointOfSaleStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.class, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.Builder.class);
    }

    // Construct using io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTransactionFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (openBuilder_ == null) {
        open_ = null;
      } else {
        open_ = null;
        openBuilder_ = null;
      }
      if (transactionBuilder_ == null) {
        transaction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        transactionBuilder_.clear();
      }
      if (closeBuilder_ == null) {
        close_ = null;
      } else {
        close_ = null;
        closeBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.internal_static_bloombox_schema_services_pos_v1beta1_PointOfSaleState_descriptor;
    }

    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState getDefaultInstanceForType() {
      return io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.getDefaultInstance();
    }

    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState build() {
      io.bloombox.schema.services.pos.v1beta1.PointOfSaleState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState buildPartial() {
      io.bloombox.schema.services.pos.v1beta1.PointOfSaleState result = new io.bloombox.schema.services.pos.v1beta1.PointOfSaleState(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (openBuilder_ == null) {
        result.open_ = open_;
      } else {
        result.open_ = openBuilder_.build();
      }
      if (transactionBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          transaction_ = java.util.Collections.unmodifiableList(transaction_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.transaction_ = transaction_;
      } else {
        result.transaction_ = transactionBuilder_.build();
      }
      if (closeBuilder_ == null) {
        result.close_ = close_;
      } else {
        result.close_ = closeBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.services.pos.v1beta1.PointOfSaleState) {
        return mergeFrom((io.bloombox.schema.services.pos.v1beta1.PointOfSaleState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState other) {
      if (other == io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.getDefaultInstance()) return this;
      if (other.hasOpen()) {
        mergeOpen(other.getOpen());
      }
      if (transactionBuilder_ == null) {
        if (!other.transaction_.isEmpty()) {
          if (transaction_.isEmpty()) {
            transaction_ = other.transaction_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTransactionIsMutable();
            transaction_.addAll(other.transaction_);
          }
          onChanged();
        }
      } else {
        if (!other.transaction_.isEmpty()) {
          if (transactionBuilder_.isEmpty()) {
            transactionBuilder_.dispose();
            transactionBuilder_ = null;
            transaction_ = other.transaction_;
            bitField0_ = (bitField0_ & ~0x00000002);
            transactionBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTransactionFieldBuilder() : null;
          } else {
            transactionBuilder_.addAllMessages(other.transaction_);
          }
        }
      }
      if (other.hasClose()) {
        mergeClose(other.getClose());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.services.pos.v1beta1.PointOfSaleState parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.services.pos.v1beta1.PointOfSaleState) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.Builder, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpenOrBuilder> openBuilder_;
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    public boolean hasOpen() {
      return openBuilder_ != null || open_ != null;
    }
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen getOpen() {
      if (openBuilder_ == null) {
        return open_ == null ? io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.getDefaultInstance() : open_;
      } else {
        return openBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    public Builder setOpen(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen value) {
      if (openBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        open_ = value;
        onChanged();
      } else {
        openBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    public Builder setOpen(
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.Builder builderForValue) {
      if (openBuilder_ == null) {
        open_ = builderForValue.build();
        onChanged();
      } else {
        openBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    public Builder mergeOpen(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen value) {
      if (openBuilder_ == null) {
        if (open_ != null) {
          open_ =
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.newBuilder(open_).mergeFrom(value).buildPartial();
        } else {
          open_ = value;
        }
        onChanged();
      } else {
        openBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    public Builder clearOpen() {
      if (openBuilder_ == null) {
        open_ = null;
        onChanged();
      } else {
        open_ = null;
        openBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.Builder getOpenBuilder() {
      
      onChanged();
      return getOpenFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpenOrBuilder getOpenOrBuilder() {
      if (openBuilder_ != null) {
        return openBuilder_.getMessageOrBuilder();
      } else {
        return open_ == null ?
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.getDefaultInstance() : open_;
      }
    }
    /**
     * <pre>
     * Describes the opening state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen open = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.Builder, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpenOrBuilder> 
        getOpenFieldBuilder() {
      if (openBuilder_ == null) {
        openBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpen.Builder, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionOpenOrBuilder>(
                getOpen(),
                getParentForChildren(),
                isClean());
        open_ = null;
      }
      return openBuilder_;
    }

    private java.util.List<io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey> transaction_ =
      java.util.Collections.emptyList();
    private void ensureTransactionIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        transaction_ = new java.util.ArrayList<io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey>(transaction_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKeyOrBuilder> transactionBuilder_;

    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public java.util.List<io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey> getTransactionList() {
      if (transactionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(transaction_);
      } else {
        return transactionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public int getTransactionCount() {
      if (transactionBuilder_ == null) {
        return transaction_.size();
      } else {
        return transactionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey getTransaction(int index) {
      if (transactionBuilder_ == null) {
        return transaction_.get(index);
      } else {
        return transactionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder setTransaction(
        int index, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey value) {
      if (transactionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionIsMutable();
        transaction_.set(index, value);
        onChanged();
      } else {
        transactionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder setTransaction(
        int index, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder builderForValue) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        transaction_.set(index, builderForValue.build());
        onChanged();
      } else {
        transactionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder addTransaction(io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey value) {
      if (transactionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionIsMutable();
        transaction_.add(value);
        onChanged();
      } else {
        transactionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder addTransaction(
        int index, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey value) {
      if (transactionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionIsMutable();
        transaction_.add(index, value);
        onChanged();
      } else {
        transactionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder addTransaction(
        io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder builderForValue) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        transaction_.add(builderForValue.build());
        onChanged();
      } else {
        transactionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder addTransaction(
        int index, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder builderForValue) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        transaction_.add(index, builderForValue.build());
        onChanged();
      } else {
        transactionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder addAllTransaction(
        java.lang.Iterable<? extends io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey> values) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transaction_);
        onChanged();
      } else {
        transactionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder clearTransaction() {
      if (transactionBuilder_ == null) {
        transaction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        transactionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public Builder removeTransaction(int index) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        transaction_.remove(index);
        onChanged();
      } else {
        transactionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder getTransactionBuilder(
        int index) {
      return getTransactionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKeyOrBuilder getTransactionOrBuilder(
        int index) {
      if (transactionBuilder_ == null) {
        return transaction_.get(index);  } else {
        return transactionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public java.util.List<? extends io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKeyOrBuilder> 
         getTransactionOrBuilderList() {
      if (transactionBuilder_ != null) {
        return transactionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(transaction_);
      }
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder addTransactionBuilder() {
      return getTransactionFieldBuilder().addBuilder(
          io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.getDefaultInstance());
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder addTransactionBuilder(
        int index) {
      return getTransactionFieldBuilder().addBuilder(
          index, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.getDefaultInstance());
    }
    /**
     * <pre>
     * Describes all transactions that occurred during a point of sale session.
     * </pre>
     *
     * <code>repeated .opencannabis.commerce.PurchaseKey transaction = 2;</code>
     */
    public java.util.List<io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder> 
         getTransactionBuilderList() {
      return getTransactionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKeyOrBuilder> 
        getTransactionFieldBuilder() {
      if (transactionBuilder_ == null) {
        transactionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKey.Builder, io.opencannabis.schema.commerce.CommercialPurchase.PurchaseKeyOrBuilder>(
                transaction_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        transaction_ = null;
      }
      return transactionBuilder_;
    }

    private io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.Builder, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionCloseOrBuilder> closeBuilder_;
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    public boolean hasClose() {
      return closeBuilder_ != null || close_ != null;
    }
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose getClose() {
      if (closeBuilder_ == null) {
        return close_ == null ? io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.getDefaultInstance() : close_;
      } else {
        return closeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    public Builder setClose(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose value) {
      if (closeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        close_ = value;
        onChanged();
      } else {
        closeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    public Builder setClose(
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.Builder builderForValue) {
      if (closeBuilder_ == null) {
        close_ = builderForValue.build();
        onChanged();
      } else {
        closeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    public Builder mergeClose(io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose value) {
      if (closeBuilder_ == null) {
        if (close_ != null) {
          close_ =
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.newBuilder(close_).mergeFrom(value).buildPartial();
        } else {
          close_ = value;
        }
        onChanged();
      } else {
        closeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    public Builder clearClose() {
      if (closeBuilder_ == null) {
        close_ = null;
        onChanged();
      } else {
        close_ = null;
        closeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.Builder getCloseBuilder() {
      
      onChanged();
      return getCloseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionCloseOrBuilder getCloseOrBuilder() {
      if (closeBuilder_ != null) {
        return closeBuilder_.getMessageOrBuilder();
      } else {
        return close_ == null ?
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.getDefaultInstance() : close_;
      }
    }
    /**
     * <pre>
     * Describes the closing state of a point of sale session.
     * </pre>
     *
     * <code>.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose close = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.Builder, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionCloseOrBuilder> 
        getCloseFieldBuilder() {
      if (closeBuilder_ == null) {
        closeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionClose.Builder, io.bloombox.schema.services.pos.v1beta1.PointOfSaleState.SessionCloseOrBuilder>(
                getClose(),
                getParentForChildren(),
                isClean());
        close_ = null;
      }
      return closeBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bloombox.schema.services.pos.v1beta1.PointOfSaleState)
  }

  // @@protoc_insertion_point(class_scope:bloombox.schema.services.pos.v1beta1.PointOfSaleState)
  private static final io.bloombox.schema.services.pos.v1beta1.PointOfSaleState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.services.pos.v1beta1.PointOfSaleState();
  }

  public static io.bloombox.schema.services.pos.v1beta1.PointOfSaleState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PointOfSaleState>
      PARSER = new com.google.protobuf.AbstractParser<PointOfSaleState>() {
    public PointOfSaleState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PointOfSaleState(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PointOfSaleState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PointOfSaleState> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.services.pos.v1beta1.PointOfSaleState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

