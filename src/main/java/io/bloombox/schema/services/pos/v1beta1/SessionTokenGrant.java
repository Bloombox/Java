/*
 * Copyright 2018, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pos/v1beta1/POSService_Beta1.proto

package io.bloombox.schema.services.pos.v1beta1;

/**
 * <pre>
 * Enumerates types of authorization tokens supported or used by a point-of-sale session.
 * </pre>
 *
 * Protobuf enum {@code bloombox.services.pos.v1beta1.SessionTokenGrant}
 */
public enum SessionTokenGrant
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Specialized authorization ticket that grants access to the Point of Sale API.
   * </pre>
   *
   * <code>API = 0;</code>
   */
  API(0),
  /**
   * <pre>
   * Authorization ticket to read/write to/from the point-of-sale operations stream.
   * </pre>
   *
   * <code>STREAM = 1;</code>
   */
  STREAM(1),
  /**
   * <pre>
   * Authorization ticket to connect to in-house messaging services.
   * </pre>
   *
   * <code>MESSAGING = 2;</code>
   */
  MESSAGING(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Specialized authorization ticket that grants access to the Point of Sale API.
   * </pre>
   *
   * <code>API = 0;</code>
   */
  public static final int API_VALUE = 0;
  /**
   * <pre>
   * Authorization ticket to read/write to/from the point-of-sale operations stream.
   * </pre>
   *
   * <code>STREAM = 1;</code>
   */
  public static final int STREAM_VALUE = 1;
  /**
   * <pre>
   * Authorization ticket to connect to in-house messaging services.
   * </pre>
   *
   * <code>MESSAGING = 2;</code>
   */
  public static final int MESSAGING_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SessionTokenGrant valueOf(int value) {
    return forNumber(value);
  }

  public static SessionTokenGrant forNumber(int value) {
    switch (value) {
      case 0: return API;
      case 1: return STREAM;
      case 2: return MESSAGING;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SessionTokenGrant>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SessionTokenGrant> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SessionTokenGrant>() {
          public SessionTokenGrant findValueByNumber(int number) {
            return SessionTokenGrant.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.getDescriptor().getEnumTypes().get(2);
  }

  private static final SessionTokenGrant[] VALUES = values();

  public static SessionTokenGrant valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SessionTokenGrant(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:bloombox.services.pos.v1beta1.SessionTokenGrant)
}

