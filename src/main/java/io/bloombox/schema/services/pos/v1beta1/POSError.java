/*
 * Copyright 2018, Bloombox, LLC. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Bloombox, a California Limited Liability Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pos/v1beta1/POSService_Beta1.proto

package io.bloombox.schema.services.pos.v1beta1;

/**
 * <pre>
 * Enumerates error states that may be served from the POS service.
 * </pre>
 *
 * Protobuf enum {@code bloombox.schema.services.pos.v1beta1.POSError}
 */
public enum POSError
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * An unknown internal error occurred.
   * </pre>
   *
   * <code>NO_ERROR = 0;</code>
   */
  NO_ERROR(0),
  /**
   * <pre>
   * The partner code was missing or found to be invalid.
   * </pre>
   *
   * <code>INVALID_PARTNER = 1;</code>
   */
  INVALID_PARTNER(1),
  /**
   * <pre>
   * The location code was missing or found to be invalid.
   * </pre>
   *
   * <code>INVALID_LOCATION = 2;</code>
   */
  INVALID_LOCATION(2),
  /**
   * <pre>
   * The device key was missing or found to be invalid.
   * </pre>
   *
   * <code>INVALID_DEVICE = 3;</code>
   */
  INVALID_DEVICE(3),
  /**
   * <pre>
   * The specified ID token was invalid or missing.
   * </pre>
   *
   * <code>ID_TOKEN_INVALID = 4;</code>
   */
  ID_TOKEN_INVALID(4),
  /**
   * <pre>
   * The device's signature was invalid or missing.
   * </pre>
   *
   * <code>DEVICE_SIGNATURE_INVALID = 5;</code>
   */
  DEVICE_SIGNATURE_INVALID(5),
  /**
   * <pre>
   * Access was denied due to authorization failure.
   * </pre>
   *
   * <code>AUTHORIZATION_DENIED = 97;</code>
   */
  AUTHORIZATION_DENIED(97),
  /**
   * <pre>
   * Access cannot be granted due to a conflict.
   * </pre>
   *
   * <code>ACCESS_CONFLICT = 98;</code>
   */
  ACCESS_CONFLICT(98),
  /**
   * <pre>
   * An internal error occurred.
   * </pre>
   *
   * <code>INTERNAL_ERROR = 99;</code>
   */
  INTERNAL_ERROR(99),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * An unknown internal error occurred.
   * </pre>
   *
   * <code>NO_ERROR = 0;</code>
   */
  public static final int NO_ERROR_VALUE = 0;
  /**
   * <pre>
   * The partner code was missing or found to be invalid.
   * </pre>
   *
   * <code>INVALID_PARTNER = 1;</code>
   */
  public static final int INVALID_PARTNER_VALUE = 1;
  /**
   * <pre>
   * The location code was missing or found to be invalid.
   * </pre>
   *
   * <code>INVALID_LOCATION = 2;</code>
   */
  public static final int INVALID_LOCATION_VALUE = 2;
  /**
   * <pre>
   * The device key was missing or found to be invalid.
   * </pre>
   *
   * <code>INVALID_DEVICE = 3;</code>
   */
  public static final int INVALID_DEVICE_VALUE = 3;
  /**
   * <pre>
   * The specified ID token was invalid or missing.
   * </pre>
   *
   * <code>ID_TOKEN_INVALID = 4;</code>
   */
  public static final int ID_TOKEN_INVALID_VALUE = 4;
  /**
   * <pre>
   * The device's signature was invalid or missing.
   * </pre>
   *
   * <code>DEVICE_SIGNATURE_INVALID = 5;</code>
   */
  public static final int DEVICE_SIGNATURE_INVALID_VALUE = 5;
  /**
   * <pre>
   * Access was denied due to authorization failure.
   * </pre>
   *
   * <code>AUTHORIZATION_DENIED = 97;</code>
   */
  public static final int AUTHORIZATION_DENIED_VALUE = 97;
  /**
   * <pre>
   * Access cannot be granted due to a conflict.
   * </pre>
   *
   * <code>ACCESS_CONFLICT = 98;</code>
   */
  public static final int ACCESS_CONFLICT_VALUE = 98;
  /**
   * <pre>
   * An internal error occurred.
   * </pre>
   *
   * <code>INTERNAL_ERROR = 99;</code>
   */
  public static final int INTERNAL_ERROR_VALUE = 99;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static POSError valueOf(int value) {
    return forNumber(value);
  }

  public static POSError forNumber(int value) {
    switch (value) {
      case 0: return NO_ERROR;
      case 1: return INVALID_PARTNER;
      case 2: return INVALID_LOCATION;
      case 3: return INVALID_DEVICE;
      case 4: return ID_TOKEN_INVALID;
      case 5: return DEVICE_SIGNATURE_INVALID;
      case 97: return AUTHORIZATION_DENIED;
      case 98: return ACCESS_CONFLICT;
      case 99: return INTERNAL_ERROR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<POSError>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      POSError> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<POSError>() {
          public POSError findValueByNumber(int number) {
            return POSError.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.bloombox.schema.services.pos.v1beta1.POSServiceBeta1.getDescriptor().getEnumTypes().get(0);
  }

  private static final POSError[] VALUES = values();

  public static POSError valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private POSError(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:bloombox.schema.services.pos.v1beta1.POSError)
}

