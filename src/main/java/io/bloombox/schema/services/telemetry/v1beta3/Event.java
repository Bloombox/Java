// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telemetry/v1beta3/GenericEvents_Beta3.proto

package io.bloombox.schema.services.telemetry.v1beta3;

/**
 * <pre>
 * Specifies an RPC operation to submit one or more generic events to an unenumerated collection.
 * </pre>
 *
 * Protobuf type {@code bloombox.schema.services.telemetry.v1beta3.Event}
 */
public  final class Event extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bloombox.schema.services.telemetry.v1beta3.Event)
    EventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Event.newBuilder() to construct.
  private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Event() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Event(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.services.telemetry.v1beta3.Event.class, io.bloombox.schema.services.telemetry.v1beta3.Event.Builder.class);
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.services.telemetry.v1beta3.Event.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    boolean hasContext();
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.Context getContext();
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder();

    /**
     * <pre>
     * Generic event to submit.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    boolean hasEvent();
    /**
     * <pre>
     * Generic event to submit.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsEvent.Event getEvent();
    /**
     * <pre>
     * Generic event to submit.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder getEventOrBuilder();

    /**
     * <pre>
     * UUID generated for this event, or provided from invoking callers.
     * </pre>
     *
     * <code>string uuid = 3;</code>
     */
    java.lang.String getUuid();
    /**
     * <pre>
     * UUID generated for this event, or provided from invoking callers.
     * </pre>
     *
     * <code>string uuid = 3;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();
  }
  /**
   * <pre>
   * Specifies a request to submit a generic telemetry event record.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.services.telemetry.v1beta3.Event.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.services.telemetry.v1beta3.Event.Request)
      RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
      uuid_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder subBuilder = null;
              if (context_ != null) {
                subBuilder = context_.toBuilder();
              }
              context_ = input.readMessage(io.bloombox.schema.telemetry.AnalyticsContext.Context.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(context_);
                context_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder subBuilder = null;
              if (event_ != null) {
                subBuilder = event_.toBuilder();
              }
              event_ = input.readMessage(io.bloombox.schema.telemetry.AnalyticsEvent.Event.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(event_);
                event_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              uuid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta3.Event.Request.class, io.bloombox.schema.services.telemetry.v1beta3.Event.Request.Builder.class);
    }

    public static final int CONTEXT_FIELD_NUMBER = 1;
    private io.bloombox.schema.telemetry.AnalyticsContext.Context context_;
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    public boolean hasContext() {
      return context_ != null;
    }
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
      return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
    }
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
      return getContext();
    }

    public static final int EVENT_FIELD_NUMBER = 2;
    private io.bloombox.schema.telemetry.AnalyticsEvent.Event event_;
    /**
     * <pre>
     * Generic event to submit.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    public boolean hasEvent() {
      return event_ != null;
    }
    /**
     * <pre>
     * Generic event to submit.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsEvent.Event getEvent() {
      return event_ == null ? io.bloombox.schema.telemetry.AnalyticsEvent.Event.getDefaultInstance() : event_;
    }
    /**
     * <pre>
     * Generic event to submit.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder getEventOrBuilder() {
      return getEvent();
    }

    public static final int UUID_FIELD_NUMBER = 3;
    private volatile java.lang.Object uuid_;
    /**
     * <pre>
     * UUID generated for this event, or provided from invoking callers.
     * </pre>
     *
     * <code>string uuid = 3;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * UUID generated for this event, or provided from invoking callers.
     * </pre>
     *
     * <code>string uuid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (context_ != null) {
        output.writeMessage(1, getContext());
      }
      if (event_ != null) {
        output.writeMessage(2, getEvent());
      }
      if (!getUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uuid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (context_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      if (event_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEvent());
      }
      if (!getUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uuid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta3.Event.Request)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.telemetry.v1beta3.Event.Request other = (io.bloombox.schema.services.telemetry.v1beta3.Event.Request) obj;

      boolean result = true;
      result = result && (hasContext() == other.hasContext());
      if (hasContext()) {
        result = result && getContext()
            .equals(other.getContext());
      }
      result = result && (hasEvent() == other.hasEvent());
      if (hasEvent()) {
        result = result && getEvent()
            .equals(other.getEvent());
      }
      result = result && getUuid()
          .equals(other.getUuid());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasContext()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getContext().hashCode();
      }
      if (hasEvent()) {
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getEvent().hashCode();
      }
      hash = (37 * hash) + UUID_FIELD_NUMBER;
      hash = (53 * hash) + getUuid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta3.Event.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a request to submit a generic telemetry event record.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.services.telemetry.v1beta3.Event.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.services.telemetry.v1beta3.Event.Request)
        io.bloombox.schema.services.telemetry.v1beta3.Event.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.telemetry.v1beta3.Event.Request.class, io.bloombox.schema.services.telemetry.v1beta3.Event.Request.Builder.class);
      }

      // Construct using io.bloombox.schema.services.telemetry.v1beta3.Event.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (contextBuilder_ == null) {
          context_ = null;
        } else {
          context_ = null;
          contextBuilder_ = null;
        }
        if (eventBuilder_ == null) {
          event_ = null;
        } else {
          event_ = null;
          eventBuilder_ = null;
        }
        uuid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Request_descriptor;
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.Request getDefaultInstanceForType() {
        return io.bloombox.schema.services.telemetry.v1beta3.Event.Request.getDefaultInstance();
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.Request build() {
        io.bloombox.schema.services.telemetry.v1beta3.Event.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.Request buildPartial() {
        io.bloombox.schema.services.telemetry.v1beta3.Event.Request result = new io.bloombox.schema.services.telemetry.v1beta3.Event.Request(this);
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        if (eventBuilder_ == null) {
          result.event_ = event_;
        } else {
          result.event_ = eventBuilder_.build();
        }
        result.uuid_ = uuid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.telemetry.v1beta3.Event.Request) {
          return mergeFrom((io.bloombox.schema.services.telemetry.v1beta3.Event.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta3.Event.Request other) {
        if (other == io.bloombox.schema.services.telemetry.v1beta3.Event.Request.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        if (other.hasEvent()) {
          mergeEvent(other.getEvent());
        }
        if (!other.getUuid().isEmpty()) {
          uuid_ = other.uuid_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.telemetry.v1beta3.Event.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.telemetry.v1beta3.Event.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.bloombox.schema.telemetry.AnalyticsContext.Context context_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> contextBuilder_;
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public boolean hasContext() {
        return contextBuilder_ != null || context_ != null;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
        if (contextBuilder_ == null) {
          return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public Builder setContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public Builder setContext(
          io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public Builder mergeContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (context_ != null) {
            context_ =
              io.bloombox.schema.telemetry.AnalyticsContext.Context.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = null;
          onChanged();
        } else {
          context_ = null;
          contextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder getContextBuilder() {
        
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_ == null ?
              io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        }
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder>(
                  getContext(),
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }

      private io.bloombox.schema.telemetry.AnalyticsEvent.Event event_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsEvent.Event, io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder, io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder> eventBuilder_;
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public boolean hasEvent() {
        return eventBuilder_ != null || event_ != null;
      }
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsEvent.Event getEvent() {
        if (eventBuilder_ == null) {
          return event_ == null ? io.bloombox.schema.telemetry.AnalyticsEvent.Event.getDefaultInstance() : event_;
        } else {
          return eventBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder setEvent(io.bloombox.schema.telemetry.AnalyticsEvent.Event value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          eventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder setEvent(
          io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder builderForValue) {
        if (eventBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          eventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder mergeEvent(io.bloombox.schema.telemetry.AnalyticsEvent.Event value) {
        if (eventBuilder_ == null) {
          if (event_ != null) {
            event_ =
              io.bloombox.schema.telemetry.AnalyticsEvent.Event.newBuilder(event_).mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          eventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder clearEvent() {
        if (eventBuilder_ == null) {
          event_ = null;
          onChanged();
        } else {
          event_ = null;
          eventBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder getEventBuilder() {
        
        onChanged();
        return getEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder getEventOrBuilder() {
        if (eventBuilder_ != null) {
          return eventBuilder_.getMessageOrBuilder();
        } else {
          return event_ == null ?
              io.bloombox.schema.telemetry.AnalyticsEvent.Event.getDefaultInstance() : event_;
        }
      }
      /**
       * <pre>
       * Generic event to submit.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsEvent.Event, io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder, io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder> 
          getEventFieldBuilder() {
        if (eventBuilder_ == null) {
          eventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.telemetry.AnalyticsEvent.Event, io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder, io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder>(
                  getEvent(),
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        return eventBuilder_;
      }

      private java.lang.Object uuid_ = "";
      /**
       * <pre>
       * UUID generated for this event, or provided from invoking callers.
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * UUID generated for this event, or provided from invoking callers.
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * UUID generated for this event, or provided from invoking callers.
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UUID generated for this event, or provided from invoking callers.
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public Builder clearUuid() {
        
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UUID generated for this event, or provided from invoking callers.
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.services.telemetry.v1beta3.Event.Request)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.Event.Request)
    private static final io.bloombox.schema.services.telemetry.v1beta3.Event.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta3.Event.Request();
    }

    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.services.telemetry.v1beta3.Event.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.services.telemetry.v1beta3.Event.Batch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    java.util.List<io.bloombox.schema.telemetry.AnalyticsEvent.Event> 
        getEventList();
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsEvent.Event getEvent(int index);
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    int getEventCount();
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    java.util.List<? extends io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder> 
        getEventOrBuilderList();
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder getEventOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Specifies a request one or more generic telemetry event records.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.services.telemetry.v1beta3.Event.Batch}
   */
  public  static final class Batch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.services.telemetry.v1beta3.Event.Batch)
      BatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Batch.newBuilder() to construct.
    private Batch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Batch() {
      event_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Batch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                event_ = new java.util.ArrayList<io.bloombox.schema.telemetry.AnalyticsEvent.Event>();
                mutable_bitField0_ |= 0x00000001;
              }
              event_.add(
                  input.readMessage(io.bloombox.schema.telemetry.AnalyticsEvent.Event.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          event_ = java.util.Collections.unmodifiableList(event_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Batch_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Batch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.class, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder.class);
    }

    public static final int EVENT_FIELD_NUMBER = 2;
    private java.util.List<io.bloombox.schema.telemetry.AnalyticsEvent.Event> event_;
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    public java.util.List<io.bloombox.schema.telemetry.AnalyticsEvent.Event> getEventList() {
      return event_;
    }
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    public java.util.List<? extends io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder> 
        getEventOrBuilderList() {
      return event_;
    }
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    public int getEventCount() {
      return event_.size();
    }
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsEvent.Event getEvent(int index) {
      return event_.get(index);
    }
    /**
     * <pre>
     * Events to submit.
     * </pre>
     *
     * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder getEventOrBuilder(
        int index) {
      return event_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < event_.size(); i++) {
        output.writeMessage(2, event_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < event_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, event_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta3.Event.Batch)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.telemetry.v1beta3.Event.Batch other = (io.bloombox.schema.services.telemetry.v1beta3.Event.Batch) obj;

      boolean result = true;
      result = result && getEventList()
          .equals(other.getEventList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEventCount() > 0) {
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getEventList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta3.Event.Batch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a request one or more generic telemetry event records.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.services.telemetry.v1beta3.Event.Batch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.services.telemetry.v1beta3.Event.Batch)
        io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Batch_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Batch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.class, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder.class);
      }

      // Construct using io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEventFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (eventBuilder_ == null) {
          event_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          eventBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_Batch_descriptor;
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch getDefaultInstanceForType() {
        return io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.getDefaultInstance();
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch build() {
        io.bloombox.schema.services.telemetry.v1beta3.Event.Batch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch buildPartial() {
        io.bloombox.schema.services.telemetry.v1beta3.Event.Batch result = new io.bloombox.schema.services.telemetry.v1beta3.Event.Batch(this);
        int from_bitField0_ = bitField0_;
        if (eventBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            event_ = java.util.Collections.unmodifiableList(event_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.event_ = event_;
        } else {
          result.event_ = eventBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.telemetry.v1beta3.Event.Batch) {
          return mergeFrom((io.bloombox.schema.services.telemetry.v1beta3.Event.Batch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta3.Event.Batch other) {
        if (other == io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.getDefaultInstance()) return this;
        if (eventBuilder_ == null) {
          if (!other.event_.isEmpty()) {
            if (event_.isEmpty()) {
              event_ = other.event_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEventIsMutable();
              event_.addAll(other.event_);
            }
            onChanged();
          }
        } else {
          if (!other.event_.isEmpty()) {
            if (eventBuilder_.isEmpty()) {
              eventBuilder_.dispose();
              eventBuilder_ = null;
              event_ = other.event_;
              bitField0_ = (bitField0_ & ~0x00000001);
              eventBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventFieldBuilder() : null;
            } else {
              eventBuilder_.addAllMessages(other.event_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.telemetry.v1beta3.Event.Batch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.telemetry.v1beta3.Event.Batch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.bloombox.schema.telemetry.AnalyticsEvent.Event> event_ =
        java.util.Collections.emptyList();
      private void ensureEventIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          event_ = new java.util.ArrayList<io.bloombox.schema.telemetry.AnalyticsEvent.Event>(event_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsEvent.Event, io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder, io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder> eventBuilder_;

      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public java.util.List<io.bloombox.schema.telemetry.AnalyticsEvent.Event> getEventList() {
        if (eventBuilder_ == null) {
          return java.util.Collections.unmodifiableList(event_);
        } else {
          return eventBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public int getEventCount() {
        if (eventBuilder_ == null) {
          return event_.size();
        } else {
          return eventBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsEvent.Event getEvent(int index) {
        if (eventBuilder_ == null) {
          return event_.get(index);
        } else {
          return eventBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder setEvent(
          int index, io.bloombox.schema.telemetry.AnalyticsEvent.Event value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.set(index, value);
          onChanged();
        } else {
          eventBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder setEvent(
          int index, io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder addEvent(io.bloombox.schema.telemetry.AnalyticsEvent.Event value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.add(value);
          onChanged();
        } else {
          eventBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder addEvent(
          int index, io.bloombox.schema.telemetry.AnalyticsEvent.Event value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.add(index, value);
          onChanged();
        } else {
          eventBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder addEvent(
          io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.add(builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder addEvent(
          int index, io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder addAllEvent(
          java.lang.Iterable<? extends io.bloombox.schema.telemetry.AnalyticsEvent.Event> values) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, event_);
          onChanged();
        } else {
          eventBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder clearEvent() {
        if (eventBuilder_ == null) {
          event_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          eventBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public Builder removeEvent(int index) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.remove(index);
          onChanged();
        } else {
          eventBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder getEventBuilder(
          int index) {
        return getEventFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder getEventOrBuilder(
          int index) {
        if (eventBuilder_ == null) {
          return event_.get(index);  } else {
          return eventBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public java.util.List<? extends io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder> 
           getEventOrBuilderList() {
        if (eventBuilder_ != null) {
          return eventBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(event_);
        }
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder addEventBuilder() {
        return getEventFieldBuilder().addBuilder(
            io.bloombox.schema.telemetry.AnalyticsEvent.Event.getDefaultInstance());
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder addEventBuilder(
          int index) {
        return getEventFieldBuilder().addBuilder(
            index, io.bloombox.schema.telemetry.AnalyticsEvent.Event.getDefaultInstance());
      }
      /**
       * <pre>
       * Events to submit.
       * </pre>
       *
       * <code>repeated .bloombox.schema.analytics.generic.Event event = 2;</code>
       */
      public java.util.List<io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder> 
           getEventBuilderList() {
        return getEventFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsEvent.Event, io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder, io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder> 
          getEventFieldBuilder() {
        if (eventBuilder_ == null) {
          eventBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.bloombox.schema.telemetry.AnalyticsEvent.Event, io.bloombox.schema.telemetry.AnalyticsEvent.Event.Builder, io.bloombox.schema.telemetry.AnalyticsEvent.EventOrBuilder>(
                  event_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        return eventBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.services.telemetry.v1beta3.Event.Batch)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.Event.Batch)
    private static final io.bloombox.schema.services.telemetry.v1beta3.Event.Batch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta3.Event.Batch();
    }

    public static io.bloombox.schema.services.telemetry.v1beta3.Event.Batch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Batch>
        PARSER = new com.google.protobuf.AbstractParser<Batch>() {
      public Batch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Batch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Batch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Batch> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    boolean hasContext();
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.Context getContext();
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder();

    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    java.util.List<io.bloombox.schema.services.telemetry.v1beta3.Event.Batch> 
        getBatchList();
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta3.Event.Batch getBatch(int index);
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    int getBatchCount();
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    java.util.List<? extends io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder> 
        getBatchOrBuilderList();
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder getBatchOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Wraps an event batch in a request.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest}
   */
  public  static final class BatchRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest)
      BatchRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatchRequest.newBuilder() to construct.
    private BatchRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatchRequest() {
      batch_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BatchRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder subBuilder = null;
              if (context_ != null) {
                subBuilder = context_.toBuilder();
              }
              context_ = input.readMessage(io.bloombox.schema.telemetry.AnalyticsContext.Context.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(context_);
                context_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                batch_ = new java.util.ArrayList<io.bloombox.schema.services.telemetry.v1beta3.Event.Batch>();
                mutable_bitField0_ |= 0x00000002;
              }
              batch_.add(
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          batch_ = java.util.Collections.unmodifiableList(batch_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_BatchRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_BatchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest.class, io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest.Builder.class);
    }

    private int bitField0_;
    public static final int CONTEXT_FIELD_NUMBER = 1;
    private io.bloombox.schema.telemetry.AnalyticsContext.Context context_;
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    public boolean hasContext() {
      return context_ != null;
    }
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
      return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
    }
    /**
     * <pre>
     * Context to submit for these events.
     * </pre>
     *
     * <code>.bloombox.schema.analytics.Context context = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
      return getContext();
    }

    public static final int BATCH_FIELD_NUMBER = 2;
    private java.util.List<io.bloombox.schema.services.telemetry.v1beta3.Event.Batch> batch_;
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    public java.util.List<io.bloombox.schema.services.telemetry.v1beta3.Event.Batch> getBatchList() {
      return batch_;
    }
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    public java.util.List<? extends io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder> 
        getBatchOrBuilderList() {
      return batch_;
    }
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    public int getBatchCount() {
      return batch_.size();
    }
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch getBatch(int index) {
      return batch_.get(index);
    }
    /**
     * <pre>
     * Event batch.
     * </pre>
     *
     * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder getBatchOrBuilder(
        int index) {
      return batch_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (context_ != null) {
        output.writeMessage(1, getContext());
      }
      for (int i = 0; i < batch_.size(); i++) {
        output.writeMessage(2, batch_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (context_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      for (int i = 0; i < batch_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, batch_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest other = (io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest) obj;

      boolean result = true;
      result = result && (hasContext() == other.hasContext());
      if (hasContext()) {
        result = result && getContext()
            .equals(other.getContext());
      }
      result = result && getBatchList()
          .equals(other.getBatchList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasContext()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getContext().hashCode();
      }
      if (getBatchCount() > 0) {
        hash = (37 * hash) + BATCH_FIELD_NUMBER;
        hash = (53 * hash) + getBatchList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Wraps an event batch in a request.
     * </pre>
     *
     * Protobuf type {@code bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest)
        io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_BatchRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_BatchRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest.class, io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest.Builder.class);
      }

      // Construct using io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBatchFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (contextBuilder_ == null) {
          context_ = null;
        } else {
          context_ = null;
          contextBuilder_ = null;
        }
        if (batchBuilder_ == null) {
          batch_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          batchBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_BatchRequest_descriptor;
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest getDefaultInstanceForType() {
        return io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest.getDefaultInstance();
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest build() {
        io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest buildPartial() {
        io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest result = new io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        if (batchBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            batch_ = java.util.Collections.unmodifiableList(batch_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.batch_ = batch_;
        } else {
          result.batch_ = batchBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest) {
          return mergeFrom((io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest other) {
        if (other == io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        if (batchBuilder_ == null) {
          if (!other.batch_.isEmpty()) {
            if (batch_.isEmpty()) {
              batch_ = other.batch_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBatchIsMutable();
              batch_.addAll(other.batch_);
            }
            onChanged();
          }
        } else {
          if (!other.batch_.isEmpty()) {
            if (batchBuilder_.isEmpty()) {
              batchBuilder_.dispose();
              batchBuilder_ = null;
              batch_ = other.batch_;
              bitField0_ = (bitField0_ & ~0x00000002);
              batchBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBatchFieldBuilder() : null;
            } else {
              batchBuilder_.addAllMessages(other.batch_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.bloombox.schema.telemetry.AnalyticsContext.Context context_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> contextBuilder_;
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public boolean hasContext() {
        return contextBuilder_ != null || context_ != null;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
        if (contextBuilder_ == null) {
          return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public Builder setContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public Builder setContext(
          io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public Builder mergeContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (context_ != null) {
            context_ =
              io.bloombox.schema.telemetry.AnalyticsContext.Context.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = null;
          onChanged();
        } else {
          context_ = null;
          contextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder getContextBuilder() {
        
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_ == null ?
              io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        }
      }
      /**
       * <pre>
       * Context to submit for these events.
       * </pre>
       *
       * <code>.bloombox.schema.analytics.Context context = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder>(
                  getContext(),
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }

      private java.util.List<io.bloombox.schema.services.telemetry.v1beta3.Event.Batch> batch_ =
        java.util.Collections.emptyList();
      private void ensureBatchIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          batch_ = new java.util.ArrayList<io.bloombox.schema.services.telemetry.v1beta3.Event.Batch>(batch_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta3.Event.Batch, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder, io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder> batchBuilder_;

      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public java.util.List<io.bloombox.schema.services.telemetry.v1beta3.Event.Batch> getBatchList() {
        if (batchBuilder_ == null) {
          return java.util.Collections.unmodifiableList(batch_);
        } else {
          return batchBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public int getBatchCount() {
        if (batchBuilder_ == null) {
          return batch_.size();
        } else {
          return batchBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch getBatch(int index) {
        if (batchBuilder_ == null) {
          return batch_.get(index);
        } else {
          return batchBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder setBatch(
          int index, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.set(index, value);
          onChanged();
        } else {
          batchBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder setBatch(
          int index, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.set(index, builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder addBatch(io.bloombox.schema.services.telemetry.v1beta3.Event.Batch value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.add(value);
          onChanged();
        } else {
          batchBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder addBatch(
          int index, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.add(index, value);
          onChanged();
        } else {
          batchBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder addBatch(
          io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.add(builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder addBatch(
          int index, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.add(index, builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder addAllBatch(
          java.lang.Iterable<? extends io.bloombox.schema.services.telemetry.v1beta3.Event.Batch> values) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, batch_);
          onChanged();
        } else {
          batchBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder clearBatch() {
        if (batchBuilder_ == null) {
          batch_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          batchBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public Builder removeBatch(int index) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.remove(index);
          onChanged();
        } else {
          batchBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder getBatchBuilder(
          int index) {
        return getBatchFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder getBatchOrBuilder(
          int index) {
        if (batchBuilder_ == null) {
          return batch_.get(index);  } else {
          return batchBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public java.util.List<? extends io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder> 
           getBatchOrBuilderList() {
        if (batchBuilder_ != null) {
          return batchBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(batch_);
        }
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder addBatchBuilder() {
        return getBatchFieldBuilder().addBuilder(
            io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.getDefaultInstance());
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder addBatchBuilder(
          int index) {
        return getBatchFieldBuilder().addBuilder(
            index, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.getDefaultInstance());
      }
      /**
       * <pre>
       * Event batch.
       * </pre>
       *
       * <code>repeated .bloombox.schema.services.telemetry.v1beta3.Event.Batch batch = 2;</code>
       */
      public java.util.List<io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder> 
           getBatchBuilderList() {
        return getBatchFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta3.Event.Batch, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder, io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder> 
          getBatchFieldBuilder() {
        if (batchBuilder_ == null) {
          batchBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta3.Event.Batch, io.bloombox.schema.services.telemetry.v1beta3.Event.Batch.Builder, io.bloombox.schema.services.telemetry.v1beta3.Event.BatchOrBuilder>(
                  batch_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          batch_ = null;
        }
        return batchBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest)
    }

    // @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest)
    private static final io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest();
    }

    public static io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatchRequest>
        PARSER = new com.google.protobuf.AbstractParser<BatchRequest>() {
      public BatchRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatchRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BatchRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatchRequest> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.services.telemetry.v1beta3.Event.BatchRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta3.Event)) {
      return super.equals(obj);
    }
    io.bloombox.schema.services.telemetry.v1beta3.Event other = (io.bloombox.schema.services.telemetry.v1beta3.Event) obj;

    boolean result = true;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta3.Event parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta3.Event prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies an RPC operation to submit one or more generic events to an unenumerated collection.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.services.telemetry.v1beta3.Event}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bloombox.schema.services.telemetry.v1beta3.Event)
      io.bloombox.schema.services.telemetry.v1beta3.EventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta3.Event.class, io.bloombox.schema.services.telemetry.v1beta3.Event.Builder.class);
    }

    // Construct using io.bloombox.schema.services.telemetry.v1beta3.Event.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.services.telemetry.v1beta3.GenericEventsBeta3.internal_static_bloombox_schema_services_telemetry_v1beta3_Event_descriptor;
    }

    public io.bloombox.schema.services.telemetry.v1beta3.Event getDefaultInstanceForType() {
      return io.bloombox.schema.services.telemetry.v1beta3.Event.getDefaultInstance();
    }

    public io.bloombox.schema.services.telemetry.v1beta3.Event build() {
      io.bloombox.schema.services.telemetry.v1beta3.Event result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.services.telemetry.v1beta3.Event buildPartial() {
      io.bloombox.schema.services.telemetry.v1beta3.Event result = new io.bloombox.schema.services.telemetry.v1beta3.Event(this);
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.services.telemetry.v1beta3.Event) {
        return mergeFrom((io.bloombox.schema.services.telemetry.v1beta3.Event)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta3.Event other) {
      if (other == io.bloombox.schema.services.telemetry.v1beta3.Event.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.services.telemetry.v1beta3.Event parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.services.telemetry.v1beta3.Event) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bloombox.schema.services.telemetry.v1beta3.Event)
  }

  // @@protoc_insertion_point(class_scope:bloombox.schema.services.telemetry.v1beta3.Event)
  private static final io.bloombox.schema.services.telemetry.v1beta3.Event DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta3.Event();
  }

  public static io.bloombox.schema.services.telemetry.v1beta3.Event getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Event>
      PARSER = new com.google.protobuf.AbstractParser<Event>() {
    public Event parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Event(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Event> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Event> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.services.telemetry.v1beta3.Event getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

