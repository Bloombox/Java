/*
 * Copyright 2019, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telemetry/v1beta4/TelemetryService_Beta4.proto

package io.bloombox.schema.services.telemetry.v1beta4;

/**
 * <pre>
 * Defines contextual information for inventory telemetry events, which describe observations from on-site devices (i.e.
 * RFID and BCR traffic) or receive notifications from managed devices about stock changes (intake events, update
 * events, transfer events, and consumption events).
 * </pre>
 *
 * Protobuf type {@code bloombox.services.telemetry.v1beta4.InventoryContext}
 */
public  final class InventoryContext extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bloombox.services.telemetry.v1beta4.InventoryContext)
    InventoryContextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InventoryContext.newBuilder() to construct.
  private InventoryContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InventoryContext() {
    uuid_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private InventoryContext(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.Builder subBuilder = null;
            if (timing_ != null) {
              subBuilder = timing_.toBuilder();
            }
            timing_ = input.readMessage(io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(timing_);
              timing_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder subBuilder = null;
            if (context_ != null) {
              subBuilder = context_.toBuilder();
            }
            context_ = input.readMessage(io.bloombox.schema.telemetry.AnalyticsContext.Context.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(context_);
              context_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.opencannabis.schema.crypto.Signature.Builder subBuilder = null;
            if (signature_ != null) {
              subBuilder = signature_.toBuilder();
            }
            signature_ = input.readMessage(io.opencannabis.schema.crypto.Signature.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(signature_);
              signature_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            uuid_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.services.telemetry.v1beta4.TelemetryServiceBeta4.internal_static_bloombox_services_telemetry_v1beta4_InventoryContext_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.services.telemetry.v1beta4.TelemetryServiceBeta4.internal_static_bloombox_services_telemetry_v1beta4_InventoryContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.services.telemetry.v1beta4.InventoryContext.class, io.bloombox.schema.services.telemetry.v1beta4.InventoryContext.Builder.class);
  }

  public static final int TIMING_FIELD_NUMBER = 1;
  private io.bloombox.schema.telemetry.AnalyticsContext.EventPosition timing_;
  /**
   * <pre>
   * Timing of this event, or, the position of this event in temporal space.
   * </pre>
   *
   * <code>.bloombox.analytics.EventPosition timing = 1;</code>
   */
  public boolean hasTiming() {
    return timing_ != null;
  }
  /**
   * <pre>
   * Timing of this event, or, the position of this event in temporal space.
   * </pre>
   *
   * <code>.bloombox.analytics.EventPosition timing = 1;</code>
   */
  public io.bloombox.schema.telemetry.AnalyticsContext.EventPosition getTiming() {
    return timing_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.getDefaultInstance() : timing_;
  }
  /**
   * <pre>
   * Timing of this event, or, the position of this event in temporal space.
   * </pre>
   *
   * <code>.bloombox.analytics.EventPosition timing = 1;</code>
   */
  public io.bloombox.schema.telemetry.AnalyticsContext.EventPositionOrBuilder getTimingOrBuilder() {
    return getTiming();
  }

  public static final int CONTEXT_FIELD_NUMBER = 2;
  private io.bloombox.schema.telemetry.AnalyticsContext.Context context_;
  /**
   * <pre>
   * Context of this event, including the scope and reporting node.
   * </pre>
   *
   * <code>.bloombox.analytics.Context context = 2;</code>
   */
  public boolean hasContext() {
    return context_ != null;
  }
  /**
   * <pre>
   * Context of this event, including the scope and reporting node.
   * </pre>
   *
   * <code>.bloombox.analytics.Context context = 2;</code>
   */
  public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
    return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
  }
  /**
   * <pre>
   * Context of this event, including the scope and reporting node.
   * </pre>
   *
   * <code>.bloombox.analytics.Context context = 2;</code>
   */
  public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
    return getContext();
  }

  public static final int SIGNATURE_FIELD_NUMBER = 3;
  private io.opencannabis.schema.crypto.Signature signature_;
  /**
   * <pre>
   * Cryptographic signature from the reporting managed device/node.
   * </pre>
   *
   * <code>.opencannabis.crypto.Signature signature = 3;</code>
   */
  public boolean hasSignature() {
    return signature_ != null;
  }
  /**
   * <pre>
   * Cryptographic signature from the reporting managed device/node.
   * </pre>
   *
   * <code>.opencannabis.crypto.Signature signature = 3;</code>
   */
  public io.opencannabis.schema.crypto.Signature getSignature() {
    return signature_ == null ? io.opencannabis.schema.crypto.Signature.getDefaultInstance() : signature_;
  }
  /**
   * <pre>
   * Cryptographic signature from the reporting managed device/node.
   * </pre>
   *
   * <code>.opencannabis.crypto.Signature signature = 3;</code>
   */
  public io.opencannabis.schema.crypto.SignatureOrBuilder getSignatureOrBuilder() {
    return getSignature();
  }

  public static final int UUID_FIELD_NUMBER = 4;
  private volatile java.lang.Object uuid_;
  /**
   * <pre>
   * Unique event transmission ID, generated by the client.
   * </pre>
   *
   * <code>string uuid = 4;</code>
   */
  public java.lang.String getUuid() {
    java.lang.Object ref = uuid_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uuid_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Unique event transmission ID, generated by the client.
   * </pre>
   *
   * <code>string uuid = 4;</code>
   */
  public com.google.protobuf.ByteString
      getUuidBytes() {
    java.lang.Object ref = uuid_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uuid_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (timing_ != null) {
      output.writeMessage(1, getTiming());
    }
    if (context_ != null) {
      output.writeMessage(2, getContext());
    }
    if (signature_ != null) {
      output.writeMessage(3, getSignature());
    }
    if (!getUuidBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, uuid_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (timing_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTiming());
    }
    if (context_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getContext());
    }
    if (signature_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSignature());
    }
    if (!getUuidBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, uuid_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta4.InventoryContext)) {
      return super.equals(obj);
    }
    io.bloombox.schema.services.telemetry.v1beta4.InventoryContext other = (io.bloombox.schema.services.telemetry.v1beta4.InventoryContext) obj;

    if (hasTiming() != other.hasTiming()) return false;
    if (hasTiming()) {
      if (!getTiming()
          .equals(other.getTiming())) return false;
    }
    if (hasContext() != other.hasContext()) return false;
    if (hasContext()) {
      if (!getContext()
          .equals(other.getContext())) return false;
    }
    if (hasSignature() != other.hasSignature()) return false;
    if (hasSignature()) {
      if (!getSignature()
          .equals(other.getSignature())) return false;
    }
    if (!getUuid()
        .equals(other.getUuid())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTiming()) {
      hash = (37 * hash) + TIMING_FIELD_NUMBER;
      hash = (53 * hash) + getTiming().hashCode();
    }
    if (hasContext()) {
      hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getContext().hashCode();
    }
    if (hasSignature()) {
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
    }
    hash = (37 * hash) + UUID_FIELD_NUMBER;
    hash = (53 * hash) + getUuid().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta4.InventoryContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines contextual information for inventory telemetry events, which describe observations from on-site devices (i.e.
   * RFID and BCR traffic) or receive notifications from managed devices about stock changes (intake events, update
   * events, transfer events, and consumption events).
   * </pre>
   *
   * Protobuf type {@code bloombox.services.telemetry.v1beta4.InventoryContext}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bloombox.services.telemetry.v1beta4.InventoryContext)
      io.bloombox.schema.services.telemetry.v1beta4.InventoryContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta4.TelemetryServiceBeta4.internal_static_bloombox_services_telemetry_v1beta4_InventoryContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta4.TelemetryServiceBeta4.internal_static_bloombox_services_telemetry_v1beta4_InventoryContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta4.InventoryContext.class, io.bloombox.schema.services.telemetry.v1beta4.InventoryContext.Builder.class);
    }

    // Construct using io.bloombox.schema.services.telemetry.v1beta4.InventoryContext.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (timingBuilder_ == null) {
        timing_ = null;
      } else {
        timing_ = null;
        timingBuilder_ = null;
      }
      if (contextBuilder_ == null) {
        context_ = null;
      } else {
        context_ = null;
        contextBuilder_ = null;
      }
      if (signatureBuilder_ == null) {
        signature_ = null;
      } else {
        signature_ = null;
        signatureBuilder_ = null;
      }
      uuid_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.services.telemetry.v1beta4.TelemetryServiceBeta4.internal_static_bloombox_services_telemetry_v1beta4_InventoryContext_descriptor;
    }

    @java.lang.Override
    public io.bloombox.schema.services.telemetry.v1beta4.InventoryContext getDefaultInstanceForType() {
      return io.bloombox.schema.services.telemetry.v1beta4.InventoryContext.getDefaultInstance();
    }

    @java.lang.Override
    public io.bloombox.schema.services.telemetry.v1beta4.InventoryContext build() {
      io.bloombox.schema.services.telemetry.v1beta4.InventoryContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.bloombox.schema.services.telemetry.v1beta4.InventoryContext buildPartial() {
      io.bloombox.schema.services.telemetry.v1beta4.InventoryContext result = new io.bloombox.schema.services.telemetry.v1beta4.InventoryContext(this);
      if (timingBuilder_ == null) {
        result.timing_ = timing_;
      } else {
        result.timing_ = timingBuilder_.build();
      }
      if (contextBuilder_ == null) {
        result.context_ = context_;
      } else {
        result.context_ = contextBuilder_.build();
      }
      if (signatureBuilder_ == null) {
        result.signature_ = signature_;
      } else {
        result.signature_ = signatureBuilder_.build();
      }
      result.uuid_ = uuid_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.services.telemetry.v1beta4.InventoryContext) {
        return mergeFrom((io.bloombox.schema.services.telemetry.v1beta4.InventoryContext)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta4.InventoryContext other) {
      if (other == io.bloombox.schema.services.telemetry.v1beta4.InventoryContext.getDefaultInstance()) return this;
      if (other.hasTiming()) {
        mergeTiming(other.getTiming());
      }
      if (other.hasContext()) {
        mergeContext(other.getContext());
      }
      if (other.hasSignature()) {
        mergeSignature(other.getSignature());
      }
      if (!other.getUuid().isEmpty()) {
        uuid_ = other.uuid_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.services.telemetry.v1beta4.InventoryContext parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.services.telemetry.v1beta4.InventoryContext) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.bloombox.schema.telemetry.AnalyticsContext.EventPosition timing_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.telemetry.AnalyticsContext.EventPosition, io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.Builder, io.bloombox.schema.telemetry.AnalyticsContext.EventPositionOrBuilder> timingBuilder_;
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    public boolean hasTiming() {
      return timingBuilder_ != null || timing_ != null;
    }
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.EventPosition getTiming() {
      if (timingBuilder_ == null) {
        return timing_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.getDefaultInstance() : timing_;
      } else {
        return timingBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    public Builder setTiming(io.bloombox.schema.telemetry.AnalyticsContext.EventPosition value) {
      if (timingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timing_ = value;
        onChanged();
      } else {
        timingBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    public Builder setTiming(
        io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.Builder builderForValue) {
      if (timingBuilder_ == null) {
        timing_ = builderForValue.build();
        onChanged();
      } else {
        timingBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    public Builder mergeTiming(io.bloombox.schema.telemetry.AnalyticsContext.EventPosition value) {
      if (timingBuilder_ == null) {
        if (timing_ != null) {
          timing_ =
            io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.newBuilder(timing_).mergeFrom(value).buildPartial();
        } else {
          timing_ = value;
        }
        onChanged();
      } else {
        timingBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    public Builder clearTiming() {
      if (timingBuilder_ == null) {
        timing_ = null;
        onChanged();
      } else {
        timing_ = null;
        timingBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.Builder getTimingBuilder() {
      
      onChanged();
      return getTimingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.EventPositionOrBuilder getTimingOrBuilder() {
      if (timingBuilder_ != null) {
        return timingBuilder_.getMessageOrBuilder();
      } else {
        return timing_ == null ?
            io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.getDefaultInstance() : timing_;
      }
    }
    /**
     * <pre>
     * Timing of this event, or, the position of this event in temporal space.
     * </pre>
     *
     * <code>.bloombox.analytics.EventPosition timing = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.telemetry.AnalyticsContext.EventPosition, io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.Builder, io.bloombox.schema.telemetry.AnalyticsContext.EventPositionOrBuilder> 
        getTimingFieldBuilder() {
      if (timingBuilder_ == null) {
        timingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.telemetry.AnalyticsContext.EventPosition, io.bloombox.schema.telemetry.AnalyticsContext.EventPosition.Builder, io.bloombox.schema.telemetry.AnalyticsContext.EventPositionOrBuilder>(
                getTiming(),
                getParentForChildren(),
                isClean());
        timing_ = null;
      }
      return timingBuilder_;
    }

    private io.bloombox.schema.telemetry.AnalyticsContext.Context context_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> contextBuilder_;
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    public boolean hasContext() {
      return contextBuilder_ != null || context_ != null;
    }
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
      if (contextBuilder_ == null) {
        return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
      } else {
        return contextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    public Builder setContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
      if (contextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        context_ = value;
        onChanged();
      } else {
        contextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    public Builder setContext(
        io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder builderForValue) {
      if (contextBuilder_ == null) {
        context_ = builderForValue.build();
        onChanged();
      } else {
        contextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    public Builder mergeContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
      if (contextBuilder_ == null) {
        if (context_ != null) {
          context_ =
            io.bloombox.schema.telemetry.AnalyticsContext.Context.newBuilder(context_).mergeFrom(value).buildPartial();
        } else {
          context_ = value;
        }
        onChanged();
      } else {
        contextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    public Builder clearContext() {
      if (contextBuilder_ == null) {
        context_ = null;
        onChanged();
      } else {
        context_ = null;
        contextBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder getContextBuilder() {
      
      onChanged();
      return getContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
      if (contextBuilder_ != null) {
        return contextBuilder_.getMessageOrBuilder();
      } else {
        return context_ == null ?
            io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
      }
    }
    /**
     * <pre>
     * Context of this event, including the scope and reporting node.
     * </pre>
     *
     * <code>.bloombox.analytics.Context context = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> 
        getContextFieldBuilder() {
      if (contextBuilder_ == null) {
        contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder>(
                getContext(),
                getParentForChildren(),
                isClean());
        context_ = null;
      }
      return contextBuilder_;
    }

    private io.opencannabis.schema.crypto.Signature signature_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.crypto.Signature, io.opencannabis.schema.crypto.Signature.Builder, io.opencannabis.schema.crypto.SignatureOrBuilder> signatureBuilder_;
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    public boolean hasSignature() {
      return signatureBuilder_ != null || signature_ != null;
    }
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    public io.opencannabis.schema.crypto.Signature getSignature() {
      if (signatureBuilder_ == null) {
        return signature_ == null ? io.opencannabis.schema.crypto.Signature.getDefaultInstance() : signature_;
      } else {
        return signatureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    public Builder setSignature(io.opencannabis.schema.crypto.Signature value) {
      if (signatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        signature_ = value;
        onChanged();
      } else {
        signatureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    public Builder setSignature(
        io.opencannabis.schema.crypto.Signature.Builder builderForValue) {
      if (signatureBuilder_ == null) {
        signature_ = builderForValue.build();
        onChanged();
      } else {
        signatureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    public Builder mergeSignature(io.opencannabis.schema.crypto.Signature value) {
      if (signatureBuilder_ == null) {
        if (signature_ != null) {
          signature_ =
            io.opencannabis.schema.crypto.Signature.newBuilder(signature_).mergeFrom(value).buildPartial();
        } else {
          signature_ = value;
        }
        onChanged();
      } else {
        signatureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    public Builder clearSignature() {
      if (signatureBuilder_ == null) {
        signature_ = null;
        onChanged();
      } else {
        signature_ = null;
        signatureBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    public io.opencannabis.schema.crypto.Signature.Builder getSignatureBuilder() {
      
      onChanged();
      return getSignatureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    public io.opencannabis.schema.crypto.SignatureOrBuilder getSignatureOrBuilder() {
      if (signatureBuilder_ != null) {
        return signatureBuilder_.getMessageOrBuilder();
      } else {
        return signature_ == null ?
            io.opencannabis.schema.crypto.Signature.getDefaultInstance() : signature_;
      }
    }
    /**
     * <pre>
     * Cryptographic signature from the reporting managed device/node.
     * </pre>
     *
     * <code>.opencannabis.crypto.Signature signature = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencannabis.schema.crypto.Signature, io.opencannabis.schema.crypto.Signature.Builder, io.opencannabis.schema.crypto.SignatureOrBuilder> 
        getSignatureFieldBuilder() {
      if (signatureBuilder_ == null) {
        signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencannabis.schema.crypto.Signature, io.opencannabis.schema.crypto.Signature.Builder, io.opencannabis.schema.crypto.SignatureOrBuilder>(
                getSignature(),
                getParentForChildren(),
                isClean());
        signature_ = null;
      }
      return signatureBuilder_;
    }

    private java.lang.Object uuid_ = "";
    /**
     * <pre>
     * Unique event transmission ID, generated by the client.
     * </pre>
     *
     * <code>string uuid = 4;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uuid_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Unique event transmission ID, generated by the client.
     * </pre>
     *
     * <code>string uuid = 4;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Unique event transmission ID, generated by the client.
     * </pre>
     *
     * <code>string uuid = 4;</code>
     */
    public Builder setUuid(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      uuid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique event transmission ID, generated by the client.
     * </pre>
     *
     * <code>string uuid = 4;</code>
     */
    public Builder clearUuid() {
      
      uuid_ = getDefaultInstance().getUuid();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique event transmission ID, generated by the client.
     * </pre>
     *
     * <code>string uuid = 4;</code>
     */
    public Builder setUuidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      uuid_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bloombox.services.telemetry.v1beta4.InventoryContext)
  }

  // @@protoc_insertion_point(class_scope:bloombox.services.telemetry.v1beta4.InventoryContext)
  private static final io.bloombox.schema.services.telemetry.v1beta4.InventoryContext DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta4.InventoryContext();
  }

  public static io.bloombox.schema.services.telemetry.v1beta4.InventoryContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InventoryContext>
      PARSER = new com.google.protobuf.AbstractParser<InventoryContext>() {
    @java.lang.Override
    public InventoryContext parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new InventoryContext(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<InventoryContext> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InventoryContext> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.bloombox.schema.services.telemetry.v1beta4.InventoryContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

