// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telemetry/v1beta2/TelemetryService_Beta2.proto

package io.bloombox.schema.services.telemetry.v1beta2;

/**
 * <pre>
 * Specifies an event related to commercial services. This includes product events, section events, and order events.
 * </pre>
 *
 * Protobuf type {@code services.telemetry.v1beta2.CommercialEvent}
 */
public  final class CommercialEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:services.telemetry.v1beta2.CommercialEvent)
    CommercialEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CommercialEvent.newBuilder() to construct.
  private CommercialEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CommercialEvent() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CommercialEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.class, io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Builder.class);
  }

  public interface ImpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:services.telemetry.v1beta2.CommercialEvent.Impression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    boolean hasContext();
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.Context getContext();
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder();

    /**
     * <pre>
     * Impression event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
     */
    boolean hasSection();
    /**
     * <pre>
     * Impression event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.SectionImpression getSection();
    /**
     * <pre>
     * Impression event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.SectionImpressionOrBuilder getSectionOrBuilder();

    /**
     * <pre>
     * Impression event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
     */
    boolean hasProduct();
    /**
     * <pre>
     * Impression event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ProductImpression getProduct();
    /**
     * <pre>
     * Impression event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ProductImpressionOrBuilder getProductOrBuilder();

    /**
     * <pre>
     * Impression event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
     */
    boolean hasShop();
    /**
     * <pre>
     * Impression event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ShopImpression getShop();
    /**
     * <pre>
     * Impression event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ShopImpressionOrBuilder getShopOrBuilder();

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression.EventCase getEventCase();
  }
  /**
   * <pre>
   * Specifies an impression-type event.
   * </pre>
   *
   * Protobuf type {@code services.telemetry.v1beta2.CommercialEvent.Impression}
   */
  public  static final class Impression extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:services.telemetry.v1beta2.CommercialEvent.Impression)
      ImpressionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Impression.newBuilder() to construct.
    private Impression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Impression() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Impression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder subBuilder = null;
              if (context_ != null) {
                subBuilder = context_.toBuilder();
              }
              context_ = input.readMessage(io.bloombox.schema.telemetry.AnalyticsContext.Context.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(context_);
                context_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.Builder subBuilder = null;
              if (eventCase_ == 10) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 10;
              break;
            }
            case 90: {
              io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.Builder subBuilder = null;
              if (eventCase_ == 11) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 11;
              break;
            }
            case 98: {
              io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.Builder subBuilder = null;
              if (eventCase_ == 12) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 12;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Impression_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Impression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression.class, io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression.Builder.class);
    }

    private int eventCase_ = 0;
    private java.lang.Object event_;
    public enum EventCase
        implements com.google.protobuf.Internal.EnumLite {
      SECTION(10),
      PRODUCT(11),
      SHOP(12),
      EVENT_NOT_SET(0);
      private final int value;
      private EventCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventCase valueOf(int value) {
        return forNumber(value);
      }

      public static EventCase forNumber(int value) {
        switch (value) {
          case 10: return SECTION;
          case 11: return PRODUCT;
          case 12: return SHOP;
          case 0: return EVENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public EventCase
    getEventCase() {
      return EventCase.forNumber(
          eventCase_);
    }

    public static final int CONTEXT_FIELD_NUMBER = 1;
    private io.bloombox.schema.telemetry.AnalyticsContext.Context context_;
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    public boolean hasContext() {
      return context_ != null;
    }
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
      return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
    }
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
      return getContext();
    }

    public static final int SECTION_FIELD_NUMBER = 10;
    /**
     * <pre>
     * Impression event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
     */
    public boolean hasSection() {
      return eventCase_ == 10;
    }
    /**
     * <pre>
     * Impression event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.SectionImpression getSection() {
      if (eventCase_ == 10) {
         return (io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.getDefaultInstance();
    }
    /**
     * <pre>
     * Impression event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.SectionImpressionOrBuilder getSectionOrBuilder() {
      if (eventCase_ == 10) {
         return (io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.getDefaultInstance();
    }

    public static final int PRODUCT_FIELD_NUMBER = 11;
    /**
     * <pre>
     * Impression event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
     */
    public boolean hasProduct() {
      return eventCase_ == 11;
    }
    /**
     * <pre>
     * Impression event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ProductImpression getProduct() {
      if (eventCase_ == 11) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.getDefaultInstance();
    }
    /**
     * <pre>
     * Impression event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ProductImpressionOrBuilder getProductOrBuilder() {
      if (eventCase_ == 11) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.getDefaultInstance();
    }

    public static final int SHOP_FIELD_NUMBER = 12;
    /**
     * <pre>
     * Impression event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
     */
    public boolean hasShop() {
      return eventCase_ == 12;
    }
    /**
     * <pre>
     * Impression event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ShopImpression getShop() {
      if (eventCase_ == 12) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.getDefaultInstance();
    }
    /**
     * <pre>
     * Impression event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ShopImpressionOrBuilder getShopOrBuilder() {
      if (eventCase_ == 12) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (context_ != null) {
        output.writeMessage(1, getContext());
      }
      if (eventCase_ == 10) {
        output.writeMessage(10, (io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_);
      }
      if (eventCase_ == 11) {
        output.writeMessage(11, (io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_);
      }
      if (eventCase_ == 12) {
        output.writeMessage(12, (io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (context_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      if (eventCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_);
      }
      if (eventCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_);
      }
      if (eventCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression other = (io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression) obj;

      boolean result = true;
      result = result && (hasContext() == other.hasContext());
      if (hasContext()) {
        result = result && getContext()
            .equals(other.getContext());
      }
      result = result && getEventCase().equals(
          other.getEventCase());
      if (!result) return false;
      switch (eventCase_) {
        case 10:
          result = result && getSection()
              .equals(other.getSection());
          break;
        case 11:
          result = result && getProduct()
              .equals(other.getProduct());
          break;
        case 12:
          result = result && getShop()
              .equals(other.getShop());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasContext()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getContext().hashCode();
      }
      switch (eventCase_) {
        case 10:
          hash = (37 * hash) + SECTION_FIELD_NUMBER;
          hash = (53 * hash) + getSection().hashCode();
          break;
        case 11:
          hash = (37 * hash) + PRODUCT_FIELD_NUMBER;
          hash = (53 * hash) + getProduct().hashCode();
          break;
        case 12:
          hash = (37 * hash) + SHOP_FIELD_NUMBER;
          hash = (53 * hash) + getShop().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies an impression-type event.
     * </pre>
     *
     * Protobuf type {@code services.telemetry.v1beta2.CommercialEvent.Impression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:services.telemetry.v1beta2.CommercialEvent.Impression)
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.ImpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Impression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Impression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression.class, io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression.Builder.class);
      }

      // Construct using io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (contextBuilder_ == null) {
          context_ = null;
        } else {
          context_ = null;
          contextBuilder_ = null;
        }
        eventCase_ = 0;
        event_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Impression_descriptor;
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression getDefaultInstanceForType() {
        return io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression.getDefaultInstance();
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression build() {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression buildPartial() {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression result = new io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression(this);
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        if (eventCase_ == 10) {
          if (sectionBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = sectionBuilder_.build();
          }
        }
        if (eventCase_ == 11) {
          if (productBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = productBuilder_.build();
          }
        }
        if (eventCase_ == 12) {
          if (shopBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = shopBuilder_.build();
          }
        }
        result.eventCase_ = eventCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression) {
          return mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression other) {
        if (other == io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        switch (other.getEventCase()) {
          case SECTION: {
            mergeSection(other.getSection());
            break;
          }
          case PRODUCT: {
            mergeProduct(other.getProduct());
            break;
          }
          case SHOP: {
            mergeShop(other.getShop());
            break;
          }
          case EVENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int eventCase_ = 0;
      private java.lang.Object event_;
      public EventCase
          getEventCase() {
        return EventCase.forNumber(
            eventCase_);
      }

      public Builder clearEvent() {
        eventCase_ = 0;
        event_ = null;
        onChanged();
        return this;
      }


      private io.bloombox.schema.telemetry.AnalyticsContext.Context context_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> contextBuilder_;
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public boolean hasContext() {
        return contextBuilder_ != null || context_ != null;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
        if (contextBuilder_ == null) {
          return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public Builder setContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public Builder setContext(
          io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public Builder mergeContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (context_ != null) {
            context_ =
              io.bloombox.schema.telemetry.AnalyticsContext.Context.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = null;
          onChanged();
        } else {
          context_ = null;
          contextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder getContextBuilder() {
        
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_ == null ?
              io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        }
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder>(
                  getContext(),
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.SectionImpression, io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionImpressionOrBuilder> sectionBuilder_;
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      public boolean hasSection() {
        return eventCase_ == 10;
      }
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionImpression getSection() {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10) {
            return (io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.getDefaultInstance();
        } else {
          if (eventCase_ == 10) {
            return sectionBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      public Builder setSection(io.bloombox.schema.services.telemetry.v1beta2.SectionImpression value) {
        if (sectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          sectionBuilder_.setMessage(value);
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      public Builder setSection(
          io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.Builder builderForValue) {
        if (sectionBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          sectionBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      public Builder mergeSection(io.bloombox.schema.services.telemetry.v1beta2.SectionImpression value) {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 10) {
            sectionBuilder_.mergeFrom(value);
          }
          sectionBuilder_.setMessage(value);
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      public Builder clearSection() {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 10) {
            eventCase_ = 0;
            event_ = null;
          }
          sectionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.Builder getSectionBuilder() {
        return getSectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionImpressionOrBuilder getSectionOrBuilder() {
        if ((eventCase_ == 10) && (sectionBuilder_ != null)) {
          return sectionBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 10) {
            return (io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Impression event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionImpression section = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.SectionImpression, io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionImpressionOrBuilder> 
          getSectionFieldBuilder() {
        if (sectionBuilder_ == null) {
          if (!(eventCase_ == 10)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.getDefaultInstance();
          }
          sectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.SectionImpression, io.bloombox.schema.services.telemetry.v1beta2.SectionImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionImpressionOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.SectionImpression) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 10;
        onChanged();;
        return sectionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ProductImpression, io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductImpressionOrBuilder> productBuilder_;
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      public boolean hasProduct() {
        return eventCase_ == 11;
      }
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductImpression getProduct() {
        if (productBuilder_ == null) {
          if (eventCase_ == 11) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.getDefaultInstance();
        } else {
          if (eventCase_ == 11) {
            return productBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      public Builder setProduct(io.bloombox.schema.services.telemetry.v1beta2.ProductImpression value) {
        if (productBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          productBuilder_.setMessage(value);
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      public Builder setProduct(
          io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.Builder builderForValue) {
        if (productBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          productBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      public Builder mergeProduct(io.bloombox.schema.services.telemetry.v1beta2.ProductImpression value) {
        if (productBuilder_ == null) {
          if (eventCase_ == 11 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 11) {
            productBuilder_.mergeFrom(value);
          }
          productBuilder_.setMessage(value);
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      public Builder clearProduct() {
        if (productBuilder_ == null) {
          if (eventCase_ == 11) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 11) {
            eventCase_ = 0;
            event_ = null;
          }
          productBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.Builder getProductBuilder() {
        return getProductFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductImpressionOrBuilder getProductOrBuilder() {
        if ((eventCase_ == 11) && (productBuilder_ != null)) {
          return productBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 11) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Impression event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductImpression product = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ProductImpression, io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductImpressionOrBuilder> 
          getProductFieldBuilder() {
        if (productBuilder_ == null) {
          if (!(eventCase_ == 11)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.getDefaultInstance();
          }
          productBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.ProductImpression, io.bloombox.schema.services.telemetry.v1beta2.ProductImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductImpressionOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.ProductImpression) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 11;
        onChanged();;
        return productBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ShopImpression, io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopImpressionOrBuilder> shopBuilder_;
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      public boolean hasShop() {
        return eventCase_ == 12;
      }
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopImpression getShop() {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.getDefaultInstance();
        } else {
          if (eventCase_ == 12) {
            return shopBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      public Builder setShop(io.bloombox.schema.services.telemetry.v1beta2.ShopImpression value) {
        if (shopBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          shopBuilder_.setMessage(value);
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      public Builder setShop(
          io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.Builder builderForValue) {
        if (shopBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          shopBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      public Builder mergeShop(io.bloombox.schema.services.telemetry.v1beta2.ShopImpression value) {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 12) {
            shopBuilder_.mergeFrom(value);
          }
          shopBuilder_.setMessage(value);
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      public Builder clearShop() {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 12) {
            eventCase_ = 0;
            event_ = null;
          }
          shopBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.Builder getShopBuilder() {
        return getShopFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopImpressionOrBuilder getShopOrBuilder() {
        if ((eventCase_ == 12) && (shopBuilder_ != null)) {
          return shopBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 12) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Impression event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopImpression shop = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ShopImpression, io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopImpressionOrBuilder> 
          getShopFieldBuilder() {
        if (shopBuilder_ == null) {
          if (!(eventCase_ == 12)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.getDefaultInstance();
          }
          shopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.ShopImpression, io.bloombox.schema.services.telemetry.v1beta2.ShopImpression.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopImpressionOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.ShopImpression) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 12;
        onChanged();;
        return shopBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:services.telemetry.v1beta2.CommercialEvent.Impression)
    }

    // @@protoc_insertion_point(class_scope:services.telemetry.v1beta2.CommercialEvent.Impression)
    private static final io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression();
    }

    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Impression>
        PARSER = new com.google.protobuf.AbstractParser<Impression>() {
      public Impression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Impression(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Impression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Impression> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Impression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ViewOrBuilder extends
      // @@protoc_insertion_point(interface_extends:services.telemetry.v1beta2.CommercialEvent.View)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    boolean hasContext();
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.Context getContext();
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder();

    /**
     * <pre>
     * View event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
     */
    boolean hasSection();
    /**
     * <pre>
     * View event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.SectionView getSection();
    /**
     * <pre>
     * View event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.SectionViewOrBuilder getSectionOrBuilder();

    /**
     * <pre>
     * View event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
     */
    boolean hasProduct();
    /**
     * <pre>
     * View event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ProductView getProduct();
    /**
     * <pre>
     * View event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ProductViewOrBuilder getProductOrBuilder();

    /**
     * <pre>
     * View event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
     */
    boolean hasShop();
    /**
     * <pre>
     * View event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ShopView getShop();
    /**
     * <pre>
     * View event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ShopViewOrBuilder getShopOrBuilder();

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View.EventCase getEventCase();
  }
  /**
   * <pre>
   * Specifies a view-type event.
   * </pre>
   *
   * Protobuf type {@code services.telemetry.v1beta2.CommercialEvent.View}
   */
  public  static final class View extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:services.telemetry.v1beta2.CommercialEvent.View)
      ViewOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use View.newBuilder() to construct.
    private View(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private View() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private View(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder subBuilder = null;
              if (context_ != null) {
                subBuilder = context_.toBuilder();
              }
              context_ = input.readMessage(io.bloombox.schema.telemetry.AnalyticsContext.Context.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(context_);
                context_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              io.bloombox.schema.services.telemetry.v1beta2.SectionView.Builder subBuilder = null;
              if (eventCase_ == 10) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.SectionView.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 10;
              break;
            }
            case 90: {
              io.bloombox.schema.services.telemetry.v1beta2.ProductView.Builder subBuilder = null;
              if (eventCase_ == 11) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.ProductView.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 11;
              break;
            }
            case 98: {
              io.bloombox.schema.services.telemetry.v1beta2.ShopView.Builder subBuilder = null;
              if (eventCase_ == 12) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.ShopView.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 12;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_View_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_View_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View.class, io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View.Builder.class);
    }

    private int eventCase_ = 0;
    private java.lang.Object event_;
    public enum EventCase
        implements com.google.protobuf.Internal.EnumLite {
      SECTION(10),
      PRODUCT(11),
      SHOP(12),
      EVENT_NOT_SET(0);
      private final int value;
      private EventCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventCase valueOf(int value) {
        return forNumber(value);
      }

      public static EventCase forNumber(int value) {
        switch (value) {
          case 10: return SECTION;
          case 11: return PRODUCT;
          case 12: return SHOP;
          case 0: return EVENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public EventCase
    getEventCase() {
      return EventCase.forNumber(
          eventCase_);
    }

    public static final int CONTEXT_FIELD_NUMBER = 1;
    private io.bloombox.schema.telemetry.AnalyticsContext.Context context_;
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    public boolean hasContext() {
      return context_ != null;
    }
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
      return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
    }
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 1;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
      return getContext();
    }

    public static final int SECTION_FIELD_NUMBER = 10;
    /**
     * <pre>
     * View event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
     */
    public boolean hasSection() {
      return eventCase_ == 10;
    }
    /**
     * <pre>
     * View event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.SectionView getSection() {
      if (eventCase_ == 10) {
         return (io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.SectionView.getDefaultInstance();
    }
    /**
     * <pre>
     * View event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.SectionViewOrBuilder getSectionOrBuilder() {
      if (eventCase_ == 10) {
         return (io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.SectionView.getDefaultInstance();
    }

    public static final int PRODUCT_FIELD_NUMBER = 11;
    /**
     * <pre>
     * View event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
     */
    public boolean hasProduct() {
      return eventCase_ == 11;
    }
    /**
     * <pre>
     * View event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ProductView getProduct() {
      if (eventCase_ == 11) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ProductView.getDefaultInstance();
    }
    /**
     * <pre>
     * View event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ProductViewOrBuilder getProductOrBuilder() {
      if (eventCase_ == 11) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ProductView.getDefaultInstance();
    }

    public static final int SHOP_FIELD_NUMBER = 12;
    /**
     * <pre>
     * View event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
     */
    public boolean hasShop() {
      return eventCase_ == 12;
    }
    /**
     * <pre>
     * View event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ShopView getShop() {
      if (eventCase_ == 12) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ShopView.getDefaultInstance();
    }
    /**
     * <pre>
     * View event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ShopViewOrBuilder getShopOrBuilder() {
      if (eventCase_ == 12) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ShopView.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (context_ != null) {
        output.writeMessage(1, getContext());
      }
      if (eventCase_ == 10) {
        output.writeMessage(10, (io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_);
      }
      if (eventCase_ == 11) {
        output.writeMessage(11, (io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_);
      }
      if (eventCase_ == 12) {
        output.writeMessage(12, (io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (context_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      if (eventCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_);
      }
      if (eventCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_);
      }
      if (eventCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View other = (io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View) obj;

      boolean result = true;
      result = result && (hasContext() == other.hasContext());
      if (hasContext()) {
        result = result && getContext()
            .equals(other.getContext());
      }
      result = result && getEventCase().equals(
          other.getEventCase());
      if (!result) return false;
      switch (eventCase_) {
        case 10:
          result = result && getSection()
              .equals(other.getSection());
          break;
        case 11:
          result = result && getProduct()
              .equals(other.getProduct());
          break;
        case 12:
          result = result && getShop()
              .equals(other.getShop());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasContext()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getContext().hashCode();
      }
      switch (eventCase_) {
        case 10:
          hash = (37 * hash) + SECTION_FIELD_NUMBER;
          hash = (53 * hash) + getSection().hashCode();
          break;
        case 11:
          hash = (37 * hash) + PRODUCT_FIELD_NUMBER;
          hash = (53 * hash) + getProduct().hashCode();
          break;
        case 12:
          hash = (37 * hash) + SHOP_FIELD_NUMBER;
          hash = (53 * hash) + getShop().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a view-type event.
     * </pre>
     *
     * Protobuf type {@code services.telemetry.v1beta2.CommercialEvent.View}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:services.telemetry.v1beta2.CommercialEvent.View)
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.ViewOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_View_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_View_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View.class, io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View.Builder.class);
      }

      // Construct using io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (contextBuilder_ == null) {
          context_ = null;
        } else {
          context_ = null;
          contextBuilder_ = null;
        }
        eventCase_ = 0;
        event_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_View_descriptor;
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View getDefaultInstanceForType() {
        return io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View.getDefaultInstance();
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View build() {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View buildPartial() {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View result = new io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View(this);
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        if (eventCase_ == 10) {
          if (sectionBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = sectionBuilder_.build();
          }
        }
        if (eventCase_ == 11) {
          if (productBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = productBuilder_.build();
          }
        }
        if (eventCase_ == 12) {
          if (shopBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = shopBuilder_.build();
          }
        }
        result.eventCase_ = eventCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View) {
          return mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View other) {
        if (other == io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        switch (other.getEventCase()) {
          case SECTION: {
            mergeSection(other.getSection());
            break;
          }
          case PRODUCT: {
            mergeProduct(other.getProduct());
            break;
          }
          case SHOP: {
            mergeShop(other.getShop());
            break;
          }
          case EVENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int eventCase_ = 0;
      private java.lang.Object event_;
      public EventCase
          getEventCase() {
        return EventCase.forNumber(
            eventCase_);
      }

      public Builder clearEvent() {
        eventCase_ = 0;
        event_ = null;
        onChanged();
        return this;
      }


      private io.bloombox.schema.telemetry.AnalyticsContext.Context context_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> contextBuilder_;
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public boolean hasContext() {
        return contextBuilder_ != null || context_ != null;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
        if (contextBuilder_ == null) {
          return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public Builder setContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public Builder setContext(
          io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public Builder mergeContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (context_ != null) {
            context_ =
              io.bloombox.schema.telemetry.AnalyticsContext.Context.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = null;
          onChanged();
        } else {
          context_ = null;
          contextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder getContextBuilder() {
        
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_ == null ?
              io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        }
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder>(
                  getContext(),
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.SectionView, io.bloombox.schema.services.telemetry.v1beta2.SectionView.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionViewOrBuilder> sectionBuilder_;
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      public boolean hasSection() {
        return eventCase_ == 10;
      }
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionView getSection() {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10) {
            return (io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionView.getDefaultInstance();
        } else {
          if (eventCase_ == 10) {
            return sectionBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionView.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      public Builder setSection(io.bloombox.schema.services.telemetry.v1beta2.SectionView value) {
        if (sectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          sectionBuilder_.setMessage(value);
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      public Builder setSection(
          io.bloombox.schema.services.telemetry.v1beta2.SectionView.Builder builderForValue) {
        if (sectionBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          sectionBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      public Builder mergeSection(io.bloombox.schema.services.telemetry.v1beta2.SectionView value) {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.SectionView.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.SectionView.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 10) {
            sectionBuilder_.mergeFrom(value);
          }
          sectionBuilder_.setMessage(value);
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      public Builder clearSection() {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 10) {
            eventCase_ = 0;
            event_ = null;
          }
          sectionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionView.Builder getSectionBuilder() {
        return getSectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionViewOrBuilder getSectionOrBuilder() {
        if ((eventCase_ == 10) && (sectionBuilder_ != null)) {
          return sectionBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 10) {
            return (io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionView.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * View event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionView section = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.SectionView, io.bloombox.schema.services.telemetry.v1beta2.SectionView.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionViewOrBuilder> 
          getSectionFieldBuilder() {
        if (sectionBuilder_ == null) {
          if (!(eventCase_ == 10)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.SectionView.getDefaultInstance();
          }
          sectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.SectionView, io.bloombox.schema.services.telemetry.v1beta2.SectionView.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionViewOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.SectionView) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 10;
        onChanged();;
        return sectionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ProductView, io.bloombox.schema.services.telemetry.v1beta2.ProductView.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductViewOrBuilder> productBuilder_;
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      public boolean hasProduct() {
        return eventCase_ == 11;
      }
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductView getProduct() {
        if (productBuilder_ == null) {
          if (eventCase_ == 11) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductView.getDefaultInstance();
        } else {
          if (eventCase_ == 11) {
            return productBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductView.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      public Builder setProduct(io.bloombox.schema.services.telemetry.v1beta2.ProductView value) {
        if (productBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          productBuilder_.setMessage(value);
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      public Builder setProduct(
          io.bloombox.schema.services.telemetry.v1beta2.ProductView.Builder builderForValue) {
        if (productBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          productBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      public Builder mergeProduct(io.bloombox.schema.services.telemetry.v1beta2.ProductView value) {
        if (productBuilder_ == null) {
          if (eventCase_ == 11 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.ProductView.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ProductView.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 11) {
            productBuilder_.mergeFrom(value);
          }
          productBuilder_.setMessage(value);
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      public Builder clearProduct() {
        if (productBuilder_ == null) {
          if (eventCase_ == 11) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 11) {
            eventCase_ = 0;
            event_ = null;
          }
          productBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductView.Builder getProductBuilder() {
        return getProductFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductViewOrBuilder getProductOrBuilder() {
        if ((eventCase_ == 11) && (productBuilder_ != null)) {
          return productBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 11) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductView.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * View event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductView product = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ProductView, io.bloombox.schema.services.telemetry.v1beta2.ProductView.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductViewOrBuilder> 
          getProductFieldBuilder() {
        if (productBuilder_ == null) {
          if (!(eventCase_ == 11)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ProductView.getDefaultInstance();
          }
          productBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.ProductView, io.bloombox.schema.services.telemetry.v1beta2.ProductView.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductViewOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.ProductView) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 11;
        onChanged();;
        return productBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ShopView, io.bloombox.schema.services.telemetry.v1beta2.ShopView.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopViewOrBuilder> shopBuilder_;
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      public boolean hasShop() {
        return eventCase_ == 12;
      }
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopView getShop() {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopView.getDefaultInstance();
        } else {
          if (eventCase_ == 12) {
            return shopBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopView.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      public Builder setShop(io.bloombox.schema.services.telemetry.v1beta2.ShopView value) {
        if (shopBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          shopBuilder_.setMessage(value);
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      public Builder setShop(
          io.bloombox.schema.services.telemetry.v1beta2.ShopView.Builder builderForValue) {
        if (shopBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          shopBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      public Builder mergeShop(io.bloombox.schema.services.telemetry.v1beta2.ShopView value) {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.ShopView.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ShopView.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 12) {
            shopBuilder_.mergeFrom(value);
          }
          shopBuilder_.setMessage(value);
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      public Builder clearShop() {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 12) {
            eventCase_ = 0;
            event_ = null;
          }
          shopBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopView.Builder getShopBuilder() {
        return getShopFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopViewOrBuilder getShopOrBuilder() {
        if ((eventCase_ == 12) && (shopBuilder_ != null)) {
          return shopBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 12) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopView.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * View event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopView shop = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ShopView, io.bloombox.schema.services.telemetry.v1beta2.ShopView.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopViewOrBuilder> 
          getShopFieldBuilder() {
        if (shopBuilder_ == null) {
          if (!(eventCase_ == 12)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ShopView.getDefaultInstance();
          }
          shopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.ShopView, io.bloombox.schema.services.telemetry.v1beta2.ShopView.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopViewOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.ShopView) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 12;
        onChanged();;
        return shopBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:services.telemetry.v1beta2.CommercialEvent.View)
    }

    // @@protoc_insertion_point(class_scope:services.telemetry.v1beta2.CommercialEvent.View)
    private static final io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View();
    }

    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<View>
        PARSER = new com.google.protobuf.AbstractParser<View>() {
      public View parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new View(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<View> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<View> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.View getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:services.telemetry.v1beta2.CommercialEvent.Action)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 2;</code>
     */
    boolean hasContext();
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 2;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.Context getContext();
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 2;</code>
     */
    io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder();

    /**
     * <pre>
     * Action event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
     */
    boolean hasSection();
    /**
     * <pre>
     * Action event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.SectionAction getSection();
    /**
     * <pre>
     * Action event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.SectionActionOrBuilder getSectionOrBuilder();

    /**
     * <pre>
     * Action event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
     */
    boolean hasProduct();
    /**
     * <pre>
     * Action event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ProductAction getProduct();
    /**
     * <pre>
     * Action event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ProductActionOrBuilder getProductOrBuilder();

    /**
     * <pre>
     * Action event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
     */
    boolean hasShop();
    /**
     * <pre>
     * Action event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ShopAction getShop();
    /**
     * <pre>
     * Action event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.ShopActionOrBuilder getShopOrBuilder();

    /**
     * <pre>
     * Action event on a user order.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
     */
    boolean hasOrder();
    /**
     * <pre>
     * Action event on a user order.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.OrderAction getOrder();
    /**
     * <pre>
     * Action event on a user order.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
     */
    io.bloombox.schema.services.telemetry.v1beta2.OrderActionOrBuilder getOrderOrBuilder();

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action.EventCase getEventCase();
  }
  /**
   * <pre>
   * Specifies an action-type event.
   * </pre>
   *
   * Protobuf type {@code services.telemetry.v1beta2.CommercialEvent.Action}
   */
  public  static final class Action extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:services.telemetry.v1beta2.CommercialEvent.Action)
      ActionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Action.newBuilder() to construct.
    private Action(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Action() {
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Action(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder subBuilder = null;
              if (context_ != null) {
                subBuilder = context_.toBuilder();
              }
              context_ = input.readMessage(io.bloombox.schema.telemetry.AnalyticsContext.Context.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(context_);
                context_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              io.bloombox.schema.services.telemetry.v1beta2.SectionAction.Builder subBuilder = null;
              if (eventCase_ == 10) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.SectionAction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 10;
              break;
            }
            case 90: {
              io.bloombox.schema.services.telemetry.v1beta2.ProductAction.Builder subBuilder = null;
              if (eventCase_ == 11) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.ProductAction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 11;
              break;
            }
            case 98: {
              io.bloombox.schema.services.telemetry.v1beta2.ShopAction.Builder subBuilder = null;
              if (eventCase_ == 12) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.ShopAction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 12;
              break;
            }
            case 106: {
              io.bloombox.schema.services.telemetry.v1beta2.OrderAction.Builder subBuilder = null;
              if (eventCase_ == 13) {
                subBuilder = ((io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_).toBuilder();
              }
              event_ =
                  input.readMessage(io.bloombox.schema.services.telemetry.v1beta2.OrderAction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 13;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Action_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Action_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action.class, io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action.Builder.class);
    }

    private int eventCase_ = 0;
    private java.lang.Object event_;
    public enum EventCase
        implements com.google.protobuf.Internal.EnumLite {
      SECTION(10),
      PRODUCT(11),
      SHOP(12),
      ORDER(13),
      EVENT_NOT_SET(0);
      private final int value;
      private EventCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventCase valueOf(int value) {
        return forNumber(value);
      }

      public static EventCase forNumber(int value) {
        switch (value) {
          case 10: return SECTION;
          case 11: return PRODUCT;
          case 12: return SHOP;
          case 13: return ORDER;
          case 0: return EVENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public EventCase
    getEventCase() {
      return EventCase.forNumber(
          eventCase_);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTEXT_FIELD_NUMBER = 2;
    private io.bloombox.schema.telemetry.AnalyticsContext.Context context_;
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 2;</code>
     */
    public boolean hasContext() {
      return context_ != null;
    }
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
      return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
    }
    /**
     * <pre>
     * Event context to specify for this event.
     * </pre>
     *
     * <code>.analytics.Context context = 2;</code>
     */
    public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
      return getContext();
    }

    public static final int SECTION_FIELD_NUMBER = 10;
    /**
     * <pre>
     * Action event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
     */
    public boolean hasSection() {
      return eventCase_ == 10;
    }
    /**
     * <pre>
     * Action event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.SectionAction getSection() {
      if (eventCase_ == 10) {
         return (io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.SectionAction.getDefaultInstance();
    }
    /**
     * <pre>
     * Action event on a menu section.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.SectionActionOrBuilder getSectionOrBuilder() {
      if (eventCase_ == 10) {
         return (io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.SectionAction.getDefaultInstance();
    }

    public static final int PRODUCT_FIELD_NUMBER = 11;
    /**
     * <pre>
     * Action event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
     */
    public boolean hasProduct() {
      return eventCase_ == 11;
    }
    /**
     * <pre>
     * Action event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ProductAction getProduct() {
      if (eventCase_ == 11) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ProductAction.getDefaultInstance();
    }
    /**
     * <pre>
     * Action event on a menu product.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ProductActionOrBuilder getProductOrBuilder() {
      if (eventCase_ == 11) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ProductAction.getDefaultInstance();
    }

    public static final int SHOP_FIELD_NUMBER = 12;
    /**
     * <pre>
     * Action event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
     */
    public boolean hasShop() {
      return eventCase_ == 12;
    }
    /**
     * <pre>
     * Action event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ShopAction getShop() {
      if (eventCase_ == 12) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ShopAction.getDefaultInstance();
    }
    /**
     * <pre>
     * Action event for a commercial shop.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.ShopActionOrBuilder getShopOrBuilder() {
      if (eventCase_ == 12) {
         return (io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.ShopAction.getDefaultInstance();
    }

    public static final int ORDER_FIELD_NUMBER = 13;
    /**
     * <pre>
     * Action event on a user order.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
     */
    public boolean hasOrder() {
      return eventCase_ == 13;
    }
    /**
     * <pre>
     * Action event on a user order.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.OrderAction getOrder() {
      if (eventCase_ == 13) {
         return (io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.OrderAction.getDefaultInstance();
    }
    /**
     * <pre>
     * Action event on a user order.
     * </pre>
     *
     * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
     */
    public io.bloombox.schema.services.telemetry.v1beta2.OrderActionOrBuilder getOrderOrBuilder() {
      if (eventCase_ == 13) {
         return (io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_;
      }
      return io.bloombox.schema.services.telemetry.v1beta2.OrderAction.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (context_ != null) {
        output.writeMessage(2, getContext());
      }
      if (eventCase_ == 10) {
        output.writeMessage(10, (io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_);
      }
      if (eventCase_ == 11) {
        output.writeMessage(11, (io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_);
      }
      if (eventCase_ == 12) {
        output.writeMessage(12, (io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_);
      }
      if (eventCase_ == 13) {
        output.writeMessage(13, (io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (context_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getContext());
      }
      if (eventCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_);
      }
      if (eventCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_);
      }
      if (eventCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_);
      }
      if (eventCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action)) {
        return super.equals(obj);
      }
      io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action other = (io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (hasContext() == other.hasContext());
      if (hasContext()) {
        result = result && getContext()
            .equals(other.getContext());
      }
      result = result && getEventCase().equals(
          other.getEventCase());
      if (!result) return false;
      switch (eventCase_) {
        case 10:
          result = result && getSection()
              .equals(other.getSection());
          break;
        case 11:
          result = result && getProduct()
              .equals(other.getProduct());
          break;
        case 12:
          result = result && getShop()
              .equals(other.getShop());
          break;
        case 13:
          result = result && getOrder()
              .equals(other.getOrder());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasContext()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getContext().hashCode();
      }
      switch (eventCase_) {
        case 10:
          hash = (37 * hash) + SECTION_FIELD_NUMBER;
          hash = (53 * hash) + getSection().hashCode();
          break;
        case 11:
          hash = (37 * hash) + PRODUCT_FIELD_NUMBER;
          hash = (53 * hash) + getProduct().hashCode();
          break;
        case 12:
          hash = (37 * hash) + SHOP_FIELD_NUMBER;
          hash = (53 * hash) + getShop().hashCode();
          break;
        case 13:
          hash = (37 * hash) + ORDER_FIELD_NUMBER;
          hash = (53 * hash) + getOrder().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies an action-type event.
     * </pre>
     *
     * Protobuf type {@code services.telemetry.v1beta2.CommercialEvent.Action}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:services.telemetry.v1beta2.CommercialEvent.Action)
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.ActionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Action_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Action_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action.class, io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action.Builder.class);
      }

      // Construct using io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (contextBuilder_ == null) {
          context_ = null;
        } else {
          context_ = null;
          contextBuilder_ = null;
        }
        eventCase_ = 0;
        event_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_Action_descriptor;
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action getDefaultInstanceForType() {
        return io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action.getDefaultInstance();
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action build() {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action buildPartial() {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action result = new io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action(this);
        result.name_ = name_;
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        if (eventCase_ == 10) {
          if (sectionBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = sectionBuilder_.build();
          }
        }
        if (eventCase_ == 11) {
          if (productBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = productBuilder_.build();
          }
        }
        if (eventCase_ == 12) {
          if (shopBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = shopBuilder_.build();
          }
        }
        if (eventCase_ == 13) {
          if (orderBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = orderBuilder_.build();
          }
        }
        result.eventCase_ = eventCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action) {
          return mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action other) {
        if (other == io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        switch (other.getEventCase()) {
          case SECTION: {
            mergeSection(other.getSection());
            break;
          }
          case PRODUCT: {
            mergeProduct(other.getProduct());
            break;
          }
          case SHOP: {
            mergeShop(other.getShop());
            break;
          }
          case ORDER: {
            mergeOrder(other.getOrder());
            break;
          }
          case EVENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int eventCase_ = 0;
      private java.lang.Object event_;
      public EventCase
          getEventCase() {
        return EventCase.forNumber(
            eventCase_);
      }

      public Builder clearEvent() {
        eventCase_ = 0;
        event_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name for the action being transmitted. This is the string enum name for whatever event type is in use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private io.bloombox.schema.telemetry.AnalyticsContext.Context context_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> contextBuilder_;
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      public boolean hasContext() {
        return contextBuilder_ != null || context_ != null;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context getContext() {
        if (contextBuilder_ == null) {
          return context_ == null ? io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      public Builder setContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      public Builder setContext(
          io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      public Builder mergeContext(io.bloombox.schema.telemetry.AnalyticsContext.Context value) {
        if (contextBuilder_ == null) {
          if (context_ != null) {
            context_ =
              io.bloombox.schema.telemetry.AnalyticsContext.Context.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = null;
          onChanged();
        } else {
          context_ = null;
          contextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder getContextBuilder() {
        
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      public io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_ == null ?
              io.bloombox.schema.telemetry.AnalyticsContext.Context.getDefaultInstance() : context_;
        }
      }
      /**
       * <pre>
       * Event context to specify for this event.
       * </pre>
       *
       * <code>.analytics.Context context = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.telemetry.AnalyticsContext.Context, io.bloombox.schema.telemetry.AnalyticsContext.Context.Builder, io.bloombox.schema.telemetry.AnalyticsContext.ContextOrBuilder>(
                  getContext(),
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.SectionAction, io.bloombox.schema.services.telemetry.v1beta2.SectionAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionActionOrBuilder> sectionBuilder_;
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      public boolean hasSection() {
        return eventCase_ == 10;
      }
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionAction getSection() {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10) {
            return (io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionAction.getDefaultInstance();
        } else {
          if (eventCase_ == 10) {
            return sectionBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionAction.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      public Builder setSection(io.bloombox.schema.services.telemetry.v1beta2.SectionAction value) {
        if (sectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          sectionBuilder_.setMessage(value);
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      public Builder setSection(
          io.bloombox.schema.services.telemetry.v1beta2.SectionAction.Builder builderForValue) {
        if (sectionBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          sectionBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      public Builder mergeSection(io.bloombox.schema.services.telemetry.v1beta2.SectionAction value) {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.SectionAction.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.SectionAction.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 10) {
            sectionBuilder_.mergeFrom(value);
          }
          sectionBuilder_.setMessage(value);
        }
        eventCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      public Builder clearSection() {
        if (sectionBuilder_ == null) {
          if (eventCase_ == 10) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 10) {
            eventCase_ = 0;
            event_ = null;
          }
          sectionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionAction.Builder getSectionBuilder() {
        return getSectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.SectionActionOrBuilder getSectionOrBuilder() {
        if ((eventCase_ == 10) && (sectionBuilder_ != null)) {
          return sectionBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 10) {
            return (io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.SectionAction.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Action event on a menu section.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.SectionAction section = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.SectionAction, io.bloombox.schema.services.telemetry.v1beta2.SectionAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionActionOrBuilder> 
          getSectionFieldBuilder() {
        if (sectionBuilder_ == null) {
          if (!(eventCase_ == 10)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.SectionAction.getDefaultInstance();
          }
          sectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.SectionAction, io.bloombox.schema.services.telemetry.v1beta2.SectionAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.SectionActionOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.SectionAction) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 10;
        onChanged();;
        return sectionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ProductAction, io.bloombox.schema.services.telemetry.v1beta2.ProductAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductActionOrBuilder> productBuilder_;
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      public boolean hasProduct() {
        return eventCase_ == 11;
      }
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductAction getProduct() {
        if (productBuilder_ == null) {
          if (eventCase_ == 11) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductAction.getDefaultInstance();
        } else {
          if (eventCase_ == 11) {
            return productBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductAction.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      public Builder setProduct(io.bloombox.schema.services.telemetry.v1beta2.ProductAction value) {
        if (productBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          productBuilder_.setMessage(value);
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      public Builder setProduct(
          io.bloombox.schema.services.telemetry.v1beta2.ProductAction.Builder builderForValue) {
        if (productBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          productBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      public Builder mergeProduct(io.bloombox.schema.services.telemetry.v1beta2.ProductAction value) {
        if (productBuilder_ == null) {
          if (eventCase_ == 11 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.ProductAction.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ProductAction.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 11) {
            productBuilder_.mergeFrom(value);
          }
          productBuilder_.setMessage(value);
        }
        eventCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      public Builder clearProduct() {
        if (productBuilder_ == null) {
          if (eventCase_ == 11) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 11) {
            eventCase_ = 0;
            event_ = null;
          }
          productBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductAction.Builder getProductBuilder() {
        return getProductFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ProductActionOrBuilder getProductOrBuilder() {
        if ((eventCase_ == 11) && (productBuilder_ != null)) {
          return productBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 11) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ProductAction.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Action event on a menu product.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ProductAction product = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ProductAction, io.bloombox.schema.services.telemetry.v1beta2.ProductAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductActionOrBuilder> 
          getProductFieldBuilder() {
        if (productBuilder_ == null) {
          if (!(eventCase_ == 11)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ProductAction.getDefaultInstance();
          }
          productBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.ProductAction, io.bloombox.schema.services.telemetry.v1beta2.ProductAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.ProductActionOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.ProductAction) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 11;
        onChanged();;
        return productBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ShopAction, io.bloombox.schema.services.telemetry.v1beta2.ShopAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopActionOrBuilder> shopBuilder_;
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      public boolean hasShop() {
        return eventCase_ == 12;
      }
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopAction getShop() {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopAction.getDefaultInstance();
        } else {
          if (eventCase_ == 12) {
            return shopBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopAction.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      public Builder setShop(io.bloombox.schema.services.telemetry.v1beta2.ShopAction value) {
        if (shopBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          shopBuilder_.setMessage(value);
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      public Builder setShop(
          io.bloombox.schema.services.telemetry.v1beta2.ShopAction.Builder builderForValue) {
        if (shopBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          shopBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      public Builder mergeShop(io.bloombox.schema.services.telemetry.v1beta2.ShopAction value) {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.ShopAction.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ShopAction.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 12) {
            shopBuilder_.mergeFrom(value);
          }
          shopBuilder_.setMessage(value);
        }
        eventCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      public Builder clearShop() {
        if (shopBuilder_ == null) {
          if (eventCase_ == 12) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 12) {
            eventCase_ = 0;
            event_ = null;
          }
          shopBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopAction.Builder getShopBuilder() {
        return getShopFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.ShopActionOrBuilder getShopOrBuilder() {
        if ((eventCase_ == 12) && (shopBuilder_ != null)) {
          return shopBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 12) {
            return (io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.ShopAction.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Action event for a commercial shop.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.ShopAction shop = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.ShopAction, io.bloombox.schema.services.telemetry.v1beta2.ShopAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopActionOrBuilder> 
          getShopFieldBuilder() {
        if (shopBuilder_ == null) {
          if (!(eventCase_ == 12)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.ShopAction.getDefaultInstance();
          }
          shopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.ShopAction, io.bloombox.schema.services.telemetry.v1beta2.ShopAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.ShopActionOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.ShopAction) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 12;
        onChanged();;
        return shopBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.OrderAction, io.bloombox.schema.services.telemetry.v1beta2.OrderAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.OrderActionOrBuilder> orderBuilder_;
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      public boolean hasOrder() {
        return eventCase_ == 13;
      }
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.OrderAction getOrder() {
        if (orderBuilder_ == null) {
          if (eventCase_ == 13) {
            return (io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.OrderAction.getDefaultInstance();
        } else {
          if (eventCase_ == 13) {
            return orderBuilder_.getMessage();
          }
          return io.bloombox.schema.services.telemetry.v1beta2.OrderAction.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      public Builder setOrder(io.bloombox.schema.services.telemetry.v1beta2.OrderAction value) {
        if (orderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          orderBuilder_.setMessage(value);
        }
        eventCase_ = 13;
        return this;
      }
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      public Builder setOrder(
          io.bloombox.schema.services.telemetry.v1beta2.OrderAction.Builder builderForValue) {
        if (orderBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          orderBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 13;
        return this;
      }
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      public Builder mergeOrder(io.bloombox.schema.services.telemetry.v1beta2.OrderAction value) {
        if (orderBuilder_ == null) {
          if (eventCase_ == 13 &&
              event_ != io.bloombox.schema.services.telemetry.v1beta2.OrderAction.getDefaultInstance()) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.OrderAction.newBuilder((io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 13) {
            orderBuilder_.mergeFrom(value);
          }
          orderBuilder_.setMessage(value);
        }
        eventCase_ = 13;
        return this;
      }
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      public Builder clearOrder() {
        if (orderBuilder_ == null) {
          if (eventCase_ == 13) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 13) {
            eventCase_ = 0;
            event_ = null;
          }
          orderBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.OrderAction.Builder getOrderBuilder() {
        return getOrderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      public io.bloombox.schema.services.telemetry.v1beta2.OrderActionOrBuilder getOrderOrBuilder() {
        if ((eventCase_ == 13) && (orderBuilder_ != null)) {
          return orderBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 13) {
            return (io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_;
          }
          return io.bloombox.schema.services.telemetry.v1beta2.OrderAction.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Action event on a user order.
       * </pre>
       *
       * <code>.services.telemetry.v1beta2.OrderAction order = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.services.telemetry.v1beta2.OrderAction, io.bloombox.schema.services.telemetry.v1beta2.OrderAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.OrderActionOrBuilder> 
          getOrderFieldBuilder() {
        if (orderBuilder_ == null) {
          if (!(eventCase_ == 13)) {
            event_ = io.bloombox.schema.services.telemetry.v1beta2.OrderAction.getDefaultInstance();
          }
          orderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.services.telemetry.v1beta2.OrderAction, io.bloombox.schema.services.telemetry.v1beta2.OrderAction.Builder, io.bloombox.schema.services.telemetry.v1beta2.OrderActionOrBuilder>(
                  (io.bloombox.schema.services.telemetry.v1beta2.OrderAction) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 13;
        onChanged();;
        return orderBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:services.telemetry.v1beta2.CommercialEvent.Action)
    }

    // @@protoc_insertion_point(class_scope:services.telemetry.v1beta2.CommercialEvent.Action)
    private static final io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action();
    }

    public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Action>
        PARSER = new com.google.protobuf.AbstractParser<Action>() {
      public Action parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Action(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Action> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Action> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Action getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent)) {
      return super.equals(obj);
    }
    io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent other = (io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent) obj;

    boolean result = true;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies an event related to commercial services. This includes product events, section events, and order events.
   * </pre>
   *
   * Protobuf type {@code services.telemetry.v1beta2.CommercialEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:services.telemetry.v1beta2.CommercialEvent)
      io.bloombox.schema.services.telemetry.v1beta2.CommercialEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.class, io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.Builder.class);
    }

    // Construct using io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.services.telemetry.v1beta2.TelemetryServiceBeta2.internal_static_services_telemetry_v1beta2_CommercialEvent_descriptor;
    }

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent getDefaultInstanceForType() {
      return io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.getDefaultInstance();
    }

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent build() {
      io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent buildPartial() {
      io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent result = new io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent(this);
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent) {
        return mergeFrom((io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent other) {
      if (other == io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:services.telemetry.v1beta2.CommercialEvent)
  }

  // @@protoc_insertion_point(class_scope:services.telemetry.v1beta2.CommercialEvent)
  private static final io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent();
  }

  public static io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CommercialEvent>
      PARSER = new com.google.protobuf.AbstractParser<CommercialEvent>() {
    public CommercialEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CommercialEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CommercialEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CommercialEvent> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.services.telemetry.v1beta2.CommercialEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

