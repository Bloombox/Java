/*
 * Copyright 2018, Bloombox, LLC. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Bloombox, a California Limited Liability Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: devices/v1beta1/DevicesService_Beta1.proto

package io.bloombox.schema.services.devices.v1beta1;

/**
 * <pre>
 * Describes endpoints a device should use, or is assigned to use, for different purposes - to include authentication,
 * authorization, API use, and direct database use.
 * </pre>
 *
 * Protobuf type {@code bloombox.schema.services.devices.v1beta1.DeviceEndpoints}
 */
public  final class DeviceEndpoints extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bloombox.schema.services.devices.v1beta1.DeviceEndpoints)
    DeviceEndpointsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DeviceEndpoints.newBuilder() to construct.
  private DeviceEndpoints(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DeviceEndpoints() {
    account_ = "";
    api_ = "";
    rpc_ = "";
    issuer_ = "";
    db_ = "";
    realtime_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DeviceEndpoints(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.Builder subBuilder = null;
            if (oauth2_ != null) {
              subBuilder = oauth2_.toBuilder();
            }
            oauth2_ = input.readMessage(io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(oauth2_);
              oauth2_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            account_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            api_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            rpc_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            issuer_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            db_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            realtime_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.services.devices.v1beta1.DevicesServiceBeta1.internal_static_bloombox_schema_services_devices_v1beta1_DeviceEndpoints_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.services.devices.v1beta1.DevicesServiceBeta1.internal_static_bloombox_schema_services_devices_v1beta1_DeviceEndpoints_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints.class, io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints.Builder.class);
  }

  public static final int OAUTH2_FIELD_NUMBER = 1;
  private io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2_;
  /**
   * <pre>
   * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
   * </pre>
   *
   * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
   */
  public boolean hasOauth2() {
    return oauth2_ != null;
  }
  /**
   * <pre>
   * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
   * </pre>
   *
   * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
   */
  public io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints getOauth2() {
    return oauth2_ == null ? io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.getDefaultInstance() : oauth2_;
  }
  /**
   * <pre>
   * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
   * </pre>
   *
   * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
   */
  public io.bloombox.schema.services.devices.v1beta1.OAuth2EndpointsOrBuilder getOauth2OrBuilder() {
    return getOauth2();
  }

  public static final int ACCOUNT_FIELD_NUMBER = 2;
  private volatile java.lang.Object account_;
  /**
   * <pre>
   * Link to login and account management.
   * </pre>
   *
   * <code>string account = 2;</code>
   */
  public java.lang.String getAccount() {
    java.lang.Object ref = account_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      account_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Link to login and account management.
   * </pre>
   *
   * <code>string account = 2;</code>
   */
  public com.google.protobuf.ByteString
      getAccountBytes() {
    java.lang.Object ref = account_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      account_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int API_FIELD_NUMBER = 3;
  private volatile java.lang.Object api_;
  /**
   * <pre>
   * Main API endpoint/host to make use of. Default value is "api.bloombox.cloud".
   * </pre>
   *
   * <code>string api = 3;</code>
   */
  public java.lang.String getApi() {
    java.lang.Object ref = api_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      api_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Main API endpoint/host to make use of. Default value is "api.bloombox.cloud".
   * </pre>
   *
   * <code>string api = 3;</code>
   */
  public com.google.protobuf.ByteString
      getApiBytes() {
    java.lang.Object ref = api_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      api_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RPC_FIELD_NUMBER = 4;
  private volatile java.lang.Object rpc_;
  /**
   * <pre>
   * RPC endpoint, for raw gRPC service use.
   * </pre>
   *
   * <code>string rpc = 4;</code>
   */
  public java.lang.String getRpc() {
    java.lang.Object ref = rpc_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      rpc_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * RPC endpoint, for raw gRPC service use.
   * </pre>
   *
   * <code>string rpc = 4;</code>
   */
  public com.google.protobuf.ByteString
      getRpcBytes() {
    java.lang.Object ref = rpc_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      rpc_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ISSUER_FIELD_NUMBER = 5;
  private volatile java.lang.Object issuer_;
  /**
   * <pre>
   * Issuer auth project name to use. Default value is "bloom-auth".
   * </pre>
   *
   * <code>string issuer = 5;</code>
   */
  public java.lang.String getIssuer() {
    java.lang.Object ref = issuer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      issuer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Issuer auth project name to use. Default value is "bloom-auth".
   * </pre>
   *
   * <code>string issuer = 5;</code>
   */
  public com.google.protobuf.ByteString
      getIssuerBytes() {
    java.lang.Object ref = issuer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      issuer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DB_FIELD_NUMBER = 6;
  private volatile java.lang.Object db_;
  /**
   * <pre>
   * Main database project name to use. Default value is "bloom-db".
   * </pre>
   *
   * <code>string db = 6;</code>
   */
  public java.lang.String getDb() {
    java.lang.Object ref = db_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      db_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Main database project name to use. Default value is "bloom-db".
   * </pre>
   *
   * <code>string db = 6;</code>
   */
  public com.google.protobuf.ByteString
      getDbBytes() {
    java.lang.Object ref = db_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      db_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REALTIME_FIELD_NUMBER = 7;
  private volatile java.lang.Object realtime_;
  /**
   * <pre>
   * Database project name to use. Default value is "bloombox-io".
   * </pre>
   *
   * <code>string realtime = 7;</code>
   */
  public java.lang.String getRealtime() {
    java.lang.Object ref = realtime_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      realtime_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Database project name to use. Default value is "bloombox-io".
   * </pre>
   *
   * <code>string realtime = 7;</code>
   */
  public com.google.protobuf.ByteString
      getRealtimeBytes() {
    java.lang.Object ref = realtime_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      realtime_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (oauth2_ != null) {
      output.writeMessage(1, getOauth2());
    }
    if (!getAccountBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, account_);
    }
    if (!getApiBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, api_);
    }
    if (!getRpcBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, rpc_);
    }
    if (!getIssuerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, issuer_);
    }
    if (!getDbBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, db_);
    }
    if (!getRealtimeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, realtime_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (oauth2_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getOauth2());
    }
    if (!getAccountBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, account_);
    }
    if (!getApiBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, api_);
    }
    if (!getRpcBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, rpc_);
    }
    if (!getIssuerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, issuer_);
    }
    if (!getDbBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, db_);
    }
    if (!getRealtimeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, realtime_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints)) {
      return super.equals(obj);
    }
    io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints other = (io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints) obj;

    boolean result = true;
    result = result && (hasOauth2() == other.hasOauth2());
    if (hasOauth2()) {
      result = result && getOauth2()
          .equals(other.getOauth2());
    }
    result = result && getAccount()
        .equals(other.getAccount());
    result = result && getApi()
        .equals(other.getApi());
    result = result && getRpc()
        .equals(other.getRpc());
    result = result && getIssuer()
        .equals(other.getIssuer());
    result = result && getDb()
        .equals(other.getDb());
    result = result && getRealtime()
        .equals(other.getRealtime());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOauth2()) {
      hash = (37 * hash) + OAUTH2_FIELD_NUMBER;
      hash = (53 * hash) + getOauth2().hashCode();
    }
    hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getAccount().hashCode();
    hash = (37 * hash) + API_FIELD_NUMBER;
    hash = (53 * hash) + getApi().hashCode();
    hash = (37 * hash) + RPC_FIELD_NUMBER;
    hash = (53 * hash) + getRpc().hashCode();
    hash = (37 * hash) + ISSUER_FIELD_NUMBER;
    hash = (53 * hash) + getIssuer().hashCode();
    hash = (37 * hash) + DB_FIELD_NUMBER;
    hash = (53 * hash) + getDb().hashCode();
    hash = (37 * hash) + REALTIME_FIELD_NUMBER;
    hash = (53 * hash) + getRealtime().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes endpoints a device should use, or is assigned to use, for different purposes - to include authentication,
   * authorization, API use, and direct database use.
   * </pre>
   *
   * Protobuf type {@code bloombox.schema.services.devices.v1beta1.DeviceEndpoints}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bloombox.schema.services.devices.v1beta1.DeviceEndpoints)
      io.bloombox.schema.services.devices.v1beta1.DeviceEndpointsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.services.devices.v1beta1.DevicesServiceBeta1.internal_static_bloombox_schema_services_devices_v1beta1_DeviceEndpoints_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.services.devices.v1beta1.DevicesServiceBeta1.internal_static_bloombox_schema_services_devices_v1beta1_DeviceEndpoints_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints.class, io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints.Builder.class);
    }

    // Construct using io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (oauth2Builder_ == null) {
        oauth2_ = null;
      } else {
        oauth2_ = null;
        oauth2Builder_ = null;
      }
      account_ = "";

      api_ = "";

      rpc_ = "";

      issuer_ = "";

      db_ = "";

      realtime_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.services.devices.v1beta1.DevicesServiceBeta1.internal_static_bloombox_schema_services_devices_v1beta1_DeviceEndpoints_descriptor;
    }

    public io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints getDefaultInstanceForType() {
      return io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints.getDefaultInstance();
    }

    public io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints build() {
      io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints buildPartial() {
      io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints result = new io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints(this);
      if (oauth2Builder_ == null) {
        result.oauth2_ = oauth2_;
      } else {
        result.oauth2_ = oauth2Builder_.build();
      }
      result.account_ = account_;
      result.api_ = api_;
      result.rpc_ = rpc_;
      result.issuer_ = issuer_;
      result.db_ = db_;
      result.realtime_ = realtime_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints) {
        return mergeFrom((io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints other) {
      if (other == io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints.getDefaultInstance()) return this;
      if (other.hasOauth2()) {
        mergeOauth2(other.getOauth2());
      }
      if (!other.getAccount().isEmpty()) {
        account_ = other.account_;
        onChanged();
      }
      if (!other.getApi().isEmpty()) {
        api_ = other.api_;
        onChanged();
      }
      if (!other.getRpc().isEmpty()) {
        rpc_ = other.rpc_;
        onChanged();
      }
      if (!other.getIssuer().isEmpty()) {
        issuer_ = other.issuer_;
        onChanged();
      }
      if (!other.getDb().isEmpty()) {
        db_ = other.db_;
        onChanged();
      }
      if (!other.getRealtime().isEmpty()) {
        realtime_ = other.realtime_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints, io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.Builder, io.bloombox.schema.services.devices.v1beta1.OAuth2EndpointsOrBuilder> oauth2Builder_;
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    public boolean hasOauth2() {
      return oauth2Builder_ != null || oauth2_ != null;
    }
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    public io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints getOauth2() {
      if (oauth2Builder_ == null) {
        return oauth2_ == null ? io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.getDefaultInstance() : oauth2_;
      } else {
        return oauth2Builder_.getMessage();
      }
    }
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    public Builder setOauth2(io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints value) {
      if (oauth2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        oauth2_ = value;
        onChanged();
      } else {
        oauth2Builder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    public Builder setOauth2(
        io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.Builder builderForValue) {
      if (oauth2Builder_ == null) {
        oauth2_ = builderForValue.build();
        onChanged();
      } else {
        oauth2Builder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    public Builder mergeOauth2(io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints value) {
      if (oauth2Builder_ == null) {
        if (oauth2_ != null) {
          oauth2_ =
            io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.newBuilder(oauth2_).mergeFrom(value).buildPartial();
        } else {
          oauth2_ = value;
        }
        onChanged();
      } else {
        oauth2Builder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    public Builder clearOauth2() {
      if (oauth2Builder_ == null) {
        oauth2_ = null;
        onChanged();
      } else {
        oauth2_ = null;
        oauth2Builder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    public io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.Builder getOauth2Builder() {
      
      onChanged();
      return getOauth2FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    public io.bloombox.schema.services.devices.v1beta1.OAuth2EndpointsOrBuilder getOauth2OrBuilder() {
      if (oauth2Builder_ != null) {
        return oauth2Builder_.getMessageOrBuilder();
      } else {
        return oauth2_ == null ?
            io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.getDefaultInstance() : oauth2_;
      }
    }
    /**
     * <pre>
     * OAuth2 endpoint to use for authorization. Default value is "authorize.bloombox.cloud".
     * </pre>
     *
     * <code>.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints oauth2 = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints, io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.Builder, io.bloombox.schema.services.devices.v1beta1.OAuth2EndpointsOrBuilder> 
        getOauth2FieldBuilder() {
      if (oauth2Builder_ == null) {
        oauth2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints, io.bloombox.schema.services.devices.v1beta1.OAuth2Endpoints.Builder, io.bloombox.schema.services.devices.v1beta1.OAuth2EndpointsOrBuilder>(
                getOauth2(),
                getParentForChildren(),
                isClean());
        oauth2_ = null;
      }
      return oauth2Builder_;
    }

    private java.lang.Object account_ = "";
    /**
     * <pre>
     * Link to login and account management.
     * </pre>
     *
     * <code>string account = 2;</code>
     */
    public java.lang.String getAccount() {
      java.lang.Object ref = account_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        account_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Link to login and account management.
     * </pre>
     *
     * <code>string account = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Link to login and account management.
     * </pre>
     *
     * <code>string account = 2;</code>
     */
    public Builder setAccount(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      account_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Link to login and account management.
     * </pre>
     *
     * <code>string account = 2;</code>
     */
    public Builder clearAccount() {
      
      account_ = getDefaultInstance().getAccount();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Link to login and account management.
     * </pre>
     *
     * <code>string account = 2;</code>
     */
    public Builder setAccountBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      account_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object api_ = "";
    /**
     * <pre>
     * Main API endpoint/host to make use of. Default value is "api.bloombox.cloud".
     * </pre>
     *
     * <code>string api = 3;</code>
     */
    public java.lang.String getApi() {
      java.lang.Object ref = api_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        api_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Main API endpoint/host to make use of. Default value is "api.bloombox.cloud".
     * </pre>
     *
     * <code>string api = 3;</code>
     */
    public com.google.protobuf.ByteString
        getApiBytes() {
      java.lang.Object ref = api_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        api_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Main API endpoint/host to make use of. Default value is "api.bloombox.cloud".
     * </pre>
     *
     * <code>string api = 3;</code>
     */
    public Builder setApi(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      api_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Main API endpoint/host to make use of. Default value is "api.bloombox.cloud".
     * </pre>
     *
     * <code>string api = 3;</code>
     */
    public Builder clearApi() {
      
      api_ = getDefaultInstance().getApi();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Main API endpoint/host to make use of. Default value is "api.bloombox.cloud".
     * </pre>
     *
     * <code>string api = 3;</code>
     */
    public Builder setApiBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      api_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object rpc_ = "";
    /**
     * <pre>
     * RPC endpoint, for raw gRPC service use.
     * </pre>
     *
     * <code>string rpc = 4;</code>
     */
    public java.lang.String getRpc() {
      java.lang.Object ref = rpc_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rpc_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * RPC endpoint, for raw gRPC service use.
     * </pre>
     *
     * <code>string rpc = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRpcBytes() {
      java.lang.Object ref = rpc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rpc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * RPC endpoint, for raw gRPC service use.
     * </pre>
     *
     * <code>string rpc = 4;</code>
     */
    public Builder setRpc(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      rpc_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RPC endpoint, for raw gRPC service use.
     * </pre>
     *
     * <code>string rpc = 4;</code>
     */
    public Builder clearRpc() {
      
      rpc_ = getDefaultInstance().getRpc();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RPC endpoint, for raw gRPC service use.
     * </pre>
     *
     * <code>string rpc = 4;</code>
     */
    public Builder setRpcBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      rpc_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object issuer_ = "";
    /**
     * <pre>
     * Issuer auth project name to use. Default value is "bloom-auth".
     * </pre>
     *
     * <code>string issuer = 5;</code>
     */
    public java.lang.String getIssuer() {
      java.lang.Object ref = issuer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        issuer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Issuer auth project name to use. Default value is "bloom-auth".
     * </pre>
     *
     * <code>string issuer = 5;</code>
     */
    public com.google.protobuf.ByteString
        getIssuerBytes() {
      java.lang.Object ref = issuer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        issuer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Issuer auth project name to use. Default value is "bloom-auth".
     * </pre>
     *
     * <code>string issuer = 5;</code>
     */
    public Builder setIssuer(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      issuer_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Issuer auth project name to use. Default value is "bloom-auth".
     * </pre>
     *
     * <code>string issuer = 5;</code>
     */
    public Builder clearIssuer() {
      
      issuer_ = getDefaultInstance().getIssuer();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Issuer auth project name to use. Default value is "bloom-auth".
     * </pre>
     *
     * <code>string issuer = 5;</code>
     */
    public Builder setIssuerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      issuer_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object db_ = "";
    /**
     * <pre>
     * Main database project name to use. Default value is "bloom-db".
     * </pre>
     *
     * <code>string db = 6;</code>
     */
    public java.lang.String getDb() {
      java.lang.Object ref = db_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        db_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Main database project name to use. Default value is "bloom-db".
     * </pre>
     *
     * <code>string db = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDbBytes() {
      java.lang.Object ref = db_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        db_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Main database project name to use. Default value is "bloom-db".
     * </pre>
     *
     * <code>string db = 6;</code>
     */
    public Builder setDb(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      db_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Main database project name to use. Default value is "bloom-db".
     * </pre>
     *
     * <code>string db = 6;</code>
     */
    public Builder clearDb() {
      
      db_ = getDefaultInstance().getDb();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Main database project name to use. Default value is "bloom-db".
     * </pre>
     *
     * <code>string db = 6;</code>
     */
    public Builder setDbBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      db_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object realtime_ = "";
    /**
     * <pre>
     * Database project name to use. Default value is "bloombox-io".
     * </pre>
     *
     * <code>string realtime = 7;</code>
     */
    public java.lang.String getRealtime() {
      java.lang.Object ref = realtime_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        realtime_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Database project name to use. Default value is "bloombox-io".
     * </pre>
     *
     * <code>string realtime = 7;</code>
     */
    public com.google.protobuf.ByteString
        getRealtimeBytes() {
      java.lang.Object ref = realtime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        realtime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Database project name to use. Default value is "bloombox-io".
     * </pre>
     *
     * <code>string realtime = 7;</code>
     */
    public Builder setRealtime(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      realtime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Database project name to use. Default value is "bloombox-io".
     * </pre>
     *
     * <code>string realtime = 7;</code>
     */
    public Builder clearRealtime() {
      
      realtime_ = getDefaultInstance().getRealtime();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Database project name to use. Default value is "bloombox-io".
     * </pre>
     *
     * <code>string realtime = 7;</code>
     */
    public Builder setRealtimeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      realtime_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bloombox.schema.services.devices.v1beta1.DeviceEndpoints)
  }

  // @@protoc_insertion_point(class_scope:bloombox.schema.services.devices.v1beta1.DeviceEndpoints)
  private static final io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints();
  }

  public static io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DeviceEndpoints>
      PARSER = new com.google.protobuf.AbstractParser<DeviceEndpoints>() {
    public DeviceEndpoints parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DeviceEndpoints(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DeviceEndpoints> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DeviceEndpoints> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.services.devices.v1beta1.DeviceEndpoints getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

