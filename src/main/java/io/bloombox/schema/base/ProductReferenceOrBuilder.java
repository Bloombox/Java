/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/ProductKey.proto

package io.bloombox.schema.base;

public interface ProductReferenceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.ProductReference)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies the name of a product.
   * </pre>
   *
   * <code>.content.Name name = 1;</code>
   */
  boolean hasName();
  /**
   * <pre>
   * Specifies the name of a product.
   * </pre>
   *
   * <code>.content.Name name = 1;</code>
   */
  io.bloombox.schema.content.Name getName();
  /**
   * <pre>
   * Specifies the name of a product.
   * </pre>
   *
   * <code>.content.Name name = 1;</code>
   */
  io.bloombox.schema.content.NameOrBuilder getNameOrBuilder();

  /**
   * <pre>
   * Specifies the key, if known, of a product.
   * </pre>
   *
   * <code>.base.ProductKey key = 2;</code>
   */
  boolean hasKey();
  /**
   * <pre>
   * Specifies the key, if known, of a product.
   * </pre>
   *
   * <code>.base.ProductKey key = 2;</code>
   */
  io.bloombox.schema.base.ProductKey getKey();
  /**
   * <pre>
   * Specifies the key, if known, of a product.
   * </pre>
   *
   * <code>.base.ProductKey key = 2;</code>
   */
  io.bloombox.schema.base.ProductKeyOrBuilder getKeyOrBuilder();
}
