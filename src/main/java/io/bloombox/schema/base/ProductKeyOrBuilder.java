// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/ProductKey.proto

package io.bloombox.schema.base;

public interface ProductKeyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.ProductKey)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Product ID, an opaque string that is usually autogenerated. Within the scope of an implementing system, this may
   * also be a stringified integer such as an auto-incrementing ID, for relational-type systems. The product ID is
   * expected to be globally addressable and unique across all product categories.
   * </pre>
   *
   * <code>string id = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Product ID, an opaque string that is usually autogenerated."];</code>
   */
  java.lang.String getId();
  /**
   * <pre>
   * Product ID, an opaque string that is usually autogenerated. Within the scope of an implementing system, this may
   * also be a stringified integer such as an auto-incrementing ID, for relational-type systems. The product ID is
   * expected to be globally addressable and unique across all product categories.
   * </pre>
   *
   * <code>string id = 1 [(.gen_bq_schema.require) = true, (.gen_bq_schema.description) = "Product ID, an opaque string that is usually autogenerated."];</code>
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Type of product the ID is referring to. In most cases this entry can be omitted.
   * </pre>
   *
   * <code>.base.ProductType type = 2 [(.gen_bq_schema.ignore) = true];</code>
   */
  boolean hasType();
  /**
   * <pre>
   * Type of product the ID is referring to. In most cases this entry can be omitted.
   * </pre>
   *
   * <code>.base.ProductType type = 2 [(.gen_bq_schema.ignore) = true];</code>
   */
  io.bloombox.schema.base.ProductType getType();
  /**
   * <pre>
   * Type of product the ID is referring to. In most cases this entry can be omitted.
   * </pre>
   *
   * <code>.base.ProductType type = 2 [(.gen_bq_schema.ignore) = true];</code>
   */
  io.bloombox.schema.base.ProductTypeOrBuilder getTypeOrBuilder();
}
