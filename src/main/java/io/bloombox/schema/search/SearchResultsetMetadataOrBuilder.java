/*
 * Copyright 2019, Momentum Ideas, Co. All rights reserved.
 *
 * Source and object computer code contained herein is the private intellectual
 * property of Momentum Ideas Co., a Delaware Corporation. Use of this
 * code in source form requires permission in writing before use or the
 * assembly, distribution, or publishing of derivative works, for commercial
 * purposes or any other purpose, from a duly authorized officer of Momentum
 * Ideas Co.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: search/SearchSpec.proto

package io.bloombox.schema.search;

public interface SearchResultsetMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bloombox.search.SearchResultsetMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Count of matching records, across all categorical types.
   * </pre>
   *
   * <code>repeated .bloombox.search.ResultsetCategoricalCount count = 1;</code>
   */
  java.util.List<io.bloombox.schema.search.ResultsetCategoricalCount> 
      getCountList();
  /**
   * <pre>
   * Count of matching records, across all categorical types.
   * </pre>
   *
   * <code>repeated .bloombox.search.ResultsetCategoricalCount count = 1;</code>
   */
  io.bloombox.schema.search.ResultsetCategoricalCount getCount(int index);
  /**
   * <pre>
   * Count of matching records, across all categorical types.
   * </pre>
   *
   * <code>repeated .bloombox.search.ResultsetCategoricalCount count = 1;</code>
   */
  int getCountCount();
  /**
   * <pre>
   * Count of matching records, across all categorical types.
   * </pre>
   *
   * <code>repeated .bloombox.search.ResultsetCategoricalCount count = 1;</code>
   */
  java.util.List<? extends io.bloombox.schema.search.ResultsetCategoricalCountOrBuilder> 
      getCountOrBuilderList();
  /**
   * <pre>
   * Count of matching records, across all categorical types.
   * </pre>
   *
   * <code>repeated .bloombox.search.ResultsetCategoricalCount count = 1;</code>
   */
  io.bloombox.schema.search.ResultsetCategoricalCountOrBuilder getCountOrBuilder(
      int index);

  /**
   * <pre>
   * Product-specific metadata.
   * </pre>
   *
   * <code>.bloombox.search.ProductResultMetadata products = 2;</code>
   */
  boolean hasProducts();
  /**
   * <pre>
   * Product-specific metadata.
   * </pre>
   *
   * <code>.bloombox.search.ProductResultMetadata products = 2;</code>
   */
  io.bloombox.schema.search.ProductResultMetadata getProducts();
  /**
   * <pre>
   * Product-specific metadata.
   * </pre>
   *
   * <code>.bloombox.search.ProductResultMetadata products = 2;</code>
   */
  io.bloombox.schema.search.ProductResultMetadataOrBuilder getProductsOrBuilder();
}
