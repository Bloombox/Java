/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: person/Person.proto

package io.bloombox.schema.person;

public interface PersonOrBuilder extends
    // @@protoc_insertion_point(interface_extends:person.Person)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Person's primary name information.
   * </pre>
   *
   * <code>.person.Name name = 1 [(.gen_bq_schema.description) = "Person&#92;'s primary name information."];</code>
   */
  boolean hasName();
  /**
   * <pre>
   * Person's primary name information.
   * </pre>
   *
   * <code>.person.Name name = 1 [(.gen_bq_schema.description) = "Person&#92;'s primary name information."];</code>
   */
  io.bloombox.schema.person.Name getName();
  /**
   * <pre>
   * Person's primary name information.
   * </pre>
   *
   * <code>.person.Name name = 1 [(.gen_bq_schema.description) = "Person&#92;'s primary name information."];</code>
   */
  io.bloombox.schema.person.NameOrBuilder getNameOrBuilder();

  /**
   * <pre>
   * Person's legal name, if it differs from their primary name.
   * </pre>
   *
   * <code>.person.Name legal_name = 2 [(.gen_bq_schema.description) = "Person&#92;'s legal name, if it differs from their primary name."];</code>
   */
  boolean hasLegalName();
  /**
   * <pre>
   * Person's legal name, if it differs from their primary name.
   * </pre>
   *
   * <code>.person.Name legal_name = 2 [(.gen_bq_schema.description) = "Person&#92;'s legal name, if it differs from their primary name."];</code>
   */
  io.bloombox.schema.person.Name getLegalName();
  /**
   * <pre>
   * Person's legal name, if it differs from their primary name.
   * </pre>
   *
   * <code>.person.Name legal_name = 2 [(.gen_bq_schema.description) = "Person&#92;'s legal name, if it differs from their primary name."];</code>
   */
  io.bloombox.schema.person.NameOrBuilder getLegalNameOrBuilder();

  /**
   * <pre>
   * Person's optional alternate name.
   * </pre>
   *
   * <code>.person.Name alternate_name = 3 [(.gen_bq_schema.description) = "Person&#92;'s optional alternate name."];</code>
   */
  boolean hasAlternateName();
  /**
   * <pre>
   * Person's optional alternate name.
   * </pre>
   *
   * <code>.person.Name alternate_name = 3 [(.gen_bq_schema.description) = "Person&#92;'s optional alternate name."];</code>
   */
  io.bloombox.schema.person.Name getAlternateName();
  /**
   * <pre>
   * Person's optional alternate name.
   * </pre>
   *
   * <code>.person.Name alternate_name = 3 [(.gen_bq_schema.description) = "Person&#92;'s optional alternate name."];</code>
   */
  io.bloombox.schema.person.NameOrBuilder getAlternateNameOrBuilder();

  /**
   * <pre>
   * Person's contact information.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 4 [(.gen_bq_schema.description) = "Person&#92;'s contact information."];</code>
   */
  boolean hasContact();
  /**
   * <pre>
   * Person's contact information.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 4 [(.gen_bq_schema.description) = "Person&#92;'s contact information."];</code>
   */
  io.bloombox.schema.contact.ContactInfo getContact();
  /**
   * <pre>
   * Person's contact information.
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 4 [(.gen_bq_schema.description) = "Person&#92;'s contact information."];</code>
   */
  io.bloombox.schema.contact.ContactInfoOrBuilder getContactOrBuilder();

  /**
   * <pre>
   * Date of birth.
   * </pre>
   *
   * <code>.temporal.Date date_of_birth = 5 [(.gen_bq_schema.description) = "Date of birth."];</code>
   */
  boolean hasDateOfBirth();
  /**
   * <pre>
   * Date of birth.
   * </pre>
   *
   * <code>.temporal.Date date_of_birth = 5 [(.gen_bq_schema.description) = "Date of birth."];</code>
   */
  io.bloombox.schema.temporal.Date getDateOfBirth();
  /**
   * <pre>
   * Date of birth.
   * </pre>
   *
   * <code>.temporal.Date date_of_birth = 5 [(.gen_bq_schema.description) = "Date of birth."];</code>
   */
  io.bloombox.schema.temporal.DateOrBuilder getDateOfBirthOrBuilder();
}
