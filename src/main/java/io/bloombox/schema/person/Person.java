// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: person/Person.proto

package io.bloombox.schema.person;

/**
 * <pre>
 * A person/patint and their name, legal name, nickname, etc.
 * </pre>
 *
 * Protobuf type {@code person.Person}
 */
public  final class Person extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:person.Person)
    PersonOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Person.newBuilder() to construct.
  private Person(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Person() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Person(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.bloombox.schema.person.Name.Builder subBuilder = null;
            if (name_ != null) {
              subBuilder = name_.toBuilder();
            }
            name_ = input.readMessage(io.bloombox.schema.person.Name.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(name_);
              name_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.bloombox.schema.person.Name.Builder subBuilder = null;
            if (legalName_ != null) {
              subBuilder = legalName_.toBuilder();
            }
            legalName_ = input.readMessage(io.bloombox.schema.person.Name.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(legalName_);
              legalName_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.bloombox.schema.person.Name.Builder subBuilder = null;
            if (alternateName_ != null) {
              subBuilder = alternateName_.toBuilder();
            }
            alternateName_ = input.readMessage(io.bloombox.schema.person.Name.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(alternateName_);
              alternateName_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            io.bloombox.schema.contact.ContactInfo.Builder subBuilder = null;
            if (contact_ != null) {
              subBuilder = contact_.toBuilder();
            }
            contact_ = input.readMessage(io.bloombox.schema.contact.ContactInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(contact_);
              contact_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            io.bloombox.schema.temporal.Date.Builder subBuilder = null;
            if (dateOfBirth_ != null) {
              subBuilder = dateOfBirth_.toBuilder();
            }
            dateOfBirth_ = input.readMessage(io.bloombox.schema.temporal.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dateOfBirth_);
              dateOfBirth_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.person.PersonOuterClass.internal_static_person_Person_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.person.PersonOuterClass.internal_static_person_Person_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.person.Person.class, io.bloombox.schema.person.Person.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private io.bloombox.schema.person.Name name_;
  /**
   * <code>.person.Name name = 1;</code>
   */
  public boolean hasName() {
    return name_ != null;
  }
  /**
   * <code>.person.Name name = 1;</code>
   */
  public io.bloombox.schema.person.Name getName() {
    return name_ == null ? io.bloombox.schema.person.Name.getDefaultInstance() : name_;
  }
  /**
   * <code>.person.Name name = 1;</code>
   */
  public io.bloombox.schema.person.NameOrBuilder getNameOrBuilder() {
    return getName();
  }

  public static final int LEGAL_NAME_FIELD_NUMBER = 2;
  private io.bloombox.schema.person.Name legalName_;
  /**
   * <code>.person.Name legal_name = 2;</code>
   */
  public boolean hasLegalName() {
    return legalName_ != null;
  }
  /**
   * <code>.person.Name legal_name = 2;</code>
   */
  public io.bloombox.schema.person.Name getLegalName() {
    return legalName_ == null ? io.bloombox.schema.person.Name.getDefaultInstance() : legalName_;
  }
  /**
   * <code>.person.Name legal_name = 2;</code>
   */
  public io.bloombox.schema.person.NameOrBuilder getLegalNameOrBuilder() {
    return getLegalName();
  }

  public static final int ALTERNATE_NAME_FIELD_NUMBER = 3;
  private io.bloombox.schema.person.Name alternateName_;
  /**
   * <code>.person.Name alternate_name = 3;</code>
   */
  public boolean hasAlternateName() {
    return alternateName_ != null;
  }
  /**
   * <code>.person.Name alternate_name = 3;</code>
   */
  public io.bloombox.schema.person.Name getAlternateName() {
    return alternateName_ == null ? io.bloombox.schema.person.Name.getDefaultInstance() : alternateName_;
  }
  /**
   * <code>.person.Name alternate_name = 3;</code>
   */
  public io.bloombox.schema.person.NameOrBuilder getAlternateNameOrBuilder() {
    return getAlternateName();
  }

  public static final int CONTACT_FIELD_NUMBER = 4;
  private io.bloombox.schema.contact.ContactInfo contact_;
  /**
   * <pre>
   * Phone number and Email
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 4;</code>
   */
  public boolean hasContact() {
    return contact_ != null;
  }
  /**
   * <pre>
   * Phone number and Email
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 4;</code>
   */
  public io.bloombox.schema.contact.ContactInfo getContact() {
    return contact_ == null ? io.bloombox.schema.contact.ContactInfo.getDefaultInstance() : contact_;
  }
  /**
   * <pre>
   * Phone number and Email
   * </pre>
   *
   * <code>.contact.ContactInfo contact = 4;</code>
   */
  public io.bloombox.schema.contact.ContactInfoOrBuilder getContactOrBuilder() {
    return getContact();
  }

  public static final int DATE_OF_BIRTH_FIELD_NUMBER = 5;
  private io.bloombox.schema.temporal.Date dateOfBirth_;
  /**
   * <pre>
   * Date of Birth
   * </pre>
   *
   * <code>.temporal.Date date_of_birth = 5;</code>
   */
  public boolean hasDateOfBirth() {
    return dateOfBirth_ != null;
  }
  /**
   * <pre>
   * Date of Birth
   * </pre>
   *
   * <code>.temporal.Date date_of_birth = 5;</code>
   */
  public io.bloombox.schema.temporal.Date getDateOfBirth() {
    return dateOfBirth_ == null ? io.bloombox.schema.temporal.Date.getDefaultInstance() : dateOfBirth_;
  }
  /**
   * <pre>
   * Date of Birth
   * </pre>
   *
   * <code>.temporal.Date date_of_birth = 5;</code>
   */
  public io.bloombox.schema.temporal.DateOrBuilder getDateOfBirthOrBuilder() {
    return getDateOfBirth();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (name_ != null) {
      output.writeMessage(1, getName());
    }
    if (legalName_ != null) {
      output.writeMessage(2, getLegalName());
    }
    if (alternateName_ != null) {
      output.writeMessage(3, getAlternateName());
    }
    if (contact_ != null) {
      output.writeMessage(4, getContact());
    }
    if (dateOfBirth_ != null) {
      output.writeMessage(5, getDateOfBirth());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (name_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getName());
    }
    if (legalName_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getLegalName());
    }
    if (alternateName_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAlternateName());
    }
    if (contact_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getContact());
    }
    if (dateOfBirth_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getDateOfBirth());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.person.Person)) {
      return super.equals(obj);
    }
    io.bloombox.schema.person.Person other = (io.bloombox.schema.person.Person) obj;

    boolean result = true;
    result = result && (hasName() == other.hasName());
    if (hasName()) {
      result = result && getName()
          .equals(other.getName());
    }
    result = result && (hasLegalName() == other.hasLegalName());
    if (hasLegalName()) {
      result = result && getLegalName()
          .equals(other.getLegalName());
    }
    result = result && (hasAlternateName() == other.hasAlternateName());
    if (hasAlternateName()) {
      result = result && getAlternateName()
          .equals(other.getAlternateName());
    }
    result = result && (hasContact() == other.hasContact());
    if (hasContact()) {
      result = result && getContact()
          .equals(other.getContact());
    }
    result = result && (hasDateOfBirth() == other.hasDateOfBirth());
    if (hasDateOfBirth()) {
      result = result && getDateOfBirth()
          .equals(other.getDateOfBirth());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
    }
    if (hasLegalName()) {
      hash = (37 * hash) + LEGAL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getLegalName().hashCode();
    }
    if (hasAlternateName()) {
      hash = (37 * hash) + ALTERNATE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getAlternateName().hashCode();
    }
    if (hasContact()) {
      hash = (37 * hash) + CONTACT_FIELD_NUMBER;
      hash = (53 * hash) + getContact().hashCode();
    }
    if (hasDateOfBirth()) {
      hash = (37 * hash) + DATE_OF_BIRTH_FIELD_NUMBER;
      hash = (53 * hash) + getDateOfBirth().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.person.Person parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.person.Person parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.person.Person parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.person.Person parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.person.Person parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.person.Person parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.person.Person parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.person.Person parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.person.Person parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.person.Person parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.person.Person parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.person.Person parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.person.Person prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A person/patint and their name, legal name, nickname, etc.
   * </pre>
   *
   * Protobuf type {@code person.Person}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:person.Person)
      io.bloombox.schema.person.PersonOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.person.PersonOuterClass.internal_static_person_Person_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.person.PersonOuterClass.internal_static_person_Person_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.person.Person.class, io.bloombox.schema.person.Person.Builder.class);
    }

    // Construct using io.bloombox.schema.person.Person.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (nameBuilder_ == null) {
        name_ = null;
      } else {
        name_ = null;
        nameBuilder_ = null;
      }
      if (legalNameBuilder_ == null) {
        legalName_ = null;
      } else {
        legalName_ = null;
        legalNameBuilder_ = null;
      }
      if (alternateNameBuilder_ == null) {
        alternateName_ = null;
      } else {
        alternateName_ = null;
        alternateNameBuilder_ = null;
      }
      if (contactBuilder_ == null) {
        contact_ = null;
      } else {
        contact_ = null;
        contactBuilder_ = null;
      }
      if (dateOfBirthBuilder_ == null) {
        dateOfBirth_ = null;
      } else {
        dateOfBirth_ = null;
        dateOfBirthBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.person.PersonOuterClass.internal_static_person_Person_descriptor;
    }

    public io.bloombox.schema.person.Person getDefaultInstanceForType() {
      return io.bloombox.schema.person.Person.getDefaultInstance();
    }

    public io.bloombox.schema.person.Person build() {
      io.bloombox.schema.person.Person result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.person.Person buildPartial() {
      io.bloombox.schema.person.Person result = new io.bloombox.schema.person.Person(this);
      if (nameBuilder_ == null) {
        result.name_ = name_;
      } else {
        result.name_ = nameBuilder_.build();
      }
      if (legalNameBuilder_ == null) {
        result.legalName_ = legalName_;
      } else {
        result.legalName_ = legalNameBuilder_.build();
      }
      if (alternateNameBuilder_ == null) {
        result.alternateName_ = alternateName_;
      } else {
        result.alternateName_ = alternateNameBuilder_.build();
      }
      if (contactBuilder_ == null) {
        result.contact_ = contact_;
      } else {
        result.contact_ = contactBuilder_.build();
      }
      if (dateOfBirthBuilder_ == null) {
        result.dateOfBirth_ = dateOfBirth_;
      } else {
        result.dateOfBirth_ = dateOfBirthBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.person.Person) {
        return mergeFrom((io.bloombox.schema.person.Person)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.person.Person other) {
      if (other == io.bloombox.schema.person.Person.getDefaultInstance()) return this;
      if (other.hasName()) {
        mergeName(other.getName());
      }
      if (other.hasLegalName()) {
        mergeLegalName(other.getLegalName());
      }
      if (other.hasAlternateName()) {
        mergeAlternateName(other.getAlternateName());
      }
      if (other.hasContact()) {
        mergeContact(other.getContact());
      }
      if (other.hasDateOfBirth()) {
        mergeDateOfBirth(other.getDateOfBirth());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.person.Person parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.person.Person) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.bloombox.schema.person.Name name_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder> nameBuilder_;
    /**
     * <code>.person.Name name = 1;</code>
     */
    public boolean hasName() {
      return nameBuilder_ != null || name_ != null;
    }
    /**
     * <code>.person.Name name = 1;</code>
     */
    public io.bloombox.schema.person.Name getName() {
      if (nameBuilder_ == null) {
        return name_ == null ? io.bloombox.schema.person.Name.getDefaultInstance() : name_;
      } else {
        return nameBuilder_.getMessage();
      }
    }
    /**
     * <code>.person.Name name = 1;</code>
     */
    public Builder setName(io.bloombox.schema.person.Name value) {
      if (nameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        name_ = value;
        onChanged();
      } else {
        nameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.person.Name name = 1;</code>
     */
    public Builder setName(
        io.bloombox.schema.person.Name.Builder builderForValue) {
      if (nameBuilder_ == null) {
        name_ = builderForValue.build();
        onChanged();
      } else {
        nameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.person.Name name = 1;</code>
     */
    public Builder mergeName(io.bloombox.schema.person.Name value) {
      if (nameBuilder_ == null) {
        if (name_ != null) {
          name_ =
            io.bloombox.schema.person.Name.newBuilder(name_).mergeFrom(value).buildPartial();
        } else {
          name_ = value;
        }
        onChanged();
      } else {
        nameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.person.Name name = 1;</code>
     */
    public Builder clearName() {
      if (nameBuilder_ == null) {
        name_ = null;
        onChanged();
      } else {
        name_ = null;
        nameBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.person.Name name = 1;</code>
     */
    public io.bloombox.schema.person.Name.Builder getNameBuilder() {
      
      onChanged();
      return getNameFieldBuilder().getBuilder();
    }
    /**
     * <code>.person.Name name = 1;</code>
     */
    public io.bloombox.schema.person.NameOrBuilder getNameOrBuilder() {
      if (nameBuilder_ != null) {
        return nameBuilder_.getMessageOrBuilder();
      } else {
        return name_ == null ?
            io.bloombox.schema.person.Name.getDefaultInstance() : name_;
      }
    }
    /**
     * <code>.person.Name name = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder> 
        getNameFieldBuilder() {
      if (nameBuilder_ == null) {
        nameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder>(
                getName(),
                getParentForChildren(),
                isClean());
        name_ = null;
      }
      return nameBuilder_;
    }

    private io.bloombox.schema.person.Name legalName_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder> legalNameBuilder_;
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    public boolean hasLegalName() {
      return legalNameBuilder_ != null || legalName_ != null;
    }
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    public io.bloombox.schema.person.Name getLegalName() {
      if (legalNameBuilder_ == null) {
        return legalName_ == null ? io.bloombox.schema.person.Name.getDefaultInstance() : legalName_;
      } else {
        return legalNameBuilder_.getMessage();
      }
    }
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    public Builder setLegalName(io.bloombox.schema.person.Name value) {
      if (legalNameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        legalName_ = value;
        onChanged();
      } else {
        legalNameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    public Builder setLegalName(
        io.bloombox.schema.person.Name.Builder builderForValue) {
      if (legalNameBuilder_ == null) {
        legalName_ = builderForValue.build();
        onChanged();
      } else {
        legalNameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    public Builder mergeLegalName(io.bloombox.schema.person.Name value) {
      if (legalNameBuilder_ == null) {
        if (legalName_ != null) {
          legalName_ =
            io.bloombox.schema.person.Name.newBuilder(legalName_).mergeFrom(value).buildPartial();
        } else {
          legalName_ = value;
        }
        onChanged();
      } else {
        legalNameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    public Builder clearLegalName() {
      if (legalNameBuilder_ == null) {
        legalName_ = null;
        onChanged();
      } else {
        legalName_ = null;
        legalNameBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    public io.bloombox.schema.person.Name.Builder getLegalNameBuilder() {
      
      onChanged();
      return getLegalNameFieldBuilder().getBuilder();
    }
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    public io.bloombox.schema.person.NameOrBuilder getLegalNameOrBuilder() {
      if (legalNameBuilder_ != null) {
        return legalNameBuilder_.getMessageOrBuilder();
      } else {
        return legalName_ == null ?
            io.bloombox.schema.person.Name.getDefaultInstance() : legalName_;
      }
    }
    /**
     * <code>.person.Name legal_name = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder> 
        getLegalNameFieldBuilder() {
      if (legalNameBuilder_ == null) {
        legalNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder>(
                getLegalName(),
                getParentForChildren(),
                isClean());
        legalName_ = null;
      }
      return legalNameBuilder_;
    }

    private io.bloombox.schema.person.Name alternateName_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder> alternateNameBuilder_;
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    public boolean hasAlternateName() {
      return alternateNameBuilder_ != null || alternateName_ != null;
    }
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    public io.bloombox.schema.person.Name getAlternateName() {
      if (alternateNameBuilder_ == null) {
        return alternateName_ == null ? io.bloombox.schema.person.Name.getDefaultInstance() : alternateName_;
      } else {
        return alternateNameBuilder_.getMessage();
      }
    }
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    public Builder setAlternateName(io.bloombox.schema.person.Name value) {
      if (alternateNameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        alternateName_ = value;
        onChanged();
      } else {
        alternateNameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    public Builder setAlternateName(
        io.bloombox.schema.person.Name.Builder builderForValue) {
      if (alternateNameBuilder_ == null) {
        alternateName_ = builderForValue.build();
        onChanged();
      } else {
        alternateNameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    public Builder mergeAlternateName(io.bloombox.schema.person.Name value) {
      if (alternateNameBuilder_ == null) {
        if (alternateName_ != null) {
          alternateName_ =
            io.bloombox.schema.person.Name.newBuilder(alternateName_).mergeFrom(value).buildPartial();
        } else {
          alternateName_ = value;
        }
        onChanged();
      } else {
        alternateNameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    public Builder clearAlternateName() {
      if (alternateNameBuilder_ == null) {
        alternateName_ = null;
        onChanged();
      } else {
        alternateName_ = null;
        alternateNameBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    public io.bloombox.schema.person.Name.Builder getAlternateNameBuilder() {
      
      onChanged();
      return getAlternateNameFieldBuilder().getBuilder();
    }
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    public io.bloombox.schema.person.NameOrBuilder getAlternateNameOrBuilder() {
      if (alternateNameBuilder_ != null) {
        return alternateNameBuilder_.getMessageOrBuilder();
      } else {
        return alternateName_ == null ?
            io.bloombox.schema.person.Name.getDefaultInstance() : alternateName_;
      }
    }
    /**
     * <code>.person.Name alternate_name = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder> 
        getAlternateNameFieldBuilder() {
      if (alternateNameBuilder_ == null) {
        alternateNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.person.Name, io.bloombox.schema.person.Name.Builder, io.bloombox.schema.person.NameOrBuilder>(
                getAlternateName(),
                getParentForChildren(),
                isClean());
        alternateName_ = null;
      }
      return alternateNameBuilder_;
    }

    private io.bloombox.schema.contact.ContactInfo contact_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.contact.ContactInfo, io.bloombox.schema.contact.ContactInfo.Builder, io.bloombox.schema.contact.ContactInfoOrBuilder> contactBuilder_;
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    public boolean hasContact() {
      return contactBuilder_ != null || contact_ != null;
    }
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    public io.bloombox.schema.contact.ContactInfo getContact() {
      if (contactBuilder_ == null) {
        return contact_ == null ? io.bloombox.schema.contact.ContactInfo.getDefaultInstance() : contact_;
      } else {
        return contactBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    public Builder setContact(io.bloombox.schema.contact.ContactInfo value) {
      if (contactBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contact_ = value;
        onChanged();
      } else {
        contactBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    public Builder setContact(
        io.bloombox.schema.contact.ContactInfo.Builder builderForValue) {
      if (contactBuilder_ == null) {
        contact_ = builderForValue.build();
        onChanged();
      } else {
        contactBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    public Builder mergeContact(io.bloombox.schema.contact.ContactInfo value) {
      if (contactBuilder_ == null) {
        if (contact_ != null) {
          contact_ =
            io.bloombox.schema.contact.ContactInfo.newBuilder(contact_).mergeFrom(value).buildPartial();
        } else {
          contact_ = value;
        }
        onChanged();
      } else {
        contactBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    public Builder clearContact() {
      if (contactBuilder_ == null) {
        contact_ = null;
        onChanged();
      } else {
        contact_ = null;
        contactBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    public io.bloombox.schema.contact.ContactInfo.Builder getContactBuilder() {
      
      onChanged();
      return getContactFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    public io.bloombox.schema.contact.ContactInfoOrBuilder getContactOrBuilder() {
      if (contactBuilder_ != null) {
        return contactBuilder_.getMessageOrBuilder();
      } else {
        return contact_ == null ?
            io.bloombox.schema.contact.ContactInfo.getDefaultInstance() : contact_;
      }
    }
    /**
     * <pre>
     * Phone number and Email
     * </pre>
     *
     * <code>.contact.ContactInfo contact = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.contact.ContactInfo, io.bloombox.schema.contact.ContactInfo.Builder, io.bloombox.schema.contact.ContactInfoOrBuilder> 
        getContactFieldBuilder() {
      if (contactBuilder_ == null) {
        contactBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.contact.ContactInfo, io.bloombox.schema.contact.ContactInfo.Builder, io.bloombox.schema.contact.ContactInfoOrBuilder>(
                getContact(),
                getParentForChildren(),
                isClean());
        contact_ = null;
      }
      return contactBuilder_;
    }

    private io.bloombox.schema.temporal.Date dateOfBirth_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder> dateOfBirthBuilder_;
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    public boolean hasDateOfBirth() {
      return dateOfBirthBuilder_ != null || dateOfBirth_ != null;
    }
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    public io.bloombox.schema.temporal.Date getDateOfBirth() {
      if (dateOfBirthBuilder_ == null) {
        return dateOfBirth_ == null ? io.bloombox.schema.temporal.Date.getDefaultInstance() : dateOfBirth_;
      } else {
        return dateOfBirthBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    public Builder setDateOfBirth(io.bloombox.schema.temporal.Date value) {
      if (dateOfBirthBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateOfBirth_ = value;
        onChanged();
      } else {
        dateOfBirthBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    public Builder setDateOfBirth(
        io.bloombox.schema.temporal.Date.Builder builderForValue) {
      if (dateOfBirthBuilder_ == null) {
        dateOfBirth_ = builderForValue.build();
        onChanged();
      } else {
        dateOfBirthBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    public Builder mergeDateOfBirth(io.bloombox.schema.temporal.Date value) {
      if (dateOfBirthBuilder_ == null) {
        if (dateOfBirth_ != null) {
          dateOfBirth_ =
            io.bloombox.schema.temporal.Date.newBuilder(dateOfBirth_).mergeFrom(value).buildPartial();
        } else {
          dateOfBirth_ = value;
        }
        onChanged();
      } else {
        dateOfBirthBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    public Builder clearDateOfBirth() {
      if (dateOfBirthBuilder_ == null) {
        dateOfBirth_ = null;
        onChanged();
      } else {
        dateOfBirth_ = null;
        dateOfBirthBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    public io.bloombox.schema.temporal.Date.Builder getDateOfBirthBuilder() {
      
      onChanged();
      return getDateOfBirthFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    public io.bloombox.schema.temporal.DateOrBuilder getDateOfBirthOrBuilder() {
      if (dateOfBirthBuilder_ != null) {
        return dateOfBirthBuilder_.getMessageOrBuilder();
      } else {
        return dateOfBirth_ == null ?
            io.bloombox.schema.temporal.Date.getDefaultInstance() : dateOfBirth_;
      }
    }
    /**
     * <pre>
     * Date of Birth
     * </pre>
     *
     * <code>.temporal.Date date_of_birth = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder> 
        getDateOfBirthFieldBuilder() {
      if (dateOfBirthBuilder_ == null) {
        dateOfBirthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.temporal.Date, io.bloombox.schema.temporal.Date.Builder, io.bloombox.schema.temporal.DateOrBuilder>(
                getDateOfBirth(),
                getParentForChildren(),
                isClean());
        dateOfBirth_ = null;
      }
      return dateOfBirthBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:person.Person)
  }

  // @@protoc_insertion_point(class_scope:person.Person)
  private static final io.bloombox.schema.person.Person DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.person.Person();
  }

  public static io.bloombox.schema.person.Person getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Person>
      PARSER = new com.google.protobuf.AbstractParser<Person>() {
    public Person parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Person(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Person> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Person> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.person.Person getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

