/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/pricing/SaleDescriptor.proto

package io.bloombox.schema.product.struct;

public interface SaleDescriptorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:structs.pricing.SaleDescriptor)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * sale metadata
   * </pre>
   *
   * <code>.structs.pricing.SaleType type = 1;</code>
   */
  int getTypeValue();
  /**
   * <pre>
   * sale metadata
   * </pre>
   *
   * <code>.structs.pricing.SaleType type = 1;</code>
   */
  io.bloombox.schema.product.struct.SaleType getType();

  /**
   * <code>.temporal.Instant effective = 2;</code>
   */
  boolean hasEffective();
  /**
   * <code>.temporal.Instant effective = 2;</code>
   */
  io.bloombox.schema.temporal.Instant getEffective();
  /**
   * <code>.temporal.Instant effective = 2;</code>
   */
  io.bloombox.schema.temporal.InstantOrBuilder getEffectiveOrBuilder();

  /**
   * <code>.temporal.Instant expiration = 3;</code>
   */
  boolean hasExpiration();
  /**
   * <code>.temporal.Instant expiration = 3;</code>
   */
  io.bloombox.schema.temporal.Instant getExpiration();
  /**
   * <code>.temporal.Instant expiration = 3;</code>
   */
  io.bloombox.schema.temporal.InstantOrBuilder getExpirationOrBuilder();

  /**
   * <code>.structs.pricing.PercentageDiscount percentage_off = 4;</code>
   */
  boolean hasPercentageOff();
  /**
   * <code>.structs.pricing.PercentageDiscount percentage_off = 4;</code>
   */
  io.bloombox.schema.product.struct.PercentageDiscount getPercentageOff();
  /**
   * <code>.structs.pricing.PercentageDiscount percentage_off = 4;</code>
   */
  io.bloombox.schema.product.struct.PercentageDiscountOrBuilder getPercentageOffOrBuilder();

  /**
   * <code>.structs.pricing.BOGODiscount bogo = 5;</code>
   */
  boolean hasBogo();
  /**
   * <code>.structs.pricing.BOGODiscount bogo = 5;</code>
   */
  io.bloombox.schema.product.struct.BOGODiscount getBogo();
  /**
   * <code>.structs.pricing.BOGODiscount bogo = 5;</code>
   */
  io.bloombox.schema.product.struct.BOGODiscountOrBuilder getBogoOrBuilder();

  /**
   * <code>.structs.pricing.LoyaltyDiscount loyalty = 6;</code>
   */
  boolean hasLoyalty();
  /**
   * <code>.structs.pricing.LoyaltyDiscount loyalty = 6;</code>
   */
  io.bloombox.schema.product.struct.LoyaltyDiscount getLoyalty();
  /**
   * <code>.structs.pricing.LoyaltyDiscount loyalty = 6;</code>
   */
  io.bloombox.schema.product.struct.LoyaltyDiscountOrBuilder getLoyaltyOrBuilder();

  public io.bloombox.schema.product.struct.SaleDescriptor.SaleCase getSaleCase();
}
