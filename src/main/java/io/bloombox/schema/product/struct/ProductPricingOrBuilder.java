// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/pricing/PricingDescriptor.proto

package io.bloombox.schema.product.struct;

public interface ProductPricingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:structs.pricing.ProductPricing)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .structs.pricing.SaleDescriptor discounts = 1;</code>
   */
  java.util.List<io.bloombox.schema.product.struct.SaleDescriptor> 
      getDiscountsList();
  /**
   * <code>repeated .structs.pricing.SaleDescriptor discounts = 1;</code>
   */
  io.bloombox.schema.product.struct.SaleDescriptor getDiscounts(int index);
  /**
   * <code>repeated .structs.pricing.SaleDescriptor discounts = 1;</code>
   */
  int getDiscountsCount();
  /**
   * <code>repeated .structs.pricing.SaleDescriptor discounts = 1;</code>
   */
  java.util.List<? extends io.bloombox.schema.product.struct.SaleDescriptorOrBuilder> 
      getDiscountsOrBuilderList();
  /**
   * <code>repeated .structs.pricing.SaleDescriptor discounts = 1;</code>
   */
  io.bloombox.schema.product.struct.SaleDescriptorOrBuilder getDiscountsOrBuilder(
      int index);

  /**
   * <code>repeated .structs.pricing.PricingDescriptor manifest = 2;</code>
   */
  java.util.List<io.bloombox.schema.product.struct.PricingDescriptor> 
      getManifestList();
  /**
   * <code>repeated .structs.pricing.PricingDescriptor manifest = 2;</code>
   */
  io.bloombox.schema.product.struct.PricingDescriptor getManifest(int index);
  /**
   * <code>repeated .structs.pricing.PricingDescriptor manifest = 2;</code>
   */
  int getManifestCount();
  /**
   * <code>repeated .structs.pricing.PricingDescriptor manifest = 2;</code>
   */
  java.util.List<? extends io.bloombox.schema.product.struct.PricingDescriptorOrBuilder> 
      getManifestOrBuilderList();
  /**
   * <code>repeated .structs.pricing.PricingDescriptor manifest = 2;</code>
   */
  io.bloombox.schema.product.struct.PricingDescriptorOrBuilder getManifestOrBuilder(
      int index);
}
