/*
 * Copyright 2018, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestResults.proto

package io.bloombox.schema.product.struct.testing;

/**
 * Protobuf type {@code structs.labtesting.Subjective}
 */
public  final class Subjective extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:structs.labtesting.Subjective)
    SubjectiveOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Subjective.newBuilder() to construct.
  private Subjective(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Subjective() {
    potency_ = 0;
    feelingTags_ = java.util.Collections.emptyList();
    tastingNotes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Subjective(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.bloombox.schema.content.Content.Builder subBuilder = null;
            if (description_ != null) {
              subBuilder = description_.toBuilder();
            }
            description_ = input.readMessage(io.bloombox.schema.content.Content.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(description_);
              description_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.bloombox.schema.content.Content.Builder subBuilder = null;
            if (taste_ != null) {
              subBuilder = taste_.toBuilder();
            }
            taste_ = input.readMessage(io.bloombox.schema.content.Content.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(taste_);
              taste_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            potency_ = rawValue;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              feelingTags_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000008;
            }
            feelingTags_.add(rawValue);
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                feelingTags_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              feelingTags_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 40: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              tastingNotes_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000010;
            }
            tastingNotes_.add(rawValue);
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                tastingNotes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              tastingNotes_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        feelingTags_ = java.util.Collections.unmodifiableList(feelingTags_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        tastingNotes_ = java.util.Collections.unmodifiableList(tastingNotes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Subjective_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Subjective_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.product.struct.testing.Subjective.class, io.bloombox.schema.product.struct.testing.Subjective.Builder.class);
  }

  private int bitField0_;
  public static final int DESCRIPTION_FIELD_NUMBER = 1;
  private io.bloombox.schema.content.Content description_;
  /**
   * <code>.content.Content description = 1;</code>
   */
  public boolean hasDescription() {
    return description_ != null;
  }
  /**
   * <code>.content.Content description = 1;</code>
   */
  public io.bloombox.schema.content.Content getDescription() {
    return description_ == null ? io.bloombox.schema.content.Content.getDefaultInstance() : description_;
  }
  /**
   * <code>.content.Content description = 1;</code>
   */
  public io.bloombox.schema.content.ContentOrBuilder getDescriptionOrBuilder() {
    return getDescription();
  }

  public static final int TASTE_FIELD_NUMBER = 2;
  private io.bloombox.schema.content.Content taste_;
  /**
   * <code>.content.Content taste = 2;</code>
   */
  public boolean hasTaste() {
    return taste_ != null;
  }
  /**
   * <code>.content.Content taste = 2;</code>
   */
  public io.bloombox.schema.content.Content getTaste() {
    return taste_ == null ? io.bloombox.schema.content.Content.getDefaultInstance() : taste_;
  }
  /**
   * <code>.content.Content taste = 2;</code>
   */
  public io.bloombox.schema.content.ContentOrBuilder getTasteOrBuilder() {
    return getTaste();
  }

  public static final int POTENCY_FIELD_NUMBER = 3;
  private int potency_;
  /**
   * <code>.structs.labtesting.PotencyEstimate potency = 3;</code>
   */
  public int getPotencyValue() {
    return potency_;
  }
  /**
   * <code>.structs.labtesting.PotencyEstimate potency = 3;</code>
   */
  public io.bloombox.schema.product.struct.testing.PotencyEstimate getPotency() {
    io.bloombox.schema.product.struct.testing.PotencyEstimate result = io.bloombox.schema.product.struct.testing.PotencyEstimate.valueOf(potency_);
    return result == null ? io.bloombox.schema.product.struct.testing.PotencyEstimate.UNRECOGNIZED : result;
  }

  public static final int FEELING_TAGS_FIELD_NUMBER = 4;
  private java.util.List<java.lang.Integer> feelingTags_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.bloombox.schema.product.struct.testing.Feeling> feelingTags_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.bloombox.schema.product.struct.testing.Feeling>() {
            public io.bloombox.schema.product.struct.testing.Feeling convert(java.lang.Integer from) {
              io.bloombox.schema.product.struct.testing.Feeling result = io.bloombox.schema.product.struct.testing.Feeling.valueOf(from);
              return result == null ? io.bloombox.schema.product.struct.testing.Feeling.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
   */
  public java.util.List<io.bloombox.schema.product.struct.testing.Feeling> getFeelingTagsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.bloombox.schema.product.struct.testing.Feeling>(feelingTags_, feelingTags_converter_);
  }
  /**
   * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
   */
  public int getFeelingTagsCount() {
    return feelingTags_.size();
  }
  /**
   * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
   */
  public io.bloombox.schema.product.struct.testing.Feeling getFeelingTags(int index) {
    return feelingTags_converter_.convert(feelingTags_.get(index));
  }
  /**
   * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
   */
  public java.util.List<java.lang.Integer>
  getFeelingTagsValueList() {
    return feelingTags_;
  }
  /**
   * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
   */
  public int getFeelingTagsValue(int index) {
    return feelingTags_.get(index);
  }
  private int feelingTagsMemoizedSerializedSize;

  public static final int TASTING_NOTES_FIELD_NUMBER = 5;
  private java.util.List<java.lang.Integer> tastingNotes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.bloombox.schema.product.struct.testing.TasteNote> tastingNotes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.bloombox.schema.product.struct.testing.TasteNote>() {
            public io.bloombox.schema.product.struct.testing.TasteNote convert(java.lang.Integer from) {
              io.bloombox.schema.product.struct.testing.TasteNote result = io.bloombox.schema.product.struct.testing.TasteNote.valueOf(from);
              return result == null ? io.bloombox.schema.product.struct.testing.TasteNote.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
   */
  public java.util.List<io.bloombox.schema.product.struct.testing.TasteNote> getTastingNotesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.bloombox.schema.product.struct.testing.TasteNote>(tastingNotes_, tastingNotes_converter_);
  }
  /**
   * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
   */
  public int getTastingNotesCount() {
    return tastingNotes_.size();
  }
  /**
   * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
   */
  public io.bloombox.schema.product.struct.testing.TasteNote getTastingNotes(int index) {
    return tastingNotes_converter_.convert(tastingNotes_.get(index));
  }
  /**
   * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
   */
  public java.util.List<java.lang.Integer>
  getTastingNotesValueList() {
    return tastingNotes_;
  }
  /**
   * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
   */
  public int getTastingNotesValue(int index) {
    return tastingNotes_.get(index);
  }
  private int tastingNotesMemoizedSerializedSize;

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (description_ != null) {
      output.writeMessage(1, getDescription());
    }
    if (taste_ != null) {
      output.writeMessage(2, getTaste());
    }
    if (potency_ != io.bloombox.schema.product.struct.testing.PotencyEstimate.LIGHT.getNumber()) {
      output.writeEnum(3, potency_);
    }
    if (getFeelingTagsList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(feelingTagsMemoizedSerializedSize);
    }
    for (int i = 0; i < feelingTags_.size(); i++) {
      output.writeEnumNoTag(feelingTags_.get(i));
    }
    if (getTastingNotesList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(tastingNotesMemoizedSerializedSize);
    }
    for (int i = 0; i < tastingNotes_.size(); i++) {
      output.writeEnumNoTag(tastingNotes_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (description_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDescription());
    }
    if (taste_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTaste());
    }
    if (potency_ != io.bloombox.schema.product.struct.testing.PotencyEstimate.LIGHT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, potency_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < feelingTags_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(feelingTags_.get(i));
      }
      size += dataSize;
      if (!getFeelingTagsList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }feelingTagsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tastingNotes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(tastingNotes_.get(i));
      }
      size += dataSize;
      if (!getTastingNotesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }tastingNotesMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.product.struct.testing.Subjective)) {
      return super.equals(obj);
    }
    io.bloombox.schema.product.struct.testing.Subjective other = (io.bloombox.schema.product.struct.testing.Subjective) obj;

    boolean result = true;
    result = result && (hasDescription() == other.hasDescription());
    if (hasDescription()) {
      result = result && getDescription()
          .equals(other.getDescription());
    }
    result = result && (hasTaste() == other.hasTaste());
    if (hasTaste()) {
      result = result && getTaste()
          .equals(other.getTaste());
    }
    result = result && potency_ == other.potency_;
    result = result && feelingTags_.equals(other.feelingTags_);
    result = result && tastingNotes_.equals(other.tastingNotes_);
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDescription()) {
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
    }
    if (hasTaste()) {
      hash = (37 * hash) + TASTE_FIELD_NUMBER;
      hash = (53 * hash) + getTaste().hashCode();
    }
    hash = (37 * hash) + POTENCY_FIELD_NUMBER;
    hash = (53 * hash) + potency_;
    if (getFeelingTagsCount() > 0) {
      hash = (37 * hash) + FEELING_TAGS_FIELD_NUMBER;
      hash = (53 * hash) + feelingTags_.hashCode();
    }
    if (getTastingNotesCount() > 0) {
      hash = (37 * hash) + TASTING_NOTES_FIELD_NUMBER;
      hash = (53 * hash) + tastingNotes_.hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Subjective parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.product.struct.testing.Subjective prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code structs.labtesting.Subjective}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:structs.labtesting.Subjective)
      io.bloombox.schema.product.struct.testing.SubjectiveOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Subjective_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Subjective_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.product.struct.testing.Subjective.class, io.bloombox.schema.product.struct.testing.Subjective.Builder.class);
    }

    // Construct using io.bloombox.schema.product.struct.testing.Subjective.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (descriptionBuilder_ == null) {
        description_ = null;
      } else {
        description_ = null;
        descriptionBuilder_ = null;
      }
      if (tasteBuilder_ == null) {
        taste_ = null;
      } else {
        taste_ = null;
        tasteBuilder_ = null;
      }
      potency_ = 0;

      feelingTags_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      tastingNotes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Subjective_descriptor;
    }

    public io.bloombox.schema.product.struct.testing.Subjective getDefaultInstanceForType() {
      return io.bloombox.schema.product.struct.testing.Subjective.getDefaultInstance();
    }

    public io.bloombox.schema.product.struct.testing.Subjective build() {
      io.bloombox.schema.product.struct.testing.Subjective result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.product.struct.testing.Subjective buildPartial() {
      io.bloombox.schema.product.struct.testing.Subjective result = new io.bloombox.schema.product.struct.testing.Subjective(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (descriptionBuilder_ == null) {
        result.description_ = description_;
      } else {
        result.description_ = descriptionBuilder_.build();
      }
      if (tasteBuilder_ == null) {
        result.taste_ = taste_;
      } else {
        result.taste_ = tasteBuilder_.build();
      }
      result.potency_ = potency_;
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        feelingTags_ = java.util.Collections.unmodifiableList(feelingTags_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.feelingTags_ = feelingTags_;
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        tastingNotes_ = java.util.Collections.unmodifiableList(tastingNotes_);
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.tastingNotes_ = tastingNotes_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.product.struct.testing.Subjective) {
        return mergeFrom((io.bloombox.schema.product.struct.testing.Subjective)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.product.struct.testing.Subjective other) {
      if (other == io.bloombox.schema.product.struct.testing.Subjective.getDefaultInstance()) return this;
      if (other.hasDescription()) {
        mergeDescription(other.getDescription());
      }
      if (other.hasTaste()) {
        mergeTaste(other.getTaste());
      }
      if (other.potency_ != 0) {
        setPotencyValue(other.getPotencyValue());
      }
      if (!other.feelingTags_.isEmpty()) {
        if (feelingTags_.isEmpty()) {
          feelingTags_ = other.feelingTags_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureFeelingTagsIsMutable();
          feelingTags_.addAll(other.feelingTags_);
        }
        onChanged();
      }
      if (!other.tastingNotes_.isEmpty()) {
        if (tastingNotes_.isEmpty()) {
          tastingNotes_ = other.tastingNotes_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureTastingNotesIsMutable();
          tastingNotes_.addAll(other.tastingNotes_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.product.struct.testing.Subjective parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.product.struct.testing.Subjective) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private io.bloombox.schema.content.Content description_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.content.Content, io.bloombox.schema.content.Content.Builder, io.bloombox.schema.content.ContentOrBuilder> descriptionBuilder_;
    /**
     * <code>.content.Content description = 1;</code>
     */
    public boolean hasDescription() {
      return descriptionBuilder_ != null || description_ != null;
    }
    /**
     * <code>.content.Content description = 1;</code>
     */
    public io.bloombox.schema.content.Content getDescription() {
      if (descriptionBuilder_ == null) {
        return description_ == null ? io.bloombox.schema.content.Content.getDefaultInstance() : description_;
      } else {
        return descriptionBuilder_.getMessage();
      }
    }
    /**
     * <code>.content.Content description = 1;</code>
     */
    public Builder setDescription(io.bloombox.schema.content.Content value) {
      if (descriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        description_ = value;
        onChanged();
      } else {
        descriptionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.content.Content description = 1;</code>
     */
    public Builder setDescription(
        io.bloombox.schema.content.Content.Builder builderForValue) {
      if (descriptionBuilder_ == null) {
        description_ = builderForValue.build();
        onChanged();
      } else {
        descriptionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.content.Content description = 1;</code>
     */
    public Builder mergeDescription(io.bloombox.schema.content.Content value) {
      if (descriptionBuilder_ == null) {
        if (description_ != null) {
          description_ =
            io.bloombox.schema.content.Content.newBuilder(description_).mergeFrom(value).buildPartial();
        } else {
          description_ = value;
        }
        onChanged();
      } else {
        descriptionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.content.Content description = 1;</code>
     */
    public Builder clearDescription() {
      if (descriptionBuilder_ == null) {
        description_ = null;
        onChanged();
      } else {
        description_ = null;
        descriptionBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.content.Content description = 1;</code>
     */
    public io.bloombox.schema.content.Content.Builder getDescriptionBuilder() {
      
      onChanged();
      return getDescriptionFieldBuilder().getBuilder();
    }
    /**
     * <code>.content.Content description = 1;</code>
     */
    public io.bloombox.schema.content.ContentOrBuilder getDescriptionOrBuilder() {
      if (descriptionBuilder_ != null) {
        return descriptionBuilder_.getMessageOrBuilder();
      } else {
        return description_ == null ?
            io.bloombox.schema.content.Content.getDefaultInstance() : description_;
      }
    }
    /**
     * <code>.content.Content description = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.content.Content, io.bloombox.schema.content.Content.Builder, io.bloombox.schema.content.ContentOrBuilder> 
        getDescriptionFieldBuilder() {
      if (descriptionBuilder_ == null) {
        descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.content.Content, io.bloombox.schema.content.Content.Builder, io.bloombox.schema.content.ContentOrBuilder>(
                getDescription(),
                getParentForChildren(),
                isClean());
        description_ = null;
      }
      return descriptionBuilder_;
    }

    private io.bloombox.schema.content.Content taste_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.content.Content, io.bloombox.schema.content.Content.Builder, io.bloombox.schema.content.ContentOrBuilder> tasteBuilder_;
    /**
     * <code>.content.Content taste = 2;</code>
     */
    public boolean hasTaste() {
      return tasteBuilder_ != null || taste_ != null;
    }
    /**
     * <code>.content.Content taste = 2;</code>
     */
    public io.bloombox.schema.content.Content getTaste() {
      if (tasteBuilder_ == null) {
        return taste_ == null ? io.bloombox.schema.content.Content.getDefaultInstance() : taste_;
      } else {
        return tasteBuilder_.getMessage();
      }
    }
    /**
     * <code>.content.Content taste = 2;</code>
     */
    public Builder setTaste(io.bloombox.schema.content.Content value) {
      if (tasteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taste_ = value;
        onChanged();
      } else {
        tasteBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.content.Content taste = 2;</code>
     */
    public Builder setTaste(
        io.bloombox.schema.content.Content.Builder builderForValue) {
      if (tasteBuilder_ == null) {
        taste_ = builderForValue.build();
        onChanged();
      } else {
        tasteBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.content.Content taste = 2;</code>
     */
    public Builder mergeTaste(io.bloombox.schema.content.Content value) {
      if (tasteBuilder_ == null) {
        if (taste_ != null) {
          taste_ =
            io.bloombox.schema.content.Content.newBuilder(taste_).mergeFrom(value).buildPartial();
        } else {
          taste_ = value;
        }
        onChanged();
      } else {
        tasteBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.content.Content taste = 2;</code>
     */
    public Builder clearTaste() {
      if (tasteBuilder_ == null) {
        taste_ = null;
        onChanged();
      } else {
        taste_ = null;
        tasteBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.content.Content taste = 2;</code>
     */
    public io.bloombox.schema.content.Content.Builder getTasteBuilder() {
      
      onChanged();
      return getTasteFieldBuilder().getBuilder();
    }
    /**
     * <code>.content.Content taste = 2;</code>
     */
    public io.bloombox.schema.content.ContentOrBuilder getTasteOrBuilder() {
      if (tasteBuilder_ != null) {
        return tasteBuilder_.getMessageOrBuilder();
      } else {
        return taste_ == null ?
            io.bloombox.schema.content.Content.getDefaultInstance() : taste_;
      }
    }
    /**
     * <code>.content.Content taste = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.content.Content, io.bloombox.schema.content.Content.Builder, io.bloombox.schema.content.ContentOrBuilder> 
        getTasteFieldBuilder() {
      if (tasteBuilder_ == null) {
        tasteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.content.Content, io.bloombox.schema.content.Content.Builder, io.bloombox.schema.content.ContentOrBuilder>(
                getTaste(),
                getParentForChildren(),
                isClean());
        taste_ = null;
      }
      return tasteBuilder_;
    }

    private int potency_ = 0;
    /**
     * <code>.structs.labtesting.PotencyEstimate potency = 3;</code>
     */
    public int getPotencyValue() {
      return potency_;
    }
    /**
     * <code>.structs.labtesting.PotencyEstimate potency = 3;</code>
     */
    public Builder setPotencyValue(int value) {
      potency_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.structs.labtesting.PotencyEstimate potency = 3;</code>
     */
    public io.bloombox.schema.product.struct.testing.PotencyEstimate getPotency() {
      io.bloombox.schema.product.struct.testing.PotencyEstimate result = io.bloombox.schema.product.struct.testing.PotencyEstimate.valueOf(potency_);
      return result == null ? io.bloombox.schema.product.struct.testing.PotencyEstimate.UNRECOGNIZED : result;
    }
    /**
     * <code>.structs.labtesting.PotencyEstimate potency = 3;</code>
     */
    public Builder setPotency(io.bloombox.schema.product.struct.testing.PotencyEstimate value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      potency_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.structs.labtesting.PotencyEstimate potency = 3;</code>
     */
    public Builder clearPotency() {
      
      potency_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> feelingTags_ =
      java.util.Collections.emptyList();
    private void ensureFeelingTagsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        feelingTags_ = new java.util.ArrayList<java.lang.Integer>(feelingTags_);
        bitField0_ |= 0x00000008;
      }
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public java.util.List<io.bloombox.schema.product.struct.testing.Feeling> getFeelingTagsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.bloombox.schema.product.struct.testing.Feeling>(feelingTags_, feelingTags_converter_);
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public int getFeelingTagsCount() {
      return feelingTags_.size();
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public io.bloombox.schema.product.struct.testing.Feeling getFeelingTags(int index) {
      return feelingTags_converter_.convert(feelingTags_.get(index));
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public Builder setFeelingTags(
        int index, io.bloombox.schema.product.struct.testing.Feeling value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFeelingTagsIsMutable();
      feelingTags_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public Builder addFeelingTags(io.bloombox.schema.product.struct.testing.Feeling value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFeelingTagsIsMutable();
      feelingTags_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public Builder addAllFeelingTags(
        java.lang.Iterable<? extends io.bloombox.schema.product.struct.testing.Feeling> values) {
      ensureFeelingTagsIsMutable();
      for (io.bloombox.schema.product.struct.testing.Feeling value : values) {
        feelingTags_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public Builder clearFeelingTags() {
      feelingTags_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public java.util.List<java.lang.Integer>
    getFeelingTagsValueList() {
      return java.util.Collections.unmodifiableList(feelingTags_);
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public int getFeelingTagsValue(int index) {
      return feelingTags_.get(index);
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public Builder setFeelingTagsValue(
        int index, int value) {
      ensureFeelingTagsIsMutable();
      feelingTags_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public Builder addFeelingTagsValue(int value) {
      ensureFeelingTagsIsMutable();
      feelingTags_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Feeling feeling_tags = 4;</code>
     */
    public Builder addAllFeelingTagsValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureFeelingTagsIsMutable();
      for (int value : values) {
        feelingTags_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> tastingNotes_ =
      java.util.Collections.emptyList();
    private void ensureTastingNotesIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        tastingNotes_ = new java.util.ArrayList<java.lang.Integer>(tastingNotes_);
        bitField0_ |= 0x00000010;
      }
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public java.util.List<io.bloombox.schema.product.struct.testing.TasteNote> getTastingNotesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.bloombox.schema.product.struct.testing.TasteNote>(tastingNotes_, tastingNotes_converter_);
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public int getTastingNotesCount() {
      return tastingNotes_.size();
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public io.bloombox.schema.product.struct.testing.TasteNote getTastingNotes(int index) {
      return tastingNotes_converter_.convert(tastingNotes_.get(index));
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public Builder setTastingNotes(
        int index, io.bloombox.schema.product.struct.testing.TasteNote value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTastingNotesIsMutable();
      tastingNotes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public Builder addTastingNotes(io.bloombox.schema.product.struct.testing.TasteNote value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTastingNotesIsMutable();
      tastingNotes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public Builder addAllTastingNotes(
        java.lang.Iterable<? extends io.bloombox.schema.product.struct.testing.TasteNote> values) {
      ensureTastingNotesIsMutable();
      for (io.bloombox.schema.product.struct.testing.TasteNote value : values) {
        tastingNotes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public Builder clearTastingNotes() {
      tastingNotes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public java.util.List<java.lang.Integer>
    getTastingNotesValueList() {
      return java.util.Collections.unmodifiableList(tastingNotes_);
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public int getTastingNotesValue(int index) {
      return tastingNotes_.get(index);
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public Builder setTastingNotesValue(
        int index, int value) {
      ensureTastingNotesIsMutable();
      tastingNotes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public Builder addTastingNotesValue(int value) {
      ensureTastingNotesIsMutable();
      tastingNotes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.TasteNote tasting_notes = 5;</code>
     */
    public Builder addAllTastingNotesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureTastingNotesIsMutable();
      for (int value : values) {
        tastingNotes_.add(value);
      }
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:structs.labtesting.Subjective)
  }

  // @@protoc_insertion_point(class_scope:structs.labtesting.Subjective)
  private static final io.bloombox.schema.product.struct.testing.Subjective DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.product.struct.testing.Subjective();
  }

  public static io.bloombox.schema.product.struct.testing.Subjective getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Subjective>
      PARSER = new com.google.protobuf.AbstractParser<Subjective>() {
    public Subjective parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Subjective(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Subjective> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Subjective> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.product.struct.testing.Subjective getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

