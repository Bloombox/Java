/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestValue.proto

package io.bloombox.schema.product.struct.testing;

/**
 * Protobuf type {@code structs.labtesting.TestValue}
 */
public  final class TestValue extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:structs.labtesting.TestValue)
    TestValueOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestValue.newBuilder() to construct.
  private TestValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestValue() {
    type_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TestValue(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 81: {
            valueCase_ = 10;
            value_ = input.readDouble();
            break;
          }
          case 160: {
            valueCase_ = 20;
            value_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.product.struct.testing.BaseTestingSpec.internal_static_structs_labtesting_TestValue_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.product.struct.testing.BaseTestingSpec.internal_static_structs_labtesting_TestValue_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.product.struct.testing.TestValue.class, io.bloombox.schema.product.struct.testing.TestValue.Builder.class);
  }

  private int valueCase_ = 0;
  private java.lang.Object value_;
  public enum ValueCase
      implements com.google.protobuf.Internal.EnumLite {
    MEASUREMENT(10),
    PRESENT(20),
    VALUE_NOT_SET(0);
    private final int value;
    private ValueCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 10: return MEASUREMENT;
        case 20: return PRESENT;
        case 0: return VALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ValueCase
  getValueCase() {
    return ValueCase.forNumber(
        valueCase_);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <code>.structs.labtesting.TestValueType type = 1;</code>
   */
  public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.structs.labtesting.TestValueType type = 1;</code>
   */
  public io.bloombox.schema.product.struct.testing.TestValueType getType() {
    io.bloombox.schema.product.struct.testing.TestValueType result = io.bloombox.schema.product.struct.testing.TestValueType.valueOf(type_);
    return result == null ? io.bloombox.schema.product.struct.testing.TestValueType.UNRECOGNIZED : result;
  }

  public static final int MEASUREMENT_FIELD_NUMBER = 10;
  /**
   * <code>double measurement = 10;</code>
   */
  public double getMeasurement() {
    if (valueCase_ == 10) {
      return (java.lang.Double) value_;
    }
    return 0D;
  }

  public static final int PRESENT_FIELD_NUMBER = 20;
  /**
   * <code>bool present = 20;</code>
   */
  public boolean getPresent() {
    if (valueCase_ == 20) {
      return (java.lang.Boolean) value_;
    }
    return false;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != io.bloombox.schema.product.struct.testing.TestValueType.MILLIGRAMS.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (valueCase_ == 10) {
      output.writeDouble(
          10, (double)((java.lang.Double) value_));
    }
    if (valueCase_ == 20) {
      output.writeBool(
          20, (boolean)((java.lang.Boolean) value_));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != io.bloombox.schema.product.struct.testing.TestValueType.MILLIGRAMS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (valueCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            10, (double)((java.lang.Double) value_));
    }
    if (valueCase_ == 20) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            20, (boolean)((java.lang.Boolean) value_));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.product.struct.testing.TestValue)) {
      return super.equals(obj);
    }
    io.bloombox.schema.product.struct.testing.TestValue other = (io.bloombox.schema.product.struct.testing.TestValue) obj;

    boolean result = true;
    result = result && type_ == other.type_;
    result = result && getValueCase().equals(
        other.getValueCase());
    if (!result) return false;
    switch (valueCase_) {
      case 10:
        result = result && (
            java.lang.Double.doubleToLongBits(getMeasurement())
            == java.lang.Double.doubleToLongBits(
                other.getMeasurement()));
        break;
      case 20:
        result = result && (getPresent()
            == other.getPresent());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    switch (valueCase_) {
      case 10:
        hash = (37 * hash) + MEASUREMENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMeasurement()));
        break;
      case 20:
        hash = (37 * hash) + PRESENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPresent());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.TestValue parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.product.struct.testing.TestValue prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code structs.labtesting.TestValue}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:structs.labtesting.TestValue)
      io.bloombox.schema.product.struct.testing.TestValueOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.product.struct.testing.BaseTestingSpec.internal_static_structs_labtesting_TestValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.product.struct.testing.BaseTestingSpec.internal_static_structs_labtesting_TestValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.product.struct.testing.TestValue.class, io.bloombox.schema.product.struct.testing.TestValue.Builder.class);
    }

    // Construct using io.bloombox.schema.product.struct.testing.TestValue.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      type_ = 0;

      valueCase_ = 0;
      value_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.product.struct.testing.BaseTestingSpec.internal_static_structs_labtesting_TestValue_descriptor;
    }

    public io.bloombox.schema.product.struct.testing.TestValue getDefaultInstanceForType() {
      return io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance();
    }

    public io.bloombox.schema.product.struct.testing.TestValue build() {
      io.bloombox.schema.product.struct.testing.TestValue result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.product.struct.testing.TestValue buildPartial() {
      io.bloombox.schema.product.struct.testing.TestValue result = new io.bloombox.schema.product.struct.testing.TestValue(this);
      result.type_ = type_;
      if (valueCase_ == 10) {
        result.value_ = value_;
      }
      if (valueCase_ == 20) {
        result.value_ = value_;
      }
      result.valueCase_ = valueCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.product.struct.testing.TestValue) {
        return mergeFrom((io.bloombox.schema.product.struct.testing.TestValue)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.product.struct.testing.TestValue other) {
      if (other == io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      switch (other.getValueCase()) {
        case MEASUREMENT: {
          setMeasurement(other.getMeasurement());
          break;
        }
        case PRESENT: {
          setPresent(other.getPresent());
          break;
        }
        case VALUE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.product.struct.testing.TestValue parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.product.struct.testing.TestValue) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int valueCase_ = 0;
    private java.lang.Object value_;
    public ValueCase
        getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public Builder clearValue() {
      valueCase_ = 0;
      value_ = null;
      onChanged();
      return this;
    }


    private int type_ = 0;
    /**
     * <code>.structs.labtesting.TestValueType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.structs.labtesting.TestValueType type = 1;</code>
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.structs.labtesting.TestValueType type = 1;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValueType getType() {
      io.bloombox.schema.product.struct.testing.TestValueType result = io.bloombox.schema.product.struct.testing.TestValueType.valueOf(type_);
      return result == null ? io.bloombox.schema.product.struct.testing.TestValueType.UNRECOGNIZED : result;
    }
    /**
     * <code>.structs.labtesting.TestValueType type = 1;</code>
     */
    public Builder setType(io.bloombox.schema.product.struct.testing.TestValueType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.structs.labtesting.TestValueType type = 1;</code>
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    /**
     * <code>double measurement = 10;</code>
     */
    public double getMeasurement() {
      if (valueCase_ == 10) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }
    /**
     * <code>double measurement = 10;</code>
     */
    public Builder setMeasurement(double value) {
      valueCase_ = 10;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double measurement = 10;</code>
     */
    public Builder clearMeasurement() {
      if (valueCase_ == 10) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>bool present = 20;</code>
     */
    public boolean getPresent() {
      if (valueCase_ == 20) {
        return (java.lang.Boolean) value_;
      }
      return false;
    }
    /**
     * <code>bool present = 20;</code>
     */
    public Builder setPresent(boolean value) {
      valueCase_ = 20;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool present = 20;</code>
     */
    public Builder clearPresent() {
      if (valueCase_ == 20) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:structs.labtesting.TestValue)
  }

  // @@protoc_insertion_point(class_scope:structs.labtesting.TestValue)
  private static final io.bloombox.schema.product.struct.testing.TestValue DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.product.struct.testing.TestValue();
  }

  public static io.bloombox.schema.product.struct.testing.TestValue getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestValue>
      PARSER = new com.google.protobuf.AbstractParser<TestValue>() {
    public TestValue parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TestValue(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TestValue> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestValue> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.product.struct.testing.TestValue getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

