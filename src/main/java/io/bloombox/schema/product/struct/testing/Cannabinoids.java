/*
 * Copyright 2017, Bloombox, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestResults.proto

package io.bloombox.schema.product.struct.testing;

/**
 * Protobuf type {@code structs.labtesting.Cannabinoids}
 */
public  final class Cannabinoids extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:structs.labtesting.Cannabinoids)
    CannabinoidsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Cannabinoids.newBuilder() to construct.
  private Cannabinoids(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Cannabinoids() {
    results_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Cannabinoids(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.bloombox.schema.product.struct.testing.TestValue.Builder subBuilder = null;
            if (thc_ != null) {
              subBuilder = thc_.toBuilder();
            }
            thc_ = input.readMessage(io.bloombox.schema.product.struct.testing.TestValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(thc_);
              thc_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.bloombox.schema.product.struct.testing.TestValue.Builder subBuilder = null;
            if (cbd_ != null) {
              subBuilder = cbd_.toBuilder();
            }
            cbd_ = input.readMessage(io.bloombox.schema.product.struct.testing.TestValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(cbd_);
              cbd_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              results_ = new java.util.ArrayList<io.bloombox.schema.product.struct.testing.Cannabinoids.Result>();
              mutable_bitField0_ |= 0x00000004;
            }
            results_.add(
                input.readMessage(io.bloombox.schema.product.struct.testing.Cannabinoids.Result.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        results_ = java.util.Collections.unmodifiableList(results_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.product.struct.testing.Cannabinoids.class, io.bloombox.schema.product.struct.testing.Cannabinoids.Builder.class);
  }

  public interface ResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:structs.labtesting.Cannabinoids.Result)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
     */
    int getCannabinoidValue();
    /**
     * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
     */
    io.bloombox.schema.product.struct.testing.Cannabinoid getCannabinoid();

    /**
     * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
     */
    int getRatioValue();
    /**
     * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
     */
    io.bloombox.schema.product.struct.testing.CannabinoidRatio getRatio();

    /**
     * <code>.structs.labtesting.TestValue measurement = 3;</code>
     */
    boolean hasMeasurement();
    /**
     * <code>.structs.labtesting.TestValue measurement = 3;</code>
     */
    io.bloombox.schema.product.struct.testing.TestValue getMeasurement();
    /**
     * <code>.structs.labtesting.TestValue measurement = 3;</code>
     */
    io.bloombox.schema.product.struct.testing.TestValueOrBuilder getMeasurementOrBuilder();
  }
  /**
   * Protobuf type {@code structs.labtesting.Cannabinoids.Result}
   */
  public  static final class Result extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:structs.labtesting.Cannabinoids.Result)
      ResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Result.newBuilder() to construct.
    private Result(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Result() {
      cannabinoid_ = 0;
      ratio_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              cannabinoid_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              ratio_ = rawValue;
              break;
            }
            case 26: {
              io.bloombox.schema.product.struct.testing.TestValue.Builder subBuilder = null;
              if (measurement_ != null) {
                subBuilder = measurement_.toBuilder();
              }
              measurement_ = input.readMessage(io.bloombox.schema.product.struct.testing.TestValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(measurement_);
                measurement_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.product.struct.testing.Cannabinoids.Result.class, io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder.class);
    }

    public static final int CANNABINOID_FIELD_NUMBER = 1;
    private int cannabinoid_;
    /**
     * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
     */
    public int getCannabinoidValue() {
      return cannabinoid_;
    }
    /**
     * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
     */
    public io.bloombox.schema.product.struct.testing.Cannabinoid getCannabinoid() {
      io.bloombox.schema.product.struct.testing.Cannabinoid result = io.bloombox.schema.product.struct.testing.Cannabinoid.valueOf(cannabinoid_);
      return result == null ? io.bloombox.schema.product.struct.testing.Cannabinoid.UNRECOGNIZED : result;
    }

    public static final int RATIO_FIELD_NUMBER = 2;
    private int ratio_;
    /**
     * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
     */
    public int getRatioValue() {
      return ratio_;
    }
    /**
     * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
     */
    public io.bloombox.schema.product.struct.testing.CannabinoidRatio getRatio() {
      io.bloombox.schema.product.struct.testing.CannabinoidRatio result = io.bloombox.schema.product.struct.testing.CannabinoidRatio.valueOf(ratio_);
      return result == null ? io.bloombox.schema.product.struct.testing.CannabinoidRatio.UNRECOGNIZED : result;
    }

    public static final int MEASUREMENT_FIELD_NUMBER = 3;
    private io.bloombox.schema.product.struct.testing.TestValue measurement_;
    /**
     * <code>.structs.labtesting.TestValue measurement = 3;</code>
     */
    public boolean hasMeasurement() {
      return measurement_ != null;
    }
    /**
     * <code>.structs.labtesting.TestValue measurement = 3;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValue getMeasurement() {
      return measurement_ == null ? io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : measurement_;
    }
    /**
     * <code>.structs.labtesting.TestValue measurement = 3;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValueOrBuilder getMeasurementOrBuilder() {
      return getMeasurement();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cannabinoid_ != io.bloombox.schema.product.struct.testing.Cannabinoid.THC.getNumber()) {
        output.writeEnum(1, cannabinoid_);
      }
      if (ratio_ != io.bloombox.schema.product.struct.testing.CannabinoidRatio.NO_CANNABINOID_PREFERENCE.getNumber()) {
        output.writeEnum(2, ratio_);
      }
      if (measurement_ != null) {
        output.writeMessage(3, getMeasurement());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cannabinoid_ != io.bloombox.schema.product.struct.testing.Cannabinoid.THC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cannabinoid_);
      }
      if (ratio_ != io.bloombox.schema.product.struct.testing.CannabinoidRatio.NO_CANNABINOID_PREFERENCE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ratio_);
      }
      if (measurement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMeasurement());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.product.struct.testing.Cannabinoids.Result)) {
        return super.equals(obj);
      }
      io.bloombox.schema.product.struct.testing.Cannabinoids.Result other = (io.bloombox.schema.product.struct.testing.Cannabinoids.Result) obj;

      boolean result = true;
      result = result && cannabinoid_ == other.cannabinoid_;
      result = result && ratio_ == other.ratio_;
      result = result && (hasMeasurement() == other.hasMeasurement());
      if (hasMeasurement()) {
        result = result && getMeasurement()
            .equals(other.getMeasurement());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CANNABINOID_FIELD_NUMBER;
      hash = (53 * hash) + cannabinoid_;
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + ratio_;
      if (hasMeasurement()) {
        hash = (37 * hash) + MEASUREMENT_FIELD_NUMBER;
        hash = (53 * hash) + getMeasurement().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.product.struct.testing.Cannabinoids.Result prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code structs.labtesting.Cannabinoids.Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:structs.labtesting.Cannabinoids.Result)
        io.bloombox.schema.product.struct.testing.Cannabinoids.ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.product.struct.testing.Cannabinoids.Result.class, io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder.class);
      }

      // Construct using io.bloombox.schema.product.struct.testing.Cannabinoids.Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        cannabinoid_ = 0;

        ratio_ = 0;

        if (measurementBuilder_ == null) {
          measurement_ = null;
        } else {
          measurement_ = null;
          measurementBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_Result_descriptor;
      }

      public io.bloombox.schema.product.struct.testing.Cannabinoids.Result getDefaultInstanceForType() {
        return io.bloombox.schema.product.struct.testing.Cannabinoids.Result.getDefaultInstance();
      }

      public io.bloombox.schema.product.struct.testing.Cannabinoids.Result build() {
        io.bloombox.schema.product.struct.testing.Cannabinoids.Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.product.struct.testing.Cannabinoids.Result buildPartial() {
        io.bloombox.schema.product.struct.testing.Cannabinoids.Result result = new io.bloombox.schema.product.struct.testing.Cannabinoids.Result(this);
        result.cannabinoid_ = cannabinoid_;
        result.ratio_ = ratio_;
        if (measurementBuilder_ == null) {
          result.measurement_ = measurement_;
        } else {
          result.measurement_ = measurementBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.product.struct.testing.Cannabinoids.Result) {
          return mergeFrom((io.bloombox.schema.product.struct.testing.Cannabinoids.Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.product.struct.testing.Cannabinoids.Result other) {
        if (other == io.bloombox.schema.product.struct.testing.Cannabinoids.Result.getDefaultInstance()) return this;
        if (other.cannabinoid_ != 0) {
          setCannabinoidValue(other.getCannabinoidValue());
        }
        if (other.ratio_ != 0) {
          setRatioValue(other.getRatioValue());
        }
        if (other.hasMeasurement()) {
          mergeMeasurement(other.getMeasurement());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.product.struct.testing.Cannabinoids.Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.product.struct.testing.Cannabinoids.Result) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int cannabinoid_ = 0;
      /**
       * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
       */
      public int getCannabinoidValue() {
        return cannabinoid_;
      }
      /**
       * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
       */
      public Builder setCannabinoidValue(int value) {
        cannabinoid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
       */
      public io.bloombox.schema.product.struct.testing.Cannabinoid getCannabinoid() {
        io.bloombox.schema.product.struct.testing.Cannabinoid result = io.bloombox.schema.product.struct.testing.Cannabinoid.valueOf(cannabinoid_);
        return result == null ? io.bloombox.schema.product.struct.testing.Cannabinoid.UNRECOGNIZED : result;
      }
      /**
       * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
       */
      public Builder setCannabinoid(io.bloombox.schema.product.struct.testing.Cannabinoid value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cannabinoid_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.structs.labtesting.Cannabinoid cannabinoid = 1;</code>
       */
      public Builder clearCannabinoid() {
        
        cannabinoid_ = 0;
        onChanged();
        return this;
      }

      private int ratio_ = 0;
      /**
       * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
       */
      public int getRatioValue() {
        return ratio_;
      }
      /**
       * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
       */
      public Builder setRatioValue(int value) {
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
       */
      public io.bloombox.schema.product.struct.testing.CannabinoidRatio getRatio() {
        io.bloombox.schema.product.struct.testing.CannabinoidRatio result = io.bloombox.schema.product.struct.testing.CannabinoidRatio.valueOf(ratio_);
        return result == null ? io.bloombox.schema.product.struct.testing.CannabinoidRatio.UNRECOGNIZED : result;
      }
      /**
       * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
       */
      public Builder setRatio(io.bloombox.schema.product.struct.testing.CannabinoidRatio value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        ratio_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.structs.labtesting.CannabinoidRatio ratio = 2;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0;
        onChanged();
        return this;
      }

      private io.bloombox.schema.product.struct.testing.TestValue measurement_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder> measurementBuilder_;
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      public boolean hasMeasurement() {
        return measurementBuilder_ != null || measurement_ != null;
      }
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      public io.bloombox.schema.product.struct.testing.TestValue getMeasurement() {
        if (measurementBuilder_ == null) {
          return measurement_ == null ? io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : measurement_;
        } else {
          return measurementBuilder_.getMessage();
        }
      }
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      public Builder setMeasurement(io.bloombox.schema.product.struct.testing.TestValue value) {
        if (measurementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          measurement_ = value;
          onChanged();
        } else {
          measurementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      public Builder setMeasurement(
          io.bloombox.schema.product.struct.testing.TestValue.Builder builderForValue) {
        if (measurementBuilder_ == null) {
          measurement_ = builderForValue.build();
          onChanged();
        } else {
          measurementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      public Builder mergeMeasurement(io.bloombox.schema.product.struct.testing.TestValue value) {
        if (measurementBuilder_ == null) {
          if (measurement_ != null) {
            measurement_ =
              io.bloombox.schema.product.struct.testing.TestValue.newBuilder(measurement_).mergeFrom(value).buildPartial();
          } else {
            measurement_ = value;
          }
          onChanged();
        } else {
          measurementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      public Builder clearMeasurement() {
        if (measurementBuilder_ == null) {
          measurement_ = null;
          onChanged();
        } else {
          measurement_ = null;
          measurementBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      public io.bloombox.schema.product.struct.testing.TestValue.Builder getMeasurementBuilder() {
        
        onChanged();
        return getMeasurementFieldBuilder().getBuilder();
      }
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      public io.bloombox.schema.product.struct.testing.TestValueOrBuilder getMeasurementOrBuilder() {
        if (measurementBuilder_ != null) {
          return measurementBuilder_.getMessageOrBuilder();
        } else {
          return measurement_ == null ?
              io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : measurement_;
        }
      }
      /**
       * <code>.structs.labtesting.TestValue measurement = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder> 
          getMeasurementFieldBuilder() {
        if (measurementBuilder_ == null) {
          measurementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder>(
                  getMeasurement(),
                  getParentForChildren(),
                  isClean());
          measurement_ = null;
        }
        return measurementBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:structs.labtesting.Cannabinoids.Result)
    }

    // @@protoc_insertion_point(class_scope:structs.labtesting.Cannabinoids.Result)
    private static final io.bloombox.schema.product.struct.testing.Cannabinoids.Result DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.product.struct.testing.Cannabinoids.Result();
    }

    public static io.bloombox.schema.product.struct.testing.Cannabinoids.Result getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Result>
        PARSER = new com.google.protobuf.AbstractParser<Result>() {
      public Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Result(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Result> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Result> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.product.struct.testing.Cannabinoids.Result getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int THC_FIELD_NUMBER = 1;
  private io.bloombox.schema.product.struct.testing.TestValue thc_;
  /**
   * <code>.structs.labtesting.TestValue thc = 1;</code>
   */
  public boolean hasThc() {
    return thc_ != null;
  }
  /**
   * <code>.structs.labtesting.TestValue thc = 1;</code>
   */
  public io.bloombox.schema.product.struct.testing.TestValue getThc() {
    return thc_ == null ? io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : thc_;
  }
  /**
   * <code>.structs.labtesting.TestValue thc = 1;</code>
   */
  public io.bloombox.schema.product.struct.testing.TestValueOrBuilder getThcOrBuilder() {
    return getThc();
  }

  public static final int CBD_FIELD_NUMBER = 2;
  private io.bloombox.schema.product.struct.testing.TestValue cbd_;
  /**
   * <code>.structs.labtesting.TestValue cbd = 2;</code>
   */
  public boolean hasCbd() {
    return cbd_ != null;
  }
  /**
   * <code>.structs.labtesting.TestValue cbd = 2;</code>
   */
  public io.bloombox.schema.product.struct.testing.TestValue getCbd() {
    return cbd_ == null ? io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : cbd_;
  }
  /**
   * <code>.structs.labtesting.TestValue cbd = 2;</code>
   */
  public io.bloombox.schema.product.struct.testing.TestValueOrBuilder getCbdOrBuilder() {
    return getCbd();
  }

  public static final int RESULTS_FIELD_NUMBER = 3;
  private java.util.List<io.bloombox.schema.product.struct.testing.Cannabinoids.Result> results_;
  /**
   * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  public java.util.List<io.bloombox.schema.product.struct.testing.Cannabinoids.Result> getResultsList() {
    return results_;
  }
  /**
   * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  public java.util.List<? extends io.bloombox.schema.product.struct.testing.Cannabinoids.ResultOrBuilder> 
      getResultsOrBuilderList() {
    return results_;
  }
  /**
   * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  public int getResultsCount() {
    return results_.size();
  }
  /**
   * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  public io.bloombox.schema.product.struct.testing.Cannabinoids.Result getResults(int index) {
    return results_.get(index);
  }
  /**
   * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
   */
  public io.bloombox.schema.product.struct.testing.Cannabinoids.ResultOrBuilder getResultsOrBuilder(
      int index) {
    return results_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (thc_ != null) {
      output.writeMessage(1, getThc());
    }
    if (cbd_ != null) {
      output.writeMessage(2, getCbd());
    }
    for (int i = 0; i < results_.size(); i++) {
      output.writeMessage(3, results_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (thc_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getThc());
    }
    if (cbd_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCbd());
    }
    for (int i = 0; i < results_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, results_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.product.struct.testing.Cannabinoids)) {
      return super.equals(obj);
    }
    io.bloombox.schema.product.struct.testing.Cannabinoids other = (io.bloombox.schema.product.struct.testing.Cannabinoids) obj;

    boolean result = true;
    result = result && (hasThc() == other.hasThc());
    if (hasThc()) {
      result = result && getThc()
          .equals(other.getThc());
    }
    result = result && (hasCbd() == other.hasCbd());
    if (hasCbd()) {
      result = result && getCbd()
          .equals(other.getCbd());
    }
    result = result && getResultsList()
        .equals(other.getResultsList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasThc()) {
      hash = (37 * hash) + THC_FIELD_NUMBER;
      hash = (53 * hash) + getThc().hashCode();
    }
    if (hasCbd()) {
      hash = (37 * hash) + CBD_FIELD_NUMBER;
      hash = (53 * hash) + getCbd().hashCode();
    }
    if (getResultsCount() > 0) {
      hash = (37 * hash) + RESULTS_FIELD_NUMBER;
      hash = (53 * hash) + getResultsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Cannabinoids parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.product.struct.testing.Cannabinoids prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code structs.labtesting.Cannabinoids}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:structs.labtesting.Cannabinoids)
      io.bloombox.schema.product.struct.testing.CannabinoidsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.product.struct.testing.Cannabinoids.class, io.bloombox.schema.product.struct.testing.Cannabinoids.Builder.class);
    }

    // Construct using io.bloombox.schema.product.struct.testing.Cannabinoids.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getResultsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (thcBuilder_ == null) {
        thc_ = null;
      } else {
        thc_ = null;
        thcBuilder_ = null;
      }
      if (cbdBuilder_ == null) {
        cbd_ = null;
      } else {
        cbd_ = null;
        cbdBuilder_ = null;
      }
      if (resultsBuilder_ == null) {
        results_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        resultsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Cannabinoids_descriptor;
    }

    public io.bloombox.schema.product.struct.testing.Cannabinoids getDefaultInstanceForType() {
      return io.bloombox.schema.product.struct.testing.Cannabinoids.getDefaultInstance();
    }

    public io.bloombox.schema.product.struct.testing.Cannabinoids build() {
      io.bloombox.schema.product.struct.testing.Cannabinoids result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.product.struct.testing.Cannabinoids buildPartial() {
      io.bloombox.schema.product.struct.testing.Cannabinoids result = new io.bloombox.schema.product.struct.testing.Cannabinoids(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (thcBuilder_ == null) {
        result.thc_ = thc_;
      } else {
        result.thc_ = thcBuilder_.build();
      }
      if (cbdBuilder_ == null) {
        result.cbd_ = cbd_;
      } else {
        result.cbd_ = cbdBuilder_.build();
      }
      if (resultsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          results_ = java.util.Collections.unmodifiableList(results_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.results_ = results_;
      } else {
        result.results_ = resultsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.product.struct.testing.Cannabinoids) {
        return mergeFrom((io.bloombox.schema.product.struct.testing.Cannabinoids)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.product.struct.testing.Cannabinoids other) {
      if (other == io.bloombox.schema.product.struct.testing.Cannabinoids.getDefaultInstance()) return this;
      if (other.hasThc()) {
        mergeThc(other.getThc());
      }
      if (other.hasCbd()) {
        mergeCbd(other.getCbd());
      }
      if (resultsBuilder_ == null) {
        if (!other.results_.isEmpty()) {
          if (results_.isEmpty()) {
            results_ = other.results_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureResultsIsMutable();
            results_.addAll(other.results_);
          }
          onChanged();
        }
      } else {
        if (!other.results_.isEmpty()) {
          if (resultsBuilder_.isEmpty()) {
            resultsBuilder_.dispose();
            resultsBuilder_ = null;
            results_ = other.results_;
            bitField0_ = (bitField0_ & ~0x00000004);
            resultsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getResultsFieldBuilder() : null;
          } else {
            resultsBuilder_.addAllMessages(other.results_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.product.struct.testing.Cannabinoids parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.product.struct.testing.Cannabinoids) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private io.bloombox.schema.product.struct.testing.TestValue thc_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder> thcBuilder_;
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    public boolean hasThc() {
      return thcBuilder_ != null || thc_ != null;
    }
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValue getThc() {
      if (thcBuilder_ == null) {
        return thc_ == null ? io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : thc_;
      } else {
        return thcBuilder_.getMessage();
      }
    }
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    public Builder setThc(io.bloombox.schema.product.struct.testing.TestValue value) {
      if (thcBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        thc_ = value;
        onChanged();
      } else {
        thcBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    public Builder setThc(
        io.bloombox.schema.product.struct.testing.TestValue.Builder builderForValue) {
      if (thcBuilder_ == null) {
        thc_ = builderForValue.build();
        onChanged();
      } else {
        thcBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    public Builder mergeThc(io.bloombox.schema.product.struct.testing.TestValue value) {
      if (thcBuilder_ == null) {
        if (thc_ != null) {
          thc_ =
            io.bloombox.schema.product.struct.testing.TestValue.newBuilder(thc_).mergeFrom(value).buildPartial();
        } else {
          thc_ = value;
        }
        onChanged();
      } else {
        thcBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    public Builder clearThc() {
      if (thcBuilder_ == null) {
        thc_ = null;
        onChanged();
      } else {
        thc_ = null;
        thcBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValue.Builder getThcBuilder() {
      
      onChanged();
      return getThcFieldBuilder().getBuilder();
    }
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValueOrBuilder getThcOrBuilder() {
      if (thcBuilder_ != null) {
        return thcBuilder_.getMessageOrBuilder();
      } else {
        return thc_ == null ?
            io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : thc_;
      }
    }
    /**
     * <code>.structs.labtesting.TestValue thc = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder> 
        getThcFieldBuilder() {
      if (thcBuilder_ == null) {
        thcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder>(
                getThc(),
                getParentForChildren(),
                isClean());
        thc_ = null;
      }
      return thcBuilder_;
    }

    private io.bloombox.schema.product.struct.testing.TestValue cbd_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder> cbdBuilder_;
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    public boolean hasCbd() {
      return cbdBuilder_ != null || cbd_ != null;
    }
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValue getCbd() {
      if (cbdBuilder_ == null) {
        return cbd_ == null ? io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : cbd_;
      } else {
        return cbdBuilder_.getMessage();
      }
    }
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    public Builder setCbd(io.bloombox.schema.product.struct.testing.TestValue value) {
      if (cbdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cbd_ = value;
        onChanged();
      } else {
        cbdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    public Builder setCbd(
        io.bloombox.schema.product.struct.testing.TestValue.Builder builderForValue) {
      if (cbdBuilder_ == null) {
        cbd_ = builderForValue.build();
        onChanged();
      } else {
        cbdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    public Builder mergeCbd(io.bloombox.schema.product.struct.testing.TestValue value) {
      if (cbdBuilder_ == null) {
        if (cbd_ != null) {
          cbd_ =
            io.bloombox.schema.product.struct.testing.TestValue.newBuilder(cbd_).mergeFrom(value).buildPartial();
        } else {
          cbd_ = value;
        }
        onChanged();
      } else {
        cbdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    public Builder clearCbd() {
      if (cbdBuilder_ == null) {
        cbd_ = null;
        onChanged();
      } else {
        cbd_ = null;
        cbdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValue.Builder getCbdBuilder() {
      
      onChanged();
      return getCbdFieldBuilder().getBuilder();
    }
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    public io.bloombox.schema.product.struct.testing.TestValueOrBuilder getCbdOrBuilder() {
      if (cbdBuilder_ != null) {
        return cbdBuilder_.getMessageOrBuilder();
      } else {
        return cbd_ == null ?
            io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance() : cbd_;
      }
    }
    /**
     * <code>.structs.labtesting.TestValue cbd = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder> 
        getCbdFieldBuilder() {
      if (cbdBuilder_ == null) {
        cbdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.bloombox.schema.product.struct.testing.TestValue, io.bloombox.schema.product.struct.testing.TestValue.Builder, io.bloombox.schema.product.struct.testing.TestValueOrBuilder>(
                getCbd(),
                getParentForChildren(),
                isClean());
        cbd_ = null;
      }
      return cbdBuilder_;
    }

    private java.util.List<io.bloombox.schema.product.struct.testing.Cannabinoids.Result> results_ =
      java.util.Collections.emptyList();
    private void ensureResultsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        results_ = new java.util.ArrayList<io.bloombox.schema.product.struct.testing.Cannabinoids.Result>(results_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.bloombox.schema.product.struct.testing.Cannabinoids.Result, io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder, io.bloombox.schema.product.struct.testing.Cannabinoids.ResultOrBuilder> resultsBuilder_;

    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public java.util.List<io.bloombox.schema.product.struct.testing.Cannabinoids.Result> getResultsList() {
      if (resultsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(results_);
      } else {
        return resultsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public int getResultsCount() {
      if (resultsBuilder_ == null) {
        return results_.size();
      } else {
        return resultsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public io.bloombox.schema.product.struct.testing.Cannabinoids.Result getResults(int index) {
      if (resultsBuilder_ == null) {
        return results_.get(index);
      } else {
        return resultsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder setResults(
        int index, io.bloombox.schema.product.struct.testing.Cannabinoids.Result value) {
      if (resultsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResultsIsMutable();
        results_.set(index, value);
        onChanged();
      } else {
        resultsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder setResults(
        int index, io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder builderForValue) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        results_.set(index, builderForValue.build());
        onChanged();
      } else {
        resultsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder addResults(io.bloombox.schema.product.struct.testing.Cannabinoids.Result value) {
      if (resultsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResultsIsMutable();
        results_.add(value);
        onChanged();
      } else {
        resultsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder addResults(
        int index, io.bloombox.schema.product.struct.testing.Cannabinoids.Result value) {
      if (resultsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResultsIsMutable();
        results_.add(index, value);
        onChanged();
      } else {
        resultsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder addResults(
        io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder builderForValue) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        results_.add(builderForValue.build());
        onChanged();
      } else {
        resultsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder addResults(
        int index, io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder builderForValue) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        results_.add(index, builderForValue.build());
        onChanged();
      } else {
        resultsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder addAllResults(
        java.lang.Iterable<? extends io.bloombox.schema.product.struct.testing.Cannabinoids.Result> values) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, results_);
        onChanged();
      } else {
        resultsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder clearResults() {
      if (resultsBuilder_ == null) {
        results_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        resultsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public Builder removeResults(int index) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        results_.remove(index);
        onChanged();
      } else {
        resultsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder getResultsBuilder(
        int index) {
      return getResultsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public io.bloombox.schema.product.struct.testing.Cannabinoids.ResultOrBuilder getResultsOrBuilder(
        int index) {
      if (resultsBuilder_ == null) {
        return results_.get(index);  } else {
        return resultsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public java.util.List<? extends io.bloombox.schema.product.struct.testing.Cannabinoids.ResultOrBuilder> 
         getResultsOrBuilderList() {
      if (resultsBuilder_ != null) {
        return resultsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(results_);
      }
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder addResultsBuilder() {
      return getResultsFieldBuilder().addBuilder(
          io.bloombox.schema.product.struct.testing.Cannabinoids.Result.getDefaultInstance());
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder addResultsBuilder(
        int index) {
      return getResultsFieldBuilder().addBuilder(
          index, io.bloombox.schema.product.struct.testing.Cannabinoids.Result.getDefaultInstance());
    }
    /**
     * <code>repeated .structs.labtesting.Cannabinoids.Result results = 3;</code>
     */
    public java.util.List<io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder> 
         getResultsBuilderList() {
      return getResultsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.bloombox.schema.product.struct.testing.Cannabinoids.Result, io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder, io.bloombox.schema.product.struct.testing.Cannabinoids.ResultOrBuilder> 
        getResultsFieldBuilder() {
      if (resultsBuilder_ == null) {
        resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.bloombox.schema.product.struct.testing.Cannabinoids.Result, io.bloombox.schema.product.struct.testing.Cannabinoids.Result.Builder, io.bloombox.schema.product.struct.testing.Cannabinoids.ResultOrBuilder>(
                results_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        results_ = null;
      }
      return resultsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:structs.labtesting.Cannabinoids)
  }

  // @@protoc_insertion_point(class_scope:structs.labtesting.Cannabinoids)
  private static final io.bloombox.schema.product.struct.testing.Cannabinoids DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.product.struct.testing.Cannabinoids();
  }

  public static io.bloombox.schema.product.struct.testing.Cannabinoids getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Cannabinoids>
      PARSER = new com.google.protobuf.AbstractParser<Cannabinoids>() {
    public Cannabinoids parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Cannabinoids(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Cannabinoids> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Cannabinoids> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.product.struct.testing.Cannabinoids getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

