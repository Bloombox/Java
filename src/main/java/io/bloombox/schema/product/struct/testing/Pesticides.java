// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/labtesting/TestResults.proto

package io.bloombox.schema.product.struct.testing;

/**
 * <pre>
 * -- Testing: Pesticides
 * </pre>
 *
 * Protobuf type {@code structs.labtesting.Pesticides}
 */
public  final class Pesticides extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:structs.labtesting.Pesticides)
    PesticidesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Pesticides.newBuilder() to construct.
  private Pesticides(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Pesticides() {
    pesticideFree_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Pesticides(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            pesticideFree_ = input.readBool();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              measurements_ = com.google.protobuf.MapField.newMapField(
                  MeasurementsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue>
            measurements__ = input.readMessage(
                MeasurementsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            measurements_.getMutableMap().put(
                measurements__.getKey(), measurements__.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Pesticides_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetMeasurements();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Pesticides_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bloombox.schema.product.struct.testing.Pesticides.class, io.bloombox.schema.product.struct.testing.Pesticides.Builder.class);
  }

  private int bitField0_;
  public static final int PESTICIDE_FREE_FIELD_NUMBER = 1;
  private boolean pesticideFree_;
  /**
   * <code>bool pesticide_free = 1;</code>
   */
  public boolean getPesticideFree() {
    return pesticideFree_;
  }

  public static final int MEASUREMENTS_FIELD_NUMBER = 2;
  private static final class MeasurementsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue>newDefaultInstance(
                io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Pesticides_MeasurementsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.bloombox.schema.product.struct.testing.TestValue.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> measurements_;
  private com.google.protobuf.MapField<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue>
  internalGetMeasurements() {
    if (measurements_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          MeasurementsDefaultEntryHolder.defaultEntry);
    }
    return measurements_;
  }

  public int getMeasurementsCount() {
    return internalGetMeasurements().getMap().size();
  }
  /**
   * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
   */

  public boolean containsMeasurements(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetMeasurements().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMeasurementsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> getMeasurements() {
    return getMeasurementsMap();
  }
  /**
   * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
   */

  public java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> getMeasurementsMap() {
    return internalGetMeasurements().getMap();
  }
  /**
   * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
   */

  public io.bloombox.schema.product.struct.testing.TestValue getMeasurementsOrDefault(
      java.lang.String key,
      io.bloombox.schema.product.struct.testing.TestValue defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> map =
        internalGetMeasurements().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
   */

  public io.bloombox.schema.product.struct.testing.TestValue getMeasurementsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> map =
        internalGetMeasurements().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pesticideFree_ != false) {
      output.writeBool(1, pesticideFree_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetMeasurements(),
        MeasurementsDefaultEntryHolder.defaultEntry,
        2);
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pesticideFree_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, pesticideFree_);
    }
    for (java.util.Map.Entry<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> entry
         : internalGetMeasurements().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue>
      measurements__ = MeasurementsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, measurements__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bloombox.schema.product.struct.testing.Pesticides)) {
      return super.equals(obj);
    }
    io.bloombox.schema.product.struct.testing.Pesticides other = (io.bloombox.schema.product.struct.testing.Pesticides) obj;

    boolean result = true;
    result = result && (getPesticideFree()
        == other.getPesticideFree());
    result = result && internalGetMeasurements().equals(
        other.internalGetMeasurements());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PESTICIDE_FREE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPesticideFree());
    if (!internalGetMeasurements().getMap().isEmpty()) {
      hash = (37 * hash) + MEASUREMENTS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMeasurements().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bloombox.schema.product.struct.testing.Pesticides parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bloombox.schema.product.struct.testing.Pesticides prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * -- Testing: Pesticides
   * </pre>
   *
   * Protobuf type {@code structs.labtesting.Pesticides}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:structs.labtesting.Pesticides)
      io.bloombox.schema.product.struct.testing.PesticidesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Pesticides_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMeasurements();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableMeasurements();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Pesticides_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.product.struct.testing.Pesticides.class, io.bloombox.schema.product.struct.testing.Pesticides.Builder.class);
    }

    // Construct using io.bloombox.schema.product.struct.testing.Pesticides.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      pesticideFree_ = false;

      internalGetMutableMeasurements().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bloombox.schema.product.struct.testing.LabTesting.internal_static_structs_labtesting_Pesticides_descriptor;
    }

    public io.bloombox.schema.product.struct.testing.Pesticides getDefaultInstanceForType() {
      return io.bloombox.schema.product.struct.testing.Pesticides.getDefaultInstance();
    }

    public io.bloombox.schema.product.struct.testing.Pesticides build() {
      io.bloombox.schema.product.struct.testing.Pesticides result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.bloombox.schema.product.struct.testing.Pesticides buildPartial() {
      io.bloombox.schema.product.struct.testing.Pesticides result = new io.bloombox.schema.product.struct.testing.Pesticides(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.pesticideFree_ = pesticideFree_;
      result.measurements_ = internalGetMeasurements();
      result.measurements_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bloombox.schema.product.struct.testing.Pesticides) {
        return mergeFrom((io.bloombox.schema.product.struct.testing.Pesticides)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bloombox.schema.product.struct.testing.Pesticides other) {
      if (other == io.bloombox.schema.product.struct.testing.Pesticides.getDefaultInstance()) return this;
      if (other.getPesticideFree() != false) {
        setPesticideFree(other.getPesticideFree());
      }
      internalGetMutableMeasurements().mergeFrom(
          other.internalGetMeasurements());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bloombox.schema.product.struct.testing.Pesticides parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bloombox.schema.product.struct.testing.Pesticides) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean pesticideFree_ ;
    /**
     * <code>bool pesticide_free = 1;</code>
     */
    public boolean getPesticideFree() {
      return pesticideFree_;
    }
    /**
     * <code>bool pesticide_free = 1;</code>
     */
    public Builder setPesticideFree(boolean value) {
      
      pesticideFree_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool pesticide_free = 1;</code>
     */
    public Builder clearPesticideFree() {
      
      pesticideFree_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> measurements_;
    private com.google.protobuf.MapField<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue>
    internalGetMeasurements() {
      if (measurements_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MeasurementsDefaultEntryHolder.defaultEntry);
      }
      return measurements_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue>
    internalGetMutableMeasurements() {
      onChanged();;
      if (measurements_ == null) {
        measurements_ = com.google.protobuf.MapField.newMapField(
            MeasurementsDefaultEntryHolder.defaultEntry);
      }
      if (!measurements_.isMutable()) {
        measurements_ = measurements_.copy();
      }
      return measurements_;
    }

    public int getMeasurementsCount() {
      return internalGetMeasurements().getMap().size();
    }
    /**
     * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
     */

    public boolean containsMeasurements(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMeasurements().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMeasurementsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> getMeasurements() {
      return getMeasurementsMap();
    }
    /**
     * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
     */

    public java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> getMeasurementsMap() {
      return internalGetMeasurements().getMap();
    }
    /**
     * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
     */

    public io.bloombox.schema.product.struct.testing.TestValue getMeasurementsOrDefault(
        java.lang.String key,
        io.bloombox.schema.product.struct.testing.TestValue defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> map =
          internalGetMeasurements().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
     */

    public io.bloombox.schema.product.struct.testing.TestValue getMeasurementsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> map =
          internalGetMeasurements().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearMeasurements() {
      internalGetMutableMeasurements().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
     */

    public Builder removeMeasurements(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableMeasurements().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue>
    getMutableMeasurements() {
      return internalGetMutableMeasurements().getMutableMap();
    }
    /**
     * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
     */
    public Builder putMeasurements(
        java.lang.String key,
        io.bloombox.schema.product.struct.testing.TestValue value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableMeasurements().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .structs.labtesting.TestValue&gt; measurements = 2;</code>
     */

    public Builder putAllMeasurements(
        java.util.Map<java.lang.String, io.bloombox.schema.product.struct.testing.TestValue> values) {
      internalGetMutableMeasurements().getMutableMap()
          .putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:structs.labtesting.Pesticides)
  }

  // @@protoc_insertion_point(class_scope:structs.labtesting.Pesticides)
  private static final io.bloombox.schema.product.struct.testing.Pesticides DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bloombox.schema.product.struct.testing.Pesticides();
  }

  public static io.bloombox.schema.product.struct.testing.Pesticides getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Pesticides>
      PARSER = new com.google.protobuf.AbstractParser<Pesticides>() {
    public Pesticides parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pesticides(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Pesticides> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Pesticides> getParserForType() {
    return PARSER;
  }

  public io.bloombox.schema.product.struct.testing.Pesticides getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

